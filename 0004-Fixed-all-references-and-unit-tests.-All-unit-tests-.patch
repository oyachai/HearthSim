From 3853a2acde769aad997cbc787d1a26a368ce8d27 Mon Sep 17 00:00:00 2001
From: geoffrey-liu <geoffrey.p.liu@gmail.com>
Date: Mon, 1 Dec 2014 22:17:56 -0500
Subject: [PATCH 4/6] Fixed all references and unit tests. All unit tests
 passed.

All references and instantiations of Minion removed throughout the entire codebase and replaced with BaseEntity where necessary.
This allows for polymorphic behaviour and runtime creation of Heroes and Minions. All test cases and unit tests passed.

---
 src/main/java/com/hearthsim/Game.java              |    9 +-
 src/main/java/com/hearthsim/card/Card.java         |   12 +-
 src/main/java/com/hearthsim/card/minion/Hero.java  |    4 +-
 .../java/com/hearthsim/card/minion/Minion.java     |  151 +--
 .../java/com/hearthsim/card/minion/NewMinion.java  | 1016 --------------------
 .../card/minion/concrete/AbusiveSergeant.java      |    3 +-
 .../card/minion/concrete/AcidicSwampOoze.java      |    3 +-
 .../card/minion/concrete/AldorPeacekeeper.java     |    3 +-
 .../card/minion/concrete/Alexstrasza.java          |    3 +-
 .../card/minion/concrete/AncientBrewmaster.java    |    3 +-
 .../card/minion/concrete/AncientOfLore.java        |    3 +-
 .../card/minion/concrete/AncientOfWar.java         |    3 +-
 .../card/minion/concrete/ArathiWeaponsmith.java    |    3 +-
 .../card/minion/concrete/ArcaneGolem.java          |    3 +-
 .../card/minion/concrete/ArgentProtector.java      |    3 +-
 .../hearthsim/card/minion/concrete/Armorsmith.java |    3 +-
 .../hearthsim/card/minion/concrete/AzureDrake.java |    3 +-
 .../card/minion/concrete/BigGameHunter.java        |    3 +-
 .../card/minion/concrete/BloodKnight.java          |    7 +-
 .../card/minion/concrete/ColdlightOracle.java      |    3 +-
 .../card/minion/concrete/ColdlightSeer.java        |    6 +-
 .../card/minion/concrete/CrazedAlchemist.java      |    4 +-
 .../card/minion/concrete/CruelTaskmaster.java      |    4 +-
 .../card/minion/concrete/DarkIronDwarf.java        |    4 +-
 .../card/minion/concrete/DarkscaleHealer.java      |    6 +-
 .../card/minion/concrete/DefenderOfArgus.java      |    8 +-
 .../card/minion/concrete/DragonlingMechanic.java   |    6 +-
 .../card/minion/concrete/DreadInfernal.java        |    8 +-
 .../hearthsim/card/minion/concrete/DustDevil.java  |    4 +-
 .../card/minion/concrete/EarthElemental.java       |    4 +-
 .../card/minion/concrete/EarthenRingFarseer.java   |    4 +-
 .../card/minion/concrete/ElvenArcher.java          |   10 +-
 .../hearthsim/card/minion/concrete/Felguard.java   |    4 +-
 .../card/minion/concrete/FireElemental.java        |    4 +-
 .../hearthsim/card/minion/concrete/FlameImp.java   |    4 +-
 .../card/minion/concrete/FlesheatingGhoul.java     |    4 +-
 .../card/minion/concrete/FrostwolfWarlord.java     |    4 +-
 .../card/minion/concrete/GnomishInventor.java      |    4 +-
 .../card/minion/concrete/GrimscaleOracle.java      |   18 +-
 .../card/minion/concrete/GuardianOfKings.java      |    4 +-
 .../card/minion/concrete/GurubashiBerserker.java   |    2 +-
 .../card/minion/concrete/HealingTotem.java         |    4 +-
 .../card/minion/concrete/Houndmaster.java          |    4 +-
 .../card/minion/concrete/InjuredBlademaster.java   |    4 +-
 .../card/minion/concrete/IronbeakOwl.java          |    4 +-
 .../card/minion/concrete/IronforgeRifleman.java    |    4 +-
 .../com/hearthsim/card/minion/concrete/Leokk.java  |   14 +-
 .../card/minion/concrete/MurlocTidehunter.java     |    4 +-
 .../hearthsim/card/minion/concrete/Nightblade.java |    4 +-
 .../card/minion/concrete/NorthshireCleric.java     |    4 +-
 .../card/minion/concrete/NoviceEngineer.java       |    4 +-
 .../card/minion/concrete/PriestessOfElune.java     |    4 +-
 .../hearthsim/card/minion/concrete/RaidLeader.java |   14 +-
 .../card/minion/concrete/RazorfenHunter.java       |    6 +-
 .../card/minion/concrete/ShatteredSunCleric.java   |    4 +-
 .../card/minion/concrete/SilverHandKnight.java     |    6 +-
 .../card/minion/concrete/Spellbreaker.java         |    4 +-
 .../card/minion/concrete/StampedingKodo.java       |   18 +-
 .../card/minion/concrete/StarvingBuzzard.java      |    2 +-
 .../card/minion/concrete/StormpikeCommando.java    |    4 +-
 .../card/minion/concrete/StormwindChampion.java    |   14 +-
 .../hearthsim/card/minion/concrete/Succubus.java   |    4 +-
 .../card/minion/concrete/SunfuryProtector.java     |    4 +-
 .../card/minion/concrete/TempleEnforcer.java       |    4 +-
 .../card/minion/concrete/TheBlackKnight.java       |    4 +-
 .../hearthsim/card/minion/concrete/TimberWolf.java |   14 +-
 .../card/minion/concrete/TwilightDrake.java        |    4 +-
 .../hearthsim/card/minion/concrete/Undertaker.java |    4 +-
 .../card/minion/concrete/VioletTeacher.java        |    4 +-
 .../card/minion/concrete/VoodooDoctor.java         |    4 +-
 .../card/minion/concrete/WaterElemental.java       |    4 +-
 .../card/minion/concrete/Windspeaker.java          |    4 +-
 .../card/minion/concrete/YoungPriestess.java       |    2 +-
 .../com/hearthsim/card/minion/heroes/Druid.java    |    3 +-
 .../com/hearthsim/card/minion/heroes/Hunter.java   |    3 +-
 .../com/hearthsim/card/minion/heroes/Mage.java     |    3 +-
 .../com/hearthsim/card/minion/heroes/NewHero.java  |   10 +-
 .../com/hearthsim/card/minion/heroes/Paladin.java  |    2 +-
 .../com/hearthsim/card/minion/heroes/Priest.java   |    5 +-
 .../com/hearthsim/card/minion/heroes/Shaman.java   |   10 +-
 .../com/hearthsim/card/minion/heroes/Warlock.java  |    3 +-
 .../com/hearthsim/card/spellcard/SpellCard.java    |    3 +-
 .../com/hearthsim/card/spellcard/SpellDamage.java  |    5 +-
 .../card/spellcard/concrete/AncestralHealing.java  |    4 +-
 .../card/spellcard/concrete/AncestralSpirit.java   |    4 +-
 .../card/spellcard/concrete/AnimalCompanion.java   |   12 +-
 .../card/spellcard/concrete/ArcaneExplosion.java   |    7 +-
 .../card/spellcard/concrete/ArcaneIntellect.java   |    4 +-
 .../card/spellcard/concrete/Assassinate.java       |    4 +-
 .../card/spellcard/concrete/Backstab.java          |    4 +-
 .../card/spellcard/concrete/BattleRage.java        |    7 +-
 .../hearthsim/card/spellcard/concrete/Bite.java    |    2 +-
 .../card/spellcard/concrete/BlessedChampion.java   |    4 +-
 .../card/spellcard/concrete/BlessingOfKings.java   |    4 +-
 .../card/spellcard/concrete/BlessingOfMight.java   |    4 +-
 .../card/spellcard/concrete/Bloodlust.java         |    7 +-
 .../hearthsim/card/spellcard/concrete/Charge.java  |    4 +-
 .../card/spellcard/concrete/CircleOfHealing.java   |    9 +-
 .../hearthsim/card/spellcard/concrete/Claw.java    |    2 +-
 .../card/spellcard/concrete/Consecration.java      |    7 +-
 .../card/spellcard/concrete/Corruption.java        |    4 +-
 .../card/spellcard/concrete/DeadlyPoison.java      |    2 +-
 .../card/spellcard/concrete/Demonfire.java         |    4 +-
 .../card/spellcard/concrete/DivineFavor.java       |    4 +-
 .../card/spellcard/concrete/DivineSpirit.java      |    4 +-
 .../card/spellcard/concrete/DrainLife.java         |    4 +-
 .../card/spellcard/concrete/Equality.java          |    9 +-
 .../card/spellcard/concrete/ExcessMana.java        |    4 +-
 .../hearthsim/card/spellcard/concrete/Execute.java |    4 +-
 .../card/spellcard/concrete/FanOfKnives.java       |    7 +-
 .../card/spellcard/concrete/Flamestrike.java       |    7 +-
 .../card/spellcard/concrete/FrostNova.java         |    7 +-
 .../card/spellcard/concrete/FrostShock.java        |    4 +-
 .../card/spellcard/concrete/Frostbolt.java         |    4 +-
 .../card/spellcard/concrete/HammerOfWrath.java     |    4 +-
 .../card/spellcard/concrete/HandOfProtection.java  |    4 +-
 .../card/spellcard/concrete/HealingTouch.java      |    4 +-
 .../card/spellcard/concrete/Hellfire.java          |    8 +-
 .../card/spellcard/concrete/HeroicStrike.java      |    4 +-
 .../com/hearthsim/card/spellcard/concrete/Hex.java |    4 +-
 .../card/spellcard/concrete/HolyFire.java          |    4 +-
 .../card/spellcard/concrete/HolyLight.java         |    4 +-
 .../card/spellcard/concrete/HolyNova.java          |    8 +-
 .../card/spellcard/concrete/Humility.java          |    4 +-
 .../card/spellcard/concrete/HuntersMark.java       |    4 +-
 .../card/spellcard/concrete/InnerFire.java         |    4 +-
 .../card/spellcard/concrete/InnerRage.java         |    4 +-
 .../card/spellcard/concrete/Innervate.java         |    4 +-
 .../card/spellcard/concrete/KillCommand.java       |    4 +-
 .../card/spellcard/concrete/LavaBurst.java         |    4 +-
 .../card/spellcard/concrete/LayOnHands.java        |    4 +-
 .../card/spellcard/concrete/LightningBolt.java     |    4 +-
 .../card/spellcard/concrete/MarkOfTheWild.java     |    4 +-
 .../card/spellcard/concrete/MindBlast.java         |    4 +-
 .../card/spellcard/concrete/MindControl.java       |    4 +-
 .../card/spellcard/concrete/MirrorImage.java       |    4 +-
 .../card/spellcard/concrete/MortalCoil.java        |    4 +-
 .../card/spellcard/concrete/Polymorph.java         |    4 +-
 .../card/spellcard/concrete/PowerWordShield.java   |    4 +-
 .../card/spellcard/concrete/RockbiterWeapon.java   |    4 +-
 .../card/spellcard/concrete/SacrificialPact.java   |    4 +-
 .../com/hearthsim/card/spellcard/concrete/Sap.java |    6 +-
 .../card/spellcard/concrete/SavageRoar.java        |    6 +-
 .../card/spellcard/concrete/ShadowBolt.java        |    4 +-
 .../card/spellcard/concrete/ShadowWordDeath.java   |    4 +-
 .../card/spellcard/concrete/ShadowWordPain.java    |    4 +-
 .../card/spellcard/concrete/ShieldBlock.java       |    4 +-
 .../hearthsim/card/spellcard/concrete/Shiv.java    |    4 +-
 .../hearthsim/card/spellcard/concrete/Silence.java |    4 +-
 .../card/spellcard/concrete/SinisterStrike.java    |    4 +-
 .../hearthsim/card/spellcard/concrete/Slam.java    |    4 +-
 .../hearthsim/card/spellcard/concrete/Sprint.java  |    4 +-
 .../card/spellcard/concrete/Starfire.java          |    4 +-
 .../hearthsim/card/spellcard/concrete/Swipe.java   |    6 +-
 .../hearthsim/card/spellcard/concrete/TheCoin.java |    6 +-
 .../card/spellcard/concrete/TotemicMight.java      |    6 +-
 .../card/spellcard/concrete/Whirlwind.java         |    8 +-
 .../card/spellcard/concrete/WildGrowth.java        |    4 +-
 .../card/spellcard/concrete/Windfury.java          |    4 +-
 .../java/com/hearthsim/card/weapon/WeaponCard.java |    3 +-
 .../card/weapon/concrete/StormforgedAxe.java       |    3 +-
 src/main/java/com/hearthsim/entity/BaseEntity.java |  314 +++---
 .../event/deathrattle/DeathrattleAction.java       |    3 +-
 .../deathrattle/DeathrattleCardDrawAction.java     |    3 +-
 .../event/deathrattle/DeathrattleDamageAll.java    |    7 +-
 .../deathrattle/DeathrattleDamageAllMinions.java   |    7 +-
 .../DeathrattleDealDamageEnemyHeroAction.java      |    3 +-
 .../deathrattle/DeathrattleHealHeroAction.java     |    3 +-
 .../deathrattle/DeathrattleSummonMinionAction.java |    7 +-
 src/main/java/com/hearthsim/model/BoardModel.java  |   46 +-
 src/main/java/com/hearthsim/model/PlayerModel.java |    5 +-
 .../player/playercontroller/ArtificialPlayer.java  |   11 +-
 src/main/java/com/hearthsim/util/HearthAction.java |    9 +-
 src/main/java/com/hearthsim/util/MinionList.java   |   11 +-
 .../util/factory/BoardStateFactoryBase.java        |   29 +-
 .../util/factory/SparseBoardStateFactory.java      |   15 +-
 .../com/hearthsim/test/groovy/card/CardSpec.groovy |    5 +-
 .../java/com/hearthsim/test/TestDeepClone.java     |   14 +-
 .../hearthsim/test/card/TestAncestralHealing.java  |   14 +-
 .../hearthsim/test/card/TestAnimalCompanion.java   |   13 +-
 .../hearthsim/test/card/TestArcaneExplosion.java   |    4 +-
 .../hearthsim/test/card/TestArcaneIntellect.java   |    6 +-
 .../com/hearthsim/test/card/TestAssassinate.java   |    8 +-
 .../java/com/hearthsim/test/card/TestBackstab.java |    9 +-
 .../java/com/hearthsim/test/card/TestBite.java     |    6 +-
 .../hearthsim/test/card/TestBlessedChampion.java   |    8 +-
 .../hearthsim/test/card/TestBlessingOfMight.java   |    8 +-
 .../com/hearthsim/test/card/TestBloodlust.java     |   12 +-
 .../java/com/hearthsim/test/card/TestCharge.java   |    6 +-
 .../java/com/hearthsim/test/card/TestClaw.java     |    8 +-
 .../com/hearthsim/test/card/TestConsecration.java  |    6 +-
 .../com/hearthsim/test/card/TestCorruption.java    |    6 +-
 .../com/hearthsim/test/card/TestDeadlyPoison.java  |   10 +-
 .../com/hearthsim/test/card/TestDemonfire.java     |   10 +-
 .../com/hearthsim/test/card/TestDivineSpirit.java  |   10 +-
 .../com/hearthsim/test/card/TestDrainLife.java     |    8 +-
 .../java/com/hearthsim/test/card/TestEquality.java |    6 +-
 .../java/com/hearthsim/test/card/TestExecute.java  |    8 +-
 .../com/hearthsim/test/card/TestFanOfKnives.java   |    8 +-
 .../java/com/hearthsim/test/card/TestFireball.java |   14 +-
 .../com/hearthsim/test/card/TestFrostShock.java    |    6 +-
 .../com/hearthsim/test/card/TestHammerOfWrath.java |    6 +-
 .../com/hearthsim/test/card/TestHealingTouch.java  |    8 +-
 .../java/com/hearthsim/test/card/TestHellfire.java |    6 +-
 src/test/java/com/hearthsim/test/card/TestHex.java |   10 +-
 .../java/com/hearthsim/test/card/TestHolyNova.java |   10 +-
 .../com/hearthsim/test/card/TestHolySmite.java     |   14 +-
 .../java/com/hearthsim/test/card/TestHumility.java |    8 +-
 .../com/hearthsim/test/card/TestHuntersMark.java   |   10 +-
 .../com/hearthsim/test/card/TestInnerFire.java     |    8 +-
 .../com/hearthsim/test/card/TestInnerRage.java     |   10 +-
 .../com/hearthsim/test/card/TestInnervate.java     |   10 +-
 .../com/hearthsim/test/card/TestKillCommand.java   |    2 +-
 .../com/hearthsim/test/card/TestMarkOfTheWild.java |   10 +-
 .../com/hearthsim/test/card/TestMindControl.java   |    8 +-
 .../com/hearthsim/test/card/TestMirroImage.java    |    8 +-
 .../com/hearthsim/test/card/TestMortalCoil.java    |   10 +-
 .../com/hearthsim/test/card/TestNightblade.java    |    8 +-
 .../hearthsim/test/card/TestRockbiterWeapon.java   |    6 +-
 .../hearthsim/test/card/TestSacrificialPact.java   |    8 +-
 src/test/java/com/hearthsim/test/card/TestSap.java |   12 +-
 .../com/hearthsim/test/card/TestSavageRoar.java    |    8 +-
 .../hearthsim/test/card/TestShadowWordDeath.java   |    8 +-
 .../hearthsim/test/card/TestShadowWordPain.java    |    8 +-
 .../java/com/hearthsim/test/card/TestSlam.java     |   10 +-
 .../java/com/hearthsim/test/card/TestSwipe.java    |   10 +-
 .../com/hearthsim/test/card/TestWildGrowth.java    |   10 +-
 .../com/hearthsim/test/heroes/TestBaseEntity.java  |  155 ++-
 .../java/com/hearthsim/test/heroes/TestDruid.java  |   13 +-
 .../java/com/hearthsim/test/heroes/TestHunter.java |   14 +-
 .../java/com/hearthsim/test/heroes/TestMage.java   |   14 +-
 .../com/hearthsim/test/heroes/TestPaladin.java     |   14 +-
 .../java/com/hearthsim/test/heroes/TestPriest.java |   16 +-
 .../java/com/hearthsim/test/heroes/TestRogue.java  |   14 +-
 .../java/com/hearthsim/test/heroes/TestShaman.java |   14 +-
 .../com/hearthsim/test/heroes/TestWarlock.java     |   18 +-
 .../com/hearthsim/test/heroes/TestWarrior.java     |   14 +-
 .../com/hearthsim/test/minion/TestAbomination.java |   14 +-
 .../hearthsim/test/minion/TestAbusiveSergeant.java |    8 +-
 .../hearthsim/test/minion/TestAcidicSwampOoze.java |    8 +-
 .../hearthsim/test/minion/TestAcolyteOfPain.java   |    6 +-
 .../test/minion/TestAldorPeacekeeper.java          |    6 +-
 .../com/hearthsim/test/minion/TestAlexstrasza.java |    6 +-
 .../hearthsim/test/minion/TestAmaniBerserker.java  |    8 +-
 .../hearthsim/test/minion/TestAncientOfLore.java   |    4 +-
 .../test/minion/TestArathiWeaponsmith.java         |    6 +-
 .../com/hearthsim/test/minion/TestArcaneGolem.java |    8 +-
 .../com/hearthsim/test/minion/TestArchmage.java    |    8 +-
 .../test/minion/TestArchmageAntonidas.java         |    6 +-
 .../hearthsim/test/minion/TestArgentProtector.java |    6 +-
 .../com/hearthsim/test/minion/TestArmorsmith.java  |    4 +-
 .../hearthsim/test/minion/TestBigGameHunter.java   |    7 +-
 .../com/hearthsim/test/minion/TestBloodKnight.java |   10 +-
 .../hearthsim/test/minion/TestBloodfenRaptor.java  |   24 +-
 .../hearthsim/test/minion/TestCairneBloodhoof.java |   24 +-
 .../hearthsim/test/minion/TestColdlightOracle.java |   10 +-
 .../hearthsim/test/minion/TestColdlightSeer.java   |    6 +-
 .../hearthsim/test/minion/TestCrazedAlchemist.java |    6 +-
 .../hearthsim/test/minion/TestCruelTaskmaster.java |    6 +-
 .../hearthsim/test/minion/TestDarkIronDwarf.java   |    8 +-
 .../hearthsim/test/minion/TestDarkscaleHealer.java |    8 +-
 .../hearthsim/test/minion/TestDefenderOfArgus.java |    6 +-
 .../test/minion/TestDragonlingMechanic.java        |    6 +-
 .../hearthsim/test/minion/TestDreadInfernal.java   |    6 +-
 .../com/hearthsim/test/minion/TestDustDevil.java   |    6 +-
 .../test/minion/TestEarthenRingFarseer.java        |    6 +-
 .../com/hearthsim/test/minion/TestElvenArcher.java |    6 +-
 .../hearthsim/test/minion/TestFaerieDragon.java    |    6 +-
 .../com/hearthsim/test/minion/TestFelguard.java    |    6 +-
 .../com/hearthsim/test/minion/TestFlameImp.java    |    6 +-
 .../test/minion/TestFlesheatingGhoul.java          |    8 +-
 .../test/minion/TestFrostwolfWarlord.java          |    6 +-
 .../hearthsim/test/minion/TestGnomishInventor.java |    6 +-
 .../hearthsim/test/minion/TestGrimscaleOracle.java |    8 +-
 .../test/minion/TestGurubashiBerserker.java        |   10 +-
 .../com/hearthsim/test/minion/TestHoundmaster.java |    4 +-
 .../com/hearthsim/test/minion/TestIronbeakOwl.java |    6 +-
 .../com/hearthsim/test/minion/TestLeperGnome.java  |   10 +-
 .../com/hearthsim/test/minion/TestLootHorder.java  |    2 +-
 .../test/minion/TestNorthshireCleric.java          |    6 +-
 .../com/hearthsim/test/minion/TestRaidLeader.java  |    8 +-
 .../hearthsim/test/minion/TestScarletCrusader.java |   14 +-
 .../test/minion/TestShatteredSunCleric.java        |    6 +-
 .../test/minion/TestStormwindChampion.java         |   10 +-
 .../test/minion/TestStranglethornTiger.java        |    2 +-
 .../test/minion/TestSunfuryProtector.java          |    6 +-
 .../hearthsim/test/minion/TestTheBlackKnight.java  |    6 +-
 .../com/hearthsim/test/minion/TestUndertaker.java  |    8 +-
 .../hearthsim/test/minion/TestUnstableGhoul.java   |   14 +-
 .../hearthsim/test/minion/TestVioletTeacher.java   |    6 +-
 .../hearthsim/test/minion/TestWaterElemental.java  |    8 +-
 .../com/hearthsim/test/minion/TestWindspeaker.java |    6 +-
 .../hearthsim/test/minion/TestYoungPriestess.java  |    6 +-
 .../com/hearthsim/test/minion/TestZombieChow.java  |   14 +-
 src/test/java/com/hearthsim/test/testCard.java     |   18 +-
 src/test/java/com/hearthsim/test/testGame.java     |    5 +-
 .../com/hearthsim/test/weapon/TestFieryWarAxe.java |    9 +-
 .../hearthsim/test/weapon/TestLightsJustice.java   |    9 +-
 298 files changed, 1312 insertions(+), 2319 deletions(-)
 delete mode 100644 src/main/java/com/hearthsim/card/minion/NewMinion.java

diff --git a/src/main/java/com/hearthsim/Game.java b/src/main/java/com/hearthsim/Game.java
index e840c5d..2e31cb6 100644
--- a/src/main/java/com/hearthsim/Game.java
+++ b/src/main/java/com/hearthsim/Game.java
@@ -4,6 +4,7 @@ import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.TheCoin;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.exception.HSInvalidPlayerIndexException;
 import com.hearthsim.model.BoardModel;
@@ -142,14 +143,14 @@ public class Game {
     	toRet.data_.resetHand();
     	toRet.data_.resetMinions();
         
-        for (Minion targetMinion : toRet.data_.getCurrentPlayer().getMinions()) {
+        for (BaseEntity targetMinion : toRet.data_.getCurrentPlayer().getMinions()) {
             try {
                 toRet = targetMinion.startTurn(PlayerSide.CURRENT_PLAYER, toRet, toRet.data_.getCurrentPlayer().getDeck(), toRet.data_.getWaitingPlayer().getDeck());
             } catch (HSInvalidPlayerIndexException e) {
                 e.printStackTrace();
             }
         }
-        for (Minion targetMinion : toRet.data_.getWaitingPlayer().getMinions()) {
+        for (BaseEntity targetMinion : toRet.data_.getWaitingPlayer().getMinions()) {
             try {
             	toRet = targetMinion.startTurn(PlayerSide.WAITING_PLAYER, toRet, toRet.data_.getCurrentPlayer().getDeck(), toRet.data_.getWaitingPlayer().getDeck());
             } catch (HSInvalidPlayerIndexException e) {
@@ -191,7 +192,7 @@ public class Game {
 
     	//To Do: The minions should trigger end-of-turn effects in the order that they were played
         for (int index = 0; index < toRet.data_.getCurrentPlayer().getMinions().size(); ++index) {
-            Minion targetMinion = toRet.data_.getCurrentPlayer().getMinions().get(index);
+            BaseEntity targetMinion = toRet.data_.getCurrentPlayer().getMinions().get(index);
             try {
                 toRet = targetMinion.endTurn(PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1);
             } catch (HSException e) {
@@ -199,7 +200,7 @@ public class Game {
             }
         }
         for (int index = 0; index < toRet.data_.getWaitingPlayer().getMinions().size(); ++index) {
-            Minion targetMinion = toRet.data_.getWaitingPlayer().getMinions().get(index);
+            BaseEntity targetMinion = toRet.data_.getWaitingPlayer().getMinions().get(index);
             try {
                 toRet = targetMinion.endTurn(PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1);
             } catch (HSException e) {
diff --git a/src/main/java/com/hearthsim/card/Card.java b/src/main/java/com/hearthsim/card/Card.java
index 0c23def..61c31fd 100644
--- a/src/main/java/com/hearthsim/card/Card.java
+++ b/src/main/java/com/hearthsim/card/Card.java
@@ -196,7 +196,7 @@ public class Card implements DeepCopyable {
      * @param boardModel
 * @return
      */
-    public boolean canBeUsedOn(PlayerSide playerSide, Minion minion, BoardModel boardModel) {
+    public boolean canBeUsedOn(PlayerSide playerSide, BaseEntity minion, BoardModel boardModel) {
         return true;
     }
 
@@ -242,16 +242,16 @@ public class Card implements DeepCopyable {
 
 		//Notify all other cards/characters of the card's use
 		if (toRet != null) {
-			ArrayList<Minion> tmpList = new ArrayList<Minion>(7);
+			ArrayList<BaseEntity> tmpList = new ArrayList<BaseEntity>(7);
             for (Card card : toRet.data_.getCurrentPlayerHand()) {
                 toRet = card.otherCardUsedEvent(PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, this, toRet, deckPlayer0, deckPlayer1);
             }
 			toRet = toRet.data_.getCurrentPlayerHero().otherCardUsedEvent(PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, this, toRet, deckPlayer0, deckPlayer1);
 			{
-                for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+                for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
                     tmpList.add(minion);
                 }
-				for (Minion minion : tmpList) {
+				for (BaseEntity minion : tmpList) {
 					if (!minion.isSilenced())
 						toRet = minion.otherCardUsedEvent(PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, this, toRet, deckPlayer0, deckPlayer1);
 				}
@@ -262,10 +262,10 @@ public class Card implements DeepCopyable {
 			toRet = toRet.data_.getWaitingPlayerHero().otherCardUsedEvent(PlayerSide.WAITING_PLAYER, PlayerSide.CURRENT_PLAYER, this, toRet, deckPlayer0, deckPlayer1);
 			{
 				tmpList.clear();
-                for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+                for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
                     tmpList.add(minion);
                 }
-				for (Minion minion : tmpList) {
+				for (BaseEntity minion : tmpList) {
 					if (!minion.isSilenced())
 						toRet = minion.otherCardUsedEvent(PlayerSide.WAITING_PLAYER, PlayerSide.CURRENT_PLAYER, this, toRet, deckPlayer0, deckPlayer1);
 				}
diff --git a/src/main/java/com/hearthsim/card/minion/Hero.java b/src/main/java/com/hearthsim/card/minion/Hero.java
index 7402672..ad04a23 100644
--- a/src/main/java/com/hearthsim/card/minion/Hero.java
+++ b/src/main/java/com/hearthsim/card/minion/Hero.java
@@ -98,7 +98,7 @@ public class Hero extends BaseEntity
 	@Override
 	public HearthTreeNode attack(
 			PlayerSide targetMinionPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -133,7 +133,7 @@ public class Hero extends BaseEntity
 	}
 	
 	@Override
-    public boolean canBeUsedOn(PlayerSide playerSide, Minion minion, BoardModel boardModel) {
+    public boolean canBeUsedOn(PlayerSide playerSide, BaseEntity minion, BoardModel boardModel) {
 		if (hasBeenUsed)
 			return false;
 		if (!minion.isHeroTargetable())
diff --git a/src/main/java/com/hearthsim/card/minion/Minion.java b/src/main/java/com/hearthsim/card/minion/Minion.java
index 54bcfe1..ca82f24 100644
--- a/src/main/java/com/hearthsim/card/minion/Minion.java
+++ b/src/main/java/com/hearthsim/card/minion/Minion.java
@@ -1,5 +1,6 @@
 package com.hearthsim.card.minion;
 
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.ImplementedCardList;
@@ -436,7 +437,7 @@ public class Minion extends BaseEntity {
 			boolean handleMinionDeath)
 		throws HSException
 	{
-		Minion m = new Minion();
+
 		if (!divineShield_) {
 			byte totalDamage = isSpellDamage ? (byte)(damage + boardState.data_.getSpellDamage(attackPlayerSide)) : damage;
 			health_ = (byte)(health_ - totalDamage);
@@ -445,12 +446,12 @@ public class Minion extends BaseEntity {
 			HearthTreeNode toRet = boardState;
 			toRet = toRet.data_.getCurrentPlayerHero().minionDamagedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
 			for (int j = 0; j < PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
-				if (!PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).silenced_)
+				if (!PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).isSilenced())
 					toRet = PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).minionDamagedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
 			}
 			toRet = toRet.data_.getWaitingPlayerHero().minionDamagedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
 			for (int j = 0; j < PlayerSide.WAITING_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
-				if (!PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).silenced_)
+				if (!PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).isSilenced())
 					toRet = PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).minionDamagedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
 			}
 			
@@ -489,12 +490,12 @@ public class Minion extends BaseEntity {
         //Notify all that it is dead
         toRet = toRet.data_.getCurrentPlayerHero().minionDeadEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
         for (int j = 0; j < PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
-            if (!PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).silenced_)
+            if (!PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).isSilenced())
                 toRet = PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).minionDeadEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
         }
         toRet = toRet.data_.getWaitingPlayerHero().minionDeadEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
         for (int j = 0; j < PlayerSide.WAITING_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
-            if (!PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).silenced_)
+            if (!PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).isSilenced())
                 toRet = PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).minionDeadEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
         }
 
@@ -560,13 +561,13 @@ public class Minion extends BaseEntity {
 			//Notify all that it the minion is healed
 			HearthTreeNode toRet = boardState;
 			toRet = toRet.data_.getCurrentPlayerHero().minionHealedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-            for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!minion.silenced_)
+            for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+                if (!minion.isSilenced())
                     toRet = minion.minionHealedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
             }
 			toRet = toRet.data_.getWaitingPlayerHero().minionHealedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-            for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!minion.silenced_)
+            for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+                if (!minion.isSilenced())
                     toRet = minion.minionHealedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
             }
 			return toRet;
@@ -576,7 +577,7 @@ public class Minion extends BaseEntity {
 	
 	
 	@Override
-    public boolean canBeUsedOn(PlayerSide playerSide, Minion minion, BoardModel boardModel) {
+    public boolean canBeUsedOn(PlayerSide playerSide, BaseEntity minion, BoardModel boardModel) {
         return playerSide != PlayerSide.WAITING_PLAYER && !hasBeenUsed;
     }
 
@@ -656,7 +657,7 @@ public class Minion extends BaseEntity {
 	 * @throws HSException
 	 */
 	public HearthTreeNode useUntargetableBattlecry(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -672,7 +673,7 @@ public class Minion extends BaseEntity {
 	}
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -712,7 +713,7 @@ public class Minion extends BaseEntity {
 		if (side == PlayerSide.WAITING_PLAYER)
 			return null;
 		
-		HearthTreeNode toRet = this.summonMinion(side, (Minion) targetMinion, boardState, deckPlayer0, deckPlayer1, false);
+		HearthTreeNode toRet = this.summonMinion(side, targetMinion, boardState, deckPlayer0, deckPlayer1, false);
 		if (toRet != null) { //summon succeeded, now let's use up our mana
 			toRet.data_.getCurrentPlayer().subtractMana(this.mana_);
 			toRet.data_.removeCard_hand(this);
@@ -721,7 +722,7 @@ public class Minion extends BaseEntity {
 			for (BattlecryTargetType btt : this.getBattlecryTargets()) {
 				switch  (btt) {
 				case NO_TARGET:
-					toRet = this.useUntargetableBattlecry((Minion) targetMinion, toRet, deckPlayer0, deckPlayer1, singleRealizationOnly);
+					toRet = this.useUntargetableBattlecry(targetMinion, toRet, deckPlayer0, deckPlayer1, singleRealizationOnly);
 					break;
 				case ENEMY_HERO:
 					toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, PlayerSide.WAITING_PLAYER.getPlayer(toRet).getHero(), toRet, deckPlayer0, deckPlayer1);
@@ -730,36 +731,36 @@ public class Minion extends BaseEntity {
 					toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getHero(), toRet, deckPlayer0, deckPlayer1);
 					break;
 				case ENEMY_MINIONS:
-					for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+					for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 						toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
 					}
 					break;
 				case FRIENDLY_MINIONS:
-					for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+					for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 						if (minion != this)
 							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
 					}
 					break;
 				case ENEMY_BEASTS:
-					for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+					for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 						if (minion instanceof Beast)
 							toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
 					}
 					break;
 				case FRIENDLY_BEASTS:
-					for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+					for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 						if (minion != this && minion instanceof Beast)
 							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
 					}
 					break;
 				case ENEMY_MURLOCS:
-					for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+					for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 						if (minion instanceof Murloc)
 							toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
 					}
 					break;
 				case FRIENDLY_MURLOCS:
-					for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+					for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 						if (minion != this && minion instanceof Murloc)
 							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
 					}
@@ -772,15 +773,15 @@ public class Minion extends BaseEntity {
 			
 			//Notify all that a minion is placed
 			toRet = toRet.data_.getCurrentPlayerHero().minionPlacedEvent(toRet);
-			for (Iterator<Minion> iter = toRet.data_.getCurrentPlayer().getMinions().iterator(); iter.hasNext();) {
-				Minion minion = iter.next();
-				if (!minion.silenced_)
+			for (Iterator<BaseEntity> iter = toRet.data_.getCurrentPlayer().getMinions().iterator(); iter.hasNext();) {
+				BaseEntity minion = iter.next();
+				if (!minion.isSilenced())
 					toRet = minion.minionPlacedEvent(toRet);
 			}
 			toRet = toRet.data_.getWaitingPlayerHero().minionPlacedEvent(toRet);
-			for (Iterator<Minion> iter = toRet.data_.getWaitingPlayer().getMinions().iterator(); iter.hasNext();) {
-				Minion minion = iter.next();
-				if (!minion.silenced_)
+			for (Iterator<BaseEntity> iter = toRet.data_.getWaitingPlayer().getMinions().iterator(); iter.hasNext();) {
+				BaseEntity minion = iter.next();
+				if (!minion.isSilenced())
 					toRet = minion.minionPlacedEvent(toRet);
 			}
 		
@@ -807,49 +808,49 @@ public class Minion extends BaseEntity {
      *
      * @return The boardState is manipulated and returned
 	 */
-	public HearthTreeNode summonMinion(
-            PlayerSide targetSide,
-            BaseEntity targetMinion,
-            HearthTreeNode boardState,
-            Deck deckPlayer0,
-            Deck deckPlayer1,
-            boolean wasTransformed)
-		throws HSException
-	{
-		HearthTreeNode toRet = this.summonMinion_core(targetSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
-		
-		if (toRet != null) {
-			toRet.data_.addSpellDamage(targetSide, this.spellDamage_);
-			if (!wasTransformed) {
-				//Notify all that a minion is summoned
-
-				toRet = toRet.data_.getCurrentPlayerHero().minionSummonedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-                    if (!minion.silenced_)
-                        toRet = minion.minionSummonedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                }
-				toRet = toRet.data_.getWaitingPlayerHero().minionSummonedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-                    if (!minion.silenced_)
-                        toRet = minion.minionSummonedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                }
-			} else {
-				//Notify all that a minion is transformed
-				toRet = toRet.data_.getCurrentPlayerHero().minionTransformedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-                    if (!minion.silenced_)
-                        toRet = minion.minionTransformedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                }
-				toRet = toRet.data_.getWaitingPlayerHero().minionTransformedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-                    if (!minion.silenced_)
-                        toRet = minion.minionTransformedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                }
-			}
-		}
-		
-		return toRet;
-	}
+//	public HearthTreeNode summonMinion(
+//            PlayerSide targetSide,
+//            BaseEntity targetMinion,
+//            HearthTreeNode boardState,
+//            Deck deckPlayer0,
+//            Deck deckPlayer1,
+//            boolean wasTransformed)
+//		throws HSException
+//	{
+//		HearthTreeNode toRet = this.summonMinion_core(targetSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
+//		
+//		if (toRet != null) {
+//			toRet.data_.addSpellDamage(targetSide, this.spellDamage_);
+//			if (!wasTransformed) {
+//				//Notify all that a minion is summoned
+//
+//				toRet = toRet.data_.getCurrentPlayerHero().minionSummonedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
+//                for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+//                    if (!minion.isSilenced())
+//                        toRet = minion.minionSummonedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
+//                }
+//				toRet = toRet.data_.getWaitingPlayerHero().minionSummonedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
+//                for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+//                    if (!minion.isSilenced())
+//                        toRet = minion.minionSummonedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
+//                }
+//			} else {
+//				//Notify all that a minion is transformed
+//				toRet = toRet.data_.getCurrentPlayerHero().minionTransformedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
+//                for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+//                    if (!minion.isSilenced())
+//                        toRet = minion.minionTransformedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
+//                }
+//				toRet = toRet.data_.getWaitingPlayerHero().minionTransformedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
+//                for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+//                    if (!minion.isSilenced())
+//                        toRet = minion.minionTransformedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
+//                }
+//			}
+//		}
+//		
+//		return toRet;
+//	}
 	
 	/**
 	 * 
@@ -907,7 +908,7 @@ public class Minion extends BaseEntity {
 	 */
 	public HearthTreeNode attack(
 			PlayerSide targetMinionPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -929,13 +930,13 @@ public class Minion extends BaseEntity {
 		if (toRet != null) {
 			//Notify all that a minion is created
 			toRet = toRet.data_.getCurrentPlayerHero().minionAttackingEvent(toRet);
-            for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!minion.silenced_)
+            for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+                if (!minion.isSilenced())
                     toRet = minion.minionAttackingEvent(toRet);
             }
 			toRet = toRet.data_.getWaitingPlayerHero().minionAttackingEvent(toRet);
-            for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!minion.silenced_)
+            for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+                if (!minion.isSilenced())
                     toRet = minion.minionAttackingEvent(toRet);
             }
 		}
@@ -969,7 +970,7 @@ public class Minion extends BaseEntity {
 	 */
 	protected HearthTreeNode attack_core(
 			PlayerSide targetMinionPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/NewMinion.java b/src/main/java/com/hearthsim/card/minion/NewMinion.java
deleted file mode 100644
index a1378de..0000000
--- a/src/main/java/com/hearthsim/card/minion/NewMinion.java
+++ /dev/null
@@ -1,1016 +0,0 @@
-package com.hearthsim.card.minion;
-
-import com.hearthsim.card.Card;
-import com.hearthsim.card.Deck;
-import com.hearthsim.card.ImplementedCardList;
-import com.hearthsim.entity.BaseEntity;
-import com.hearthsim.event.attack.AttackAction;
-import com.hearthsim.event.deathrattle.DeathrattleAction;
-import com.hearthsim.exception.HSException;
-import com.hearthsim.exception.HSInvalidPlayerIndexException;
-import com.hearthsim.model.BoardModel;
-import com.hearthsim.model.PlayerSide;
-import com.hearthsim.util.factory.BoardStateFactoryBase;
-import com.hearthsim.util.tree.HearthTreeNode;
-import org.json.JSONObject;
-
-import java.util.EnumSet;
-import java.util.Iterator;
-
-public class NewMinion extends BaseEntity {
-
-	public enum BattlecryTargetType {
-		NO_BATTLECRY,
-		NO_TARGET,
-		FRIENDLY_HERO, ENEMY_HERO,
-    	FRIENDLY_MINIONS, ENEMY_MINIONS,
-    	FRIENDLY_BEASTS, ENEMY_BEASTS,
-    	FRIENDLY_MURLOCS, ENEMY_MURLOCS
-    }
-	
-	//This is a flag to tell the BoardState that it can't cheat on the placement of this minion
-	protected boolean placementImportant_ = false;
-
-    public NewMinion() {
-        super();
-        ImplementedCardList cardList = ImplementedCardList.getInstance();
-        ImplementedCardList.ImplementedCard implementedCard = cardList.getCardForClass(this.getClass());
-        if (implementedCard!=null){
-            // only 'Minion' class is not implemented
-            mana_ = (byte) implementedCard.mana_;
-            name_ = implementedCard.name_;
-            //attack_ = (byte) implementedCard.attack_;
-            baseAttack_ = attack_;
-            //health_ = (byte) implementedCard.health_;
-            maxHealth_ = health_;
-            baseHealth_ = health_;
-            taunt_ = implementedCard.taunt_;
-            divineShield_ = implementedCard.divineShield_;
-            windFury_ = implementedCard.windfury_;
-            charge_ = implementedCard.charge_;
-            stealthed_ = implementedCard.stealth_;
-            isInHand_ = true;
-            //todo: spellpower could be deduced from text quite easily
-        }
-
-    }
-
-    /**
-	 * Simplified constructor
-	 * 
-	 * @param name
-	 * @param mana
-	 * @param attack
-	 * @param health
-	 * @param baseAttack
-	 * @param baseHealth
-	 * @param maxHealth
-	 */
-	public NewMinion(String name, byte mana, byte attack, byte health, byte baseAttack, byte baseHealth, byte maxHealth) {
-		this(
-				name,
-				mana,
-				attack,
-				health,
-				baseAttack,
-				(byte)0,
-				(byte)0,
-				baseHealth,
-				maxHealth,
-				(byte)0,
-				(byte)0,
-				false,
-				false,
-				false,
-				false,
-				false,
-				false,
-				false,
-				false,
-				false,
-				true,
-				false,
-				false,
-				false,
-				false,
-				null,
-				null,
-				true,
-				false);
-		
-	}
-
-	public NewMinion(	String name,
-					byte mana,
-					byte attack,
-					byte health,
-					byte baseAttack,
-					byte extraAttackUntilTurnEnd,
-					byte auraAttack,
-					byte baseHealth,
-					byte maxHealth,
-					byte auraHealth,
-					byte spellDamage,
-					boolean taunt,
-					boolean divineShield,
-					boolean windFury,
-					boolean charge,
-					boolean hasAttacked,
-					boolean hasWindFuryAttacked,
-					boolean frozen,
-					boolean silenced,
-					boolean stealthed,
-					boolean heroTargetable,
-					boolean summoned,
-					boolean transformed,
-					boolean destroyOnTurnStart,
-					boolean destroyOnTurnEnd,
-					DeathrattleAction deathrattleAction,
-					AttackAction attackAction,
-					boolean isInHand,
-					boolean hasBeenUsed) {
-		super(name, mana, hasBeenUsed, isInHand);
-		attack_ = attack;
-		health_ = health;
-		taunt_ = taunt;
-		divineShield_ = divineShield;
-		windFury_ = windFury;
-		charge_ = charge;
-		hasAttacked_ = hasAttacked;
-		baseAttack_ = baseAttack;
-		extraAttackUntilTurnEnd_ = extraAttackUntilTurnEnd;
-		hasWindFuryAttacked_ = hasWindFuryAttacked;
-		frozen_ = frozen;
-		silenced_ = silenced;
-		baseHealth_ = baseHealth;
-		maxHealth_ = maxHealth;
-		summoned_ = summoned;
-		transformed_ = transformed;
-		destroyOnTurnStart_ = destroyOnTurnStart;
-		destroyOnTurnEnd_ = destroyOnTurnEnd;
-		deathrattleAction_ = deathrattleAction;
-		attackAction_ = attackAction;
-
-		auraAttack_ = auraAttack;
-		auraHealth_ = auraHealth;
-
-		spellDamage_ = spellDamage;
-
-		stealthed_ = stealthed;
-		heroTargetable_ = heroTargetable;
-	}
-	
-	public boolean getTaunt() {
-		return taunt_;
-	}
-	
-	public void setTaunt(boolean taunt) {
-		taunt_ = taunt;
-	}
-	
-	public byte getHealth() {
-		return health_;
-	}
-	
-	public void setHealth(byte health) {
-		health_ = health;
-	}
-	
-	public void addHealth(byte value) {
-		health_ += value;
-	}
-	
-	public byte getMaxHealth() {
-		return maxHealth_;
-	}
-	
-	public void setMaxHealth(byte health) {
-		maxHealth_ = health;
-	}
-	
-	public void addMaxHealth(byte value) {
-		maxHealth_ += value;
-	}
-	
-	public byte getBaseHealth() {
-		return baseHealth_;
-	}
-	
-	public void setBaseHealth(byte health) {
-		baseHealth_ = health;
-	}
-	
-	public byte getAttack() {
-		return attack_;
-	}
-	
-	public void setAttack(byte attack) {
-		attack_ = attack;
-	}
-	
-	public void addAttack(byte value) {
-		attack_ += value;
-	}
-	
-	public boolean getDivineShield() {
-		return divineShield_;
-	}
-	
-	public void setDivineShield(boolean divineShield) {
-		divineShield_ = divineShield;
-	}
-	
-	public boolean hasAttacked() {
-		return hasAttacked_;
-	}
-	
-	public void hasAttacked(boolean hasAttacked) {
-		hasAttacked_ = hasAttacked;
-	}
-
-	public boolean hasWindFuryAttacked() {
-		return hasWindFuryAttacked_;
-	}
-	
-	public void hasWindFuryAttacked(boolean hasAttacked) {
-		hasWindFuryAttacked_ = hasAttacked;
-	}
-
-	public boolean getCharge() {
-		return charge_;
-	}
-	
-	public void setCharge(boolean value) {
-		charge_ = value;
-	}
-	
-	public boolean getFrozen() {
-		return frozen_;
-	}
-	
-	public void setFrozen(boolean value) {
-		frozen_ = value;
-	}
-	
-	public boolean getWindfury() {
-		return windFury_;
-	}
-	
-	public void setWindfury(boolean value) {
-		windFury_ = value;
-	}
-	
-	public boolean getSummoned() {
-		return summoned_;
-	}
-	
-	public void setSummoned(boolean value) {
-		summoned_ = value;
-	}
-	
-	public boolean getTransformed() {
-		return transformed_;
-	}
-	
-	public void setTransformed(boolean value) {
-		transformed_ = value;
-	}
-	
-	public byte getExtraAttackUntilTurnEnd() {
-		return extraAttackUntilTurnEnd_;
-	}
-	
-	public void setExtraAttackUntilTurnEnd(byte value) {
-		extraAttackUntilTurnEnd_ = value;
-	}
-	
-	public boolean getDestroyOnTurnStart() {
-		return destroyOnTurnStart_;
-	}
-	
-	public void setDestroyOnTurnStart(boolean value) {
-		destroyOnTurnStart_ = value;
-	}
-
-	public boolean getDestroyOnTurnEnd() {
-		return destroyOnTurnEnd_;
-	}
-	
-	public void setDestroyOnTurnEnd(boolean value) {
-		destroyOnTurnEnd_ = value;
-	}
-	
-	public boolean isSilenced() {
-		return silenced_;
-	}
-	
-	public boolean hasDeathrattle() {
-		return deathrattleAction_ != null;
-	}
-
-	public void setDeathrattle(DeathrattleAction action) {
-		deathrattleAction_ = action;
-	}
-	
-	public byte getAuraAttack() {
-		return auraAttack_;
-	}
-
-	public void setAuraAttack(byte value) {
-		auraAttack_ = value;
-	}
-
-	public byte getAuraHealth() {
-		return auraHealth_;
-	}
-
-	public void setAuraHealth(byte value) {
-		auraHealth_ = value;
-	}
-
-	public byte getTotalAttack() {
-		return (byte)(attack_ + auraAttack_ + extraAttackUntilTurnEnd_);
-	}
-	
-	public byte getTotalHealth() {
-		return (byte)(health_ + auraHealth_);
-	}
-	
-	public byte getTotalMaxHealth() {
-		return (byte)(maxHealth_ + auraHealth_);
-	}
-
-	
-	public void addAuraHealth(byte value) {
-		auraHealth_ += value;
-	}
-	
-	public void removeAuraHealth(byte value) {
-		health_ += value;
-		if (health_ > maxHealth_)
-			health_ = maxHealth_;
-		auraHealth_ -= value;
-	}
-	
-	public boolean getStealthed() {
-		return stealthed_;
-	}
-	
-	public void setStealthed(boolean value) {
-		stealthed_ = value;
-	}
-	
-	public boolean getPlacementImportant() {
-		return placementImportant_;
-	}
-	
-	public void setPlacementImportant(boolean value) {
-		placementImportant_ = value;
-	}
-	
-	public boolean isHeroTargetable() {
-		return heroTargetable_;
-	}
-	
-	public void setHeroTargetable(boolean value) {
-		heroTargetable_ = value;
-	}
-
-
-    /**
-	 * Called at the start of the turn
-	 * 
-	 * This function is called at the start of the turn.  Any derived class must override it to implement whatever
-	 * "start of the turn" effect the card has.
-	 */
-	@Override
-	public HearthTreeNode startTurn(PlayerSide thisMinionPlayerIndex, HearthTreeNode boardModel, Deck deckPlayer0, Deck deckPlayer1) throws HSException {
-		HearthTreeNode toRet = boardModel;
-		if (destroyOnTurnStart_) {
-//			toRet = this.destroyed(thisMinionPlayerIndex, toRet, deckPlayer0, deckPlayer1);
-			this.setHealth((byte)-99);
-		}
-		return toRet;
-	}
-	
-	/**
-	 * End the turn and resets the card state
-	 * 
-	 * This function is called at the end of the turn.  Any derived class must override it and remove any 
-	 * temporary buffs that it has.
-	 * 
-	 * This is not the most efficient implementation... luckily, endTurn only happens once per turn
-	 */
-	@Override
-	public HearthTreeNode endTurn(PlayerSide thisMinionPlayerIndex, HearthTreeNode boardModel, Deck deckPlayer0, Deck deckPlayer1) throws HSException {
-		extraAttackUntilTurnEnd_ = 0;
-		HearthTreeNode toRet = boardModel;
-		if (destroyOnTurnEnd_) {
-//			toRet = this.destroyed(thisMinionPlayerIndex, toRet, deckPlayer0, deckPlayer1);
-			this.setHealth((byte)-99);
-		}
-		return toRet;
-	}
-	
-	/**
-	 * Called when this minion takes damage
-	 * 
-	 * Always use this function to take damage... it properly notifies all others of its damage and possibly of its death
-	 *  @param damage The amount of damage to take
-	 * @param attackPlayerSide The player index of the attacker.  This is needed to do things like +spell damage.
-     * @param thisPlayerSide
-     * @param boardState
-     * @param deckPlayer0 The deck of player0
-     * @param isSpellDamage True if this is a spell damage
-     * @param handleMinionDeath Set this to True if you want the death event to trigger when (if) the minion dies from this damage.  Setting this flag to True will also trigger deathrattle immediately.
-     * @throws HSInvalidPlayerIndexException
-	 */
-	public HearthTreeNode takeDamage(
-			byte damage,
-			PlayerSide attackPlayerSide,
-			PlayerSide thisPlayerSide,
-			HearthTreeNode boardState,
-			Deck deckPlayer0, 
-			Deck deckPlayer1,
-			boolean isSpellDamage,
-			boolean handleMinionDeath)
-		throws HSException
-	{
-		Minion m = new Minion();
-		if (!divineShield_) {
-			byte totalDamage = isSpellDamage ? (byte)(damage + boardState.data_.getSpellDamage(attackPlayerSide)) : damage;
-			health_ = (byte)(health_ - totalDamage);
-			
-			//Notify all that the minion is damaged
-			HearthTreeNode toRet = boardState;
-			toRet = toRet.data_.getCurrentPlayerHero().minionDamagedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-			for (int j = 0; j < PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
-				if (!PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).silenced_)
-					toRet = PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).minionDamagedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-			}
-			toRet = toRet.data_.getWaitingPlayerHero().minionDamagedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-			for (int j = 0; j < PlayerSide.WAITING_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
-				if (!PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).silenced_)
-					toRet = PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).minionDamagedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-			}
-			
-			return toRet;
-		} else {
-			if (damage > 0)
-				divineShield_ = false;
-			return boardState;
-		}
-	}
-	
-	/**
-	 * Called when this minion dies (destroyed)
-	 * 
-	 * Always use this function to "kill" minions
-	 * 
-	 *
-     *
-     * @param thisPlayerSide
-     * @param boardState
-     * @param deckPlayer0
-     * @param deckPlayer1
-     *
-     * @throws HSInvalidPlayerIndexException
-	 */
-	public HearthTreeNode destroyed(PlayerSide thisPlayerSide, HearthTreeNode boardState, Deck deckPlayer0, Deck deckPlayer1) throws HSException {
-
-        health_ = 0;
-        HearthTreeNode toRet = boardState;
-
-        //perform the deathrattle action if there is one
-        if (deathrattleAction_ != null) {
-            toRet =  deathrattleAction_.performAction(this, thisPlayerSide, toRet, deckPlayer0, deckPlayer1);
-        }
-
-        //Notify all that it is dead
-        toRet = toRet.data_.getCurrentPlayerHero().minionDeadEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-        for (int j = 0; j < PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
-            if (!PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).silenced_)
-                toRet = PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).minionDeadEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-        }
-        toRet = toRet.data_.getWaitingPlayerHero().minionDeadEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-        for (int j = 0; j < PlayerSide.WAITING_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
-            if (!PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).silenced_)
-                toRet = PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).minionDeadEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-        }
-
-        return toRet;
-
-	}
-
-	
-	public void silenced(PlayerSide thisPlayerSide, HearthTreeNode boardState) throws HSInvalidPlayerIndexException {
-		this.silenced(thisPlayerSide, boardState.data_);
-	}
-	
-	/**
-	 * Called when this minion is silenced
-	 * 
-	 * Always use this function to "silence" minions
-     *
-     * @param thisPlayerSide
-     * @param boardState
-     * @throws HSInvalidPlayerIndexException
-	 */
-	public void silenced(PlayerSide thisPlayerSide, BoardModel boardState) throws HSInvalidPlayerIndexException {
-		if (!silenced_) {
-			boardState.setSpellDamage(PlayerSide.CURRENT_PLAYER, (byte)(boardState.getSpellDamage(PlayerSide.CURRENT_PLAYER) - spellDamage_));
-		}
-
-		divineShield_ = false;
-		taunt_ = false;
-		charge_ = false;
-		frozen_ = false;
-		windFury_ = false;
-		silenced_ = true;
-		deathrattleAction_ = null;
-		stealthed_ = false;
-		heroTargetable_ = true;
-		
-		//Reset the attack and health to base
-		this.attack_ = this.baseAttack_;
-		if (this.maxHealth_ > this.baseHealth_) {
-			this.maxHealth_ = this.baseHealth_;
-			if (this.health_ > this.maxHealth_)
-				this.health_ = this.maxHealth_;
-		}
-	}
-	
-	/**
-	 * Called when this minion is healed
-	 * 
-	 * Always use this function to heal minions
-	 *  @param healAmount The amount of healing to take
-	 * @param thisPlayerSide
-     * @param boardState
-     * @param deckPlayer0 The deck of player0   @throws HSInvalidPlayerIndexException
-     * */
-	public HearthTreeNode takeHeal(byte healAmount, PlayerSide thisPlayerSide, HearthTreeNode boardState, Deck deckPlayer0, Deck deckPlayer1) throws HSInvalidPlayerIndexException {
-		
-		if (health_ < maxHealth_) {
-			if (health_ + healAmount > maxHealth_)
-				health_ = maxHealth_;
-			else
-				health_ = (byte)(health_ + healAmount);
-			
-			//Notify all that it the minion is healed
-			HearthTreeNode toRet = boardState;
-			toRet = toRet.data_.getCurrentPlayerHero().minionHealedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-            for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!minion.silenced_)
-                    toRet = minion.minionHealedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-            }
-			toRet = toRet.data_.getWaitingPlayerHero().minionHealedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-            for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!minion.silenced_)
-                    toRet = minion.minionHealedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
-            }
-			return toRet;
-		}
-		return boardState;
-	}
-	
-	
-	@Override
-    public boolean canBeUsedOn(PlayerSide playerSide, Minion minion, BoardModel boardModel) {
-        return playerSide != PlayerSide.WAITING_PLAYER && !hasBeenUsed;
-    }
-
-	/**
-	 * Use a targetable battlecry.
-	 * 
-	 * @param side
-	 * @param targetMinion
-	 * @param boardState
-	 * @param deckPlayer0
-	 * @param deckPlayer1
-	 * @return
-	 * @throws HSException
-	 */
-	public HearthTreeNode useTargetableBattlecry(
-			PlayerSide side,
-			Minion targetMinion,
-			HearthTreeNode boardState,
-			Deck deckPlayer0,
-			Deck deckPlayer1
-		) throws HSException
-	{
-		HearthTreeNode node = new HearthTreeNode((BoardModel)boardState.data_.deepCopy());
-		int targetMinionIndex = side.getPlayer(boardState).getMinions().indexOf(targetMinion);
-		if (targetMinionIndex >= 0) {
-			node = this.useTargetableBattlecry_core(side, side.getPlayer(node).getMinions().get(targetMinionIndex), node, deckPlayer0, deckPlayer1);
-		} else if (targetMinion instanceof Hero) {
-			node = this.useTargetableBattlecry_core(side, side.getPlayer(node).getHero(), node, deckPlayer0, deckPlayer1);
-		} else {
-			node = null;
-		}
-		if (node != null) {
-			//Check for dead minions
-			node = BoardStateFactoryBase.handleDeadMinions(node, deckPlayer0, deckPlayer1);
-			//add the new node to the tree
-			boardState.addChild(node);
-		}
-		return boardState;
-	}
-
-	/**
-	 * Derived classes should implement this function for targtable battlecries.
-	 * 
-	 * @param side
-	 * @param targetMinion
-	 * @param boardState
-	 * @param deckPlayer0
-	 * @param deckPlayer1
-	 * @return
-	 * @throws HSException
-	 */
-	public HearthTreeNode useTargetableBattlecry_core(
-			PlayerSide side,
-			Minion targetMinion,
-			HearthTreeNode boardState,
-			Deck deckPlayer0,
-			Deck deckPlayer1
-		) throws HSException
-	{
-		return null;
-	}
-	
-	public EnumSet<BattlecryTargetType> getBattlecryTargets() {
-		return EnumSet.of(BattlecryTargetType.NO_BATTLECRY);
-	}
-	
-	
-	/**
-	 * Use an untargetable battlecry.  
-	 * 
-	 * @param minionPlacementTarget
-	 * @param boardState
-	 * @param deckPlayer0
-	 * @param deckPlayer1
-	 * @param singleRealizationOnly
-	 * @return
-	 * @throws HSException
-	 */
-	public HearthTreeNode useUntargetableBattlecry(
-			Minion minionPlacementTarget,
-			HearthTreeNode boardState,
-			Deck deckPlayer0,
-			Deck deckPlayer1,
-			boolean singleRealizationOnly
-		) throws HSException
-	{
-		HearthTreeNode toRet = this.useUntargetableBattlecry_core(minionPlacementTarget, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
-		if (toRet != null) {
-			//Check for dead minions
-			toRet = BoardStateFactoryBase.handleDeadMinions(toRet, deckPlayer0, deckPlayer1);
-		}
-		return toRet;
-	}
-	
-	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
-			HearthTreeNode boardState,
-			Deck deckPlayer0,
-			Deck deckPlayer1,
-			boolean singleRealizationOnly
-		) throws HSException
-	{
-		return null;
-	}	
-	/**
-	 * 
-	 * Places a minion on the board by using the card in hand
-	 * 
-	 *
-     *
-     * @param side
-     * @param targetMinion The target minion (can be a Hero).  The new minion is always placed to the right of (higher index) the target minion.  If the target minion is a hero, then it is placed at the left-most position.
-     * @param boardState The BoardState before this card has performed its action.  It will be manipulated and returned.
-     * @param deckPlayer0 The deck of player0
-     * @return The boardState is manipulated and returned
-	 * @throws HSException 
-	 */
-	
-	protected HearthTreeNode use_core(
-			PlayerSide side,
-			BaseEntity targetMinion,
-			HearthTreeNode boardState,
-			Deck deckPlayer0,
-			Deck deckPlayer1,
-			boolean singleRealizationOnly)
-		throws HSException
-	{
-		if (hasBeenUsed) {
-			//Card is already used, nothing to do
-			return null;
-		}
-		
-		if (side == PlayerSide.WAITING_PLAYER)
-			return null;
-		
-		HearthTreeNode toRet = this.summonMinion(side, targetMinion, boardState, deckPlayer0, deckPlayer1, false);
-		if (toRet != null) { //summon succeeded, now let's use up our mana
-			toRet.data_.getCurrentPlayer().subtractMana(this.mana_);
-			toRet.data_.removeCard_hand(this);
-
-			//Battlecry if available
-			for (BattlecryTargetType btt : this.getBattlecryTargets()) {
-				switch  (btt) {
-				case NO_TARGET:
-					toRet = this.useUntargetableBattlecry(targetMinion, toRet, deckPlayer0, deckPlayer1, singleRealizationOnly);
-					break;
-				case ENEMY_HERO:
-					toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, PlayerSide.WAITING_PLAYER.getPlayer(toRet).getHero(), toRet, deckPlayer0, deckPlayer1);
-					break;
-				case FRIENDLY_HERO:
-					toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getHero(), toRet, deckPlayer0, deckPlayer1);
-					break;
-				case ENEMY_MINIONS:
-					for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-						toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-					}
-					break;
-				case FRIENDLY_MINIONS:
-					for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-						if (minion != this)
-							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-					}
-					break;
-				case ENEMY_BEASTS:
-					for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-						if (minion instanceof Beast)
-							toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-					}
-					break;
-				case FRIENDLY_BEASTS:
-					for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-						if (minion != this && minion instanceof Beast)
-							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-					}
-					break;
-				case ENEMY_MURLOCS:
-					for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-						if (minion instanceof Murloc)
-							toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-					}
-					break;
-				case FRIENDLY_MURLOCS:
-					for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-						if (minion != this && minion instanceof Murloc)
-							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-					}
-					break;
-				default:
-					break;
-				}
-			}
-			
-			
-			//Notify all that a minion is placed
-			toRet = toRet.data_.getCurrentPlayerHero().minionPlacedEvent(toRet);
-			for (Iterator<Minion> iter = toRet.data_.getCurrentPlayer().getMinions().iterator(); iter.hasNext();) {
-				Minion minion = iter.next();
-				if (!minion.silenced_)
-					toRet = minion.minionPlacedEvent(toRet);
-			}
-			toRet = toRet.data_.getWaitingPlayerHero().minionPlacedEvent(toRet);
-			for (Iterator<Minion> iter = toRet.data_.getWaitingPlayer().getMinions().iterator(); iter.hasNext();) {
-				Minion minion = iter.next();
-				if (!minion.silenced_)
-					toRet = minion.minionPlacedEvent(toRet);
-			}
-		
-		}
-		
-		return toRet;
-	}
-	
-	
-	
-	/**
-	 * 
-	 * Places a minion on the board via a summon effect
-	 * 
-	 * This function is meant to be used when summoning minions through means other than a direct card usage.
-	 * 
-	 *
-     * @param targetSide
-     * @param targetMinion The target minion (can be a Hero).  If it is a Hero, then the minion is placed on the last (right most) spot on the board.
-     * @param boardState The BoardState before this card has performed its action.  It will be manipulated and returned.
-     * @param deckPlayer0 The deck of player0
-     * @param deckPlayer1 The deck of player1
-     * @param wasTransformed If the minion was 'summoned' as a result of a transform effect (e.g. Hex, Polymorph), set this to true.
-     *
-     * @return The boardState is manipulated and returned
-	 */
-	public HearthTreeNode summonMinion(
-            PlayerSide targetSide,
-            Minion targetMinion,
-            HearthTreeNode boardState,
-            Deck deckPlayer0,
-            Deck deckPlayer1,
-            boolean wasTransformed)
-		throws HSException
-	{
-		HearthTreeNode toRet = this.summonMinion_core(targetSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
-		
-		if (toRet != null) {
-			toRet.data_.addSpellDamage(targetSide, this.spellDamage_);
-			if (!wasTransformed) {
-				//Notify all that a minion is summoned
-
-				toRet = toRet.data_.getCurrentPlayerHero().minionSummonedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-                    if (!minion.silenced_)
-                        toRet = minion.minionSummonedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                }
-				toRet = toRet.data_.getWaitingPlayerHero().minionSummonedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-                    if (!minion.silenced_)
-                        toRet = minion.minionSummonedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                }
-			} else {
-				//Notify all that a minion is transformed
-				toRet = toRet.data_.getCurrentPlayerHero().minionTransformedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-                    if (!minion.silenced_)
-                        toRet = minion.minionTransformedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                }
-				toRet = toRet.data_.getWaitingPlayerHero().minionTransformedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-                    if (!minion.silenced_)
-                        toRet = minion.minionTransformedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                }
-			}
-		}
-		
-		return toRet;
-	}
-	
-	/**
-	 * 
-	 * Places a minion on the board via a summon effect
-	 * 
-	 * This function is meant to be used when summoning minions through means other than a direct card usage.
-	 * 
-	 *
-     * @param targetSide
-     * @param targetMinion The target minion (can be a Hero).  The new minion is always placed to the right of (higher index) the target minion.  If the target minion is a hero, then it is placed at the left-most position.
-     * @param boardState The BoardState before this card has performed its action.  It will be manipulated and returned.
-     * @return The boardState is manipulated and returned
-     * @param deckPlayer0 The deck of player0
-     * @param deckPlayer1 The deck of player1
-	 * @throws HSException 
-	 */
-	protected HearthTreeNode summonMinion_core(
-            PlayerSide targetSide,
-			Minion targetMinion,
-			HearthTreeNode boardState,
-            Deck deckPlayer0,
-            Deck deckPlayer1
-			)
-		throws HSException
-	{		
-		
-		if (boardState.data_.modelForSide(targetSide).getNumMinions() < 7) {
-
-			if (!charge_) {
-				hasAttacked_ = true;
-			}
-			hasBeenUsed = true;
-			if (isHero(targetMinion))
-				boardState.data_.placeMinion(targetSide, this, 0);
-			else
-				boardState.data_.placeMinion(targetSide, this, targetSide.getPlayer(boardState).getMinions().indexOf(targetMinion) + 1);
-			return boardState;
-							
-		} else {
-			return null;
-		}
-
-	}
-	/**
-	 * 
-	 * Attack with the minion
-	 * 
-	 *
-     *
-     * @param targetMinionPlayerSide
-     * @param targetMinion The target minion
-     * @param boardState The BoardState before this card has performed its action.  It will be manipulated and returned.
-     * @param deckPlayer0 The deck of player0
-     * @return The boardState is manipulated and returned
-	 */
-	public HearthTreeNode attack(
-			PlayerSide targetMinionPlayerSide,
-			Minion targetMinion,
-			HearthTreeNode boardState,
-			Deck deckPlayer0,
-			Deck deckPlayer1)
-		throws HSException
-	{
-		
-		//can't attack a stealthed target
-		if (targetMinion.getStealthed())
-			return null;
-		
-		if (frozen_) {
-			this.hasAttacked_ = true;
-			this.frozen_ = false;
-			return boardState;
-		}
-		
-		//Notify all that an attack is beginning
-		HearthTreeNode toRet = boardState;
-		if (toRet != null) {
-			//Notify all that a minion is created
-			toRet = toRet.data_.getCurrentPlayerHero().minionAttackingEvent(toRet);
-            for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!minion.silenced_)
-                    toRet = minion.minionAttackingEvent(toRet);
-            }
-			toRet = toRet.data_.getWaitingPlayerHero().minionAttackingEvent(toRet);
-            for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!minion.silenced_)
-                    toRet = minion.minionAttackingEvent(toRet);
-            }
-		}
-		
-		//Do the actual attack
-		toRet = this.attack_core(targetMinionPlayerSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
-		
-		//check for and remove dead minions
-		if (toRet != null) {
-			toRet = BoardStateFactoryBase.handleDeadMinions(toRet, deckPlayer0, deckPlayer1);
-		}
-		
-		//Attacking means you lose stealth
-		if (toRet != null)
-			this.stealthed_ = false;
-		
-		return toRet;
-	}
-
-	/**
-	 * 
-	 * Attack with the minion
-	 * 
-	 *
-     *
-     * @param targetMinionPlayerSide
-     * @param targetMinion The target minion
-     * @param boardState The BoardState before this card has performed its action.  It will be manipulated and returned.
-     * @param deckPlayer0 The deck of player0
-     * @return The boardState is manipulated and returned
-	 */
-	protected HearthTreeNode attack_core(
-			PlayerSide targetMinionPlayerSide,
-			Minion targetMinion,
-			HearthTreeNode boardState,
-			Deck deckPlayer0,
-			Deck deckPlayer1)
-		throws HSException
-	{
-		
-		if (hasAttacked_) {
-			//minion has already attacked
-            log.debug("trying to attack when card has already attacked.");
-			return null;
-		}
-		
-		if (targetMinionPlayerSide == PlayerSide.CURRENT_PLAYER) {
-            log.debug("trying to attack ourself, derp..");
-			return null;
-		}
-		
-		if (this.getTotalAttack() <= 0) {
-            log.debug("unable to attack with zero attack damage.");
-            return null;
-        }
-
-		
-		HearthTreeNode toRet = boardState;
-		byte origAttack = targetMinion.getTotalAttack();
-		toRet = targetMinion.takeDamage(this.getTotalAttack(), PlayerSide.CURRENT_PLAYER, targetMinionPlayerSide, toRet, deckPlayer0, deckPlayer1, false, false);
-		toRet = this.takeDamage(origAttack, targetMinionPlayerSide, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1, false, false);
-		if (windFury_ && !hasWindFuryAttacked_)
-			hasWindFuryAttacked_ = true;
-		else
-			hasAttacked_ = true;
-		return toRet;
-
-	}
-
-
-	
-	//======================================================================================
-	// Hooks for various events
-	//======================================================================================	
-
-
-    
-}
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/AbusiveSergeant.java b/src/main/java/com/hearthsim/card/minion/concrete/AbusiveSergeant.java
index a31f820..6a6ed64 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/AbusiveSergeant.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/AbusiveSergeant.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -35,7 +36,7 @@ public class AbusiveSergeant extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/AcidicSwampOoze.java b/src/main/java/com/hearthsim/card/minion/concrete/AcidicSwampOoze.java
index f85cab5..d6d52f5 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/AcidicSwampOoze.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/AcidicSwampOoze.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.util.tree.HearthTreeNode;
 
@@ -31,7 +32,7 @@ public class AcidicSwampOoze extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/AldorPeacekeeper.java b/src/main/java/com/hearthsim/card/minion/concrete/AldorPeacekeeper.java
index 0b43fbc..44d2313 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/AldorPeacekeeper.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/AldorPeacekeeper.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -34,7 +35,7 @@ public class AldorPeacekeeper extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Alexstrasza.java b/src/main/java/com/hearthsim/card/minion/concrete/Alexstrasza.java
index 67da299..4ac7583 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Alexstrasza.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Alexstrasza.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.concrete;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Dragon;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -34,7 +35,7 @@ public class Alexstrasza extends Dragon {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/AncientBrewmaster.java b/src/main/java/com/hearthsim/card/minion/concrete/AncientBrewmaster.java
index 27c6457..da9b125 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/AncientBrewmaster.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/AncientBrewmaster.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.concrete;
 import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -37,7 +38,7 @@ public class AncientBrewmaster extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/AncientOfLore.java b/src/main/java/com/hearthsim/card/minion/concrete/AncientOfLore.java
index 136d29d..994a890 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/AncientOfLore.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/AncientOfLore.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -39,7 +40,7 @@ public class AncientOfLore extends Minion {
 	
 	public HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/AncientOfWar.java b/src/main/java/com/hearthsim/card/minion/concrete/AncientOfWar.java
index acfb183..0daf031 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/AncientOfWar.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/AncientOfWar.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -47,7 +48,7 @@ public class AncientOfWar extends Minion {
 	
 	public HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/ArathiWeaponsmith.java b/src/main/java/com/hearthsim/card/minion/concrete/ArathiWeaponsmith.java
index f23755b..62b4a07 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/ArathiWeaponsmith.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/ArathiWeaponsmith.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.concrete;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.util.tree.HearthTreeNode;
 
@@ -32,7 +33,7 @@ public class ArathiWeaponsmith extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/ArcaneGolem.java b/src/main/java/com/hearthsim/card/minion/concrete/ArcaneGolem.java
index b54303b..057ae51 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/ArcaneGolem.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/ArcaneGolem.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.util.tree.HearthTreeNode;
 
@@ -32,7 +33,7 @@ public class ArcaneGolem extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/ArgentProtector.java b/src/main/java/com/hearthsim/card/minion/concrete/ArgentProtector.java
index 62aa77a..ab56165 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/ArgentProtector.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/ArgentProtector.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -34,7 +35,7 @@ public class ArgentProtector extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Armorsmith.java b/src/main/java/com/hearthsim/card/minion/concrete/Armorsmith.java
index f5a5e54..18db0d5 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Armorsmith.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Armorsmith.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.concrete;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSInvalidPlayerIndexException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -36,7 +37,7 @@ public class Armorsmith extends Minion {
 	public HearthTreeNode minionDamagedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide damagedPlayerSide,
-			Minion damagedMinion,
+			BaseEntity damagedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/AzureDrake.java b/src/main/java/com/hearthsim/card/minion/concrete/AzureDrake.java
index 3a91ccd..3bb71bc 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/AzureDrake.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/AzureDrake.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.util.tree.CardDrawNode;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -33,7 +34,7 @@ public class AzureDrake extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/BigGameHunter.java b/src/main/java/com/hearthsim/card/minion/concrete/BigGameHunter.java
index 1d1131a..dc78190 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/BigGameHunter.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/BigGameHunter.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -34,7 +35,7 @@ public class BigGameHunter extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/BloodKnight.java b/src/main/java/com/hearthsim/card/minion/concrete/BloodKnight.java
index eebb4d2..bda1377 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/BloodKnight.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/BloodKnight.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -33,7 +34,7 @@ public class BloodKnight extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -41,14 +42,14 @@ public class BloodKnight extends Minion {
 		) throws HSException
 	{
 		HearthTreeNode toRet = boardState;
-		for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 			if (minion != this && minion.getDivineShield()) {
 				minion.setDivineShield(false);
 				this.setHealth((byte)(this.getHealth() + 3));
 				this.setAttack((byte)(this.getAttack() + 3));
 			}
 		}
-		for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 			if (minion.getDivineShield()) {
 				minion.setDivineShield(false);
 				this.setHealth((byte)(this.getHealth() + 3));
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/ColdlightOracle.java b/src/main/java/com/hearthsim/card/minion/concrete/ColdlightOracle.java
index 57f27ce..56eea66 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/ColdlightOracle.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/ColdlightOracle.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.concrete;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.Murloc;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.util.tree.CardDrawNode;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -35,7 +36,7 @@ public class ColdlightOracle extends Murloc {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/ColdlightSeer.java b/src/main/java/com/hearthsim/card/minion/concrete/ColdlightSeer.java
index 0045256..cc72d71 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/ColdlightSeer.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/ColdlightSeer.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.Murloc;
 import com.hearthsim.exception.HSException;
@@ -34,7 +34,7 @@ public class ColdlightSeer extends Murloc {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -42,7 +42,7 @@ public class ColdlightSeer extends Murloc {
 		) throws HSException
 	{
 		HearthTreeNode toRet = boardState;
-		for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 			if (minion != this && minion instanceof Murloc) {
 				minion.addHealth((byte)2);
 				minion.addMaxHealth((byte)2);
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/CrazedAlchemist.java b/src/main/java/com/hearthsim/card/minion/concrete/CrazedAlchemist.java
index 76a14a1..9a734da 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/CrazedAlchemist.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/CrazedAlchemist.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class CrazedAlchemist extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/CruelTaskmaster.java b/src/main/java/com/hearthsim/card/minion/concrete/CruelTaskmaster.java
index dc58d68..6331e4d 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/CruelTaskmaster.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/CruelTaskmaster.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -45,7 +45,7 @@ public class CruelTaskmaster extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/DarkIronDwarf.java b/src/main/java/com/hearthsim/card/minion/concrete/DarkIronDwarf.java
index cc655b6..cdd2984 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/DarkIronDwarf.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/DarkIronDwarf.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -45,7 +45,7 @@ public class DarkIronDwarf extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/DarkscaleHealer.java b/src/main/java/com/hearthsim/card/minion/concrete/DarkscaleHealer.java
index 68ee35a..2468e31 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/DarkscaleHealer.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/DarkscaleHealer.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -33,7 +33,7 @@ public class DarkscaleHealer extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -42,7 +42,7 @@ public class DarkscaleHealer extends Minion {
 	{
 		HearthTreeNode toRet = boardState;
 		toRet = toRet.data_.getCurrentPlayerHero().takeHeal((byte)2, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1);
-		for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 			toRet = minion.takeHeal((byte)2, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1);
 		}
 		return toRet;
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/DefenderOfArgus.java b/src/main/java/com/hearthsim/card/minion/concrete/DefenderOfArgus.java
index da3670e..b1d44ae 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/DefenderOfArgus.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/DefenderOfArgus.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -33,7 +33,7 @@ public class DefenderOfArgus extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -47,13 +47,13 @@ public class DefenderOfArgus extends Minion {
 			int minionToTheLeft = thisMinionIndex > 0 ? thisMinionIndex - 1 : -1;
 			int minionToTheRight = thisMinionIndex < numMinions - 1 ? thisMinionIndex + 1 : -1;
 			if (minionToTheLeft >= 0) {
-				Minion minionToBuff = toRet.data_.getMinion(PlayerSide.CURRENT_PLAYER, minionToTheLeft);
+				BaseEntity minionToBuff = toRet.data_.getMinion(PlayerSide.CURRENT_PLAYER, minionToTheLeft);
 				minionToBuff.setAttack((byte)(minionToBuff.getAttack() + 1));
 				minionToBuff.setHealth((byte)(minionToBuff.getHealth() + 1));
 				minionToBuff.setTaunt(true);					
 			}
 			if (minionToTheRight >= 0) {
-				Minion minionToBuff = toRet.data_.getMinion(PlayerSide.CURRENT_PLAYER, minionToTheRight);
+				BaseEntity minionToBuff = toRet.data_.getMinion(PlayerSide.CURRENT_PLAYER, minionToTheRight);
 				minionToBuff.setAttack((byte)(minionToBuff.getAttack() + 1));
 				minionToBuff.setHealth((byte)(minionToBuff.getHealth() + 1));
 				minionToBuff.setTaunt(true);					
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/DragonlingMechanic.java b/src/main/java/com/hearthsim/card/minion/concrete/DragonlingMechanic.java
index ab995c3..907b81e 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/DragonlingMechanic.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/DragonlingMechanic.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -33,7 +33,7 @@ public class DragonlingMechanic extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -42,7 +42,7 @@ public class DragonlingMechanic extends Minion {
 	{
 		HearthTreeNode toRet = boardState;
 		if (toRet != null && PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions() < 7) {
-			Minion mdragon = new MechanicalDragonling();
+			BaseEntity mdragon = new MechanicalDragonling();
 			toRet = mdragon.summonMinion(PlayerSide.CURRENT_PLAYER, this, boardState, deckPlayer0, deckPlayer1, false);
 		}
 		return toRet;
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/DreadInfernal.java b/src/main/java/com/hearthsim/card/minion/concrete/DreadInfernal.java
index 18d2ead..8903591 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/DreadInfernal.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/DreadInfernal.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Demon;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
@@ -34,7 +34,7 @@ public class DreadInfernal extends Demon {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -43,13 +43,13 @@ public class DreadInfernal extends Demon {
 	{
 		HearthTreeNode toRet = boardState;
 		toRet = toRet.data_.getCurrentPlayerHero().takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1, false, false);
-		for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 			if (minion != this)
 				toRet = minion.takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, boardState, deckPlayer0, deckPlayer1, false, false);
 		}
 		
 		toRet = toRet.data_.getWaitingPlayerHero().takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, boardState, deckPlayer0, deckPlayer1, false, false);
-		for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 			toRet = minion.takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, boardState, deckPlayer0, deckPlayer1, false, false);
 		}
 		
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/DustDevil.java b/src/main/java/com/hearthsim/card/minion/concrete/DustDevil.java
index 8f9a0a7..d5acd78 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/DustDevil.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/DustDevil.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -36,7 +36,7 @@ public class DustDevil extends Minion {
 	
 	public HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/EarthElemental.java b/src/main/java/com/hearthsim/card/minion/concrete/EarthElemental.java
index 4935c18..2d1e145 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/EarthElemental.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/EarthElemental.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -37,7 +37,7 @@ public class EarthElemental extends Minion {
 	
 	public HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/EarthenRingFarseer.java b/src/main/java/com/hearthsim/card/minion/concrete/EarthenRingFarseer.java
index 1efd06b..1882f7e 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/EarthenRingFarseer.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/EarthenRingFarseer.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class EarthenRingFarseer extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/ElvenArcher.java b/src/main/java/com/hearthsim/card/minion/concrete/ElvenArcher.java
index 9fc9677..2fab7a3 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/ElvenArcher.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/ElvenArcher.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -36,7 +36,7 @@ public class ElvenArcher extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
@@ -63,7 +63,7 @@ public class ElvenArcher extends Minion {
 //	
 //	public HearthTreeNode use_core(
 //			PlayerSide side,
-//			Minion targetMinion,
+//			BaseEntity targetMinion,
 //			HearthTreeNode boardState,
 //			Deck deckPlayer0,
 //			Deck deckPlayer1,
@@ -84,7 +84,7 @@ public class ElvenArcher extends Minion {
 //					if (PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(index) == this)
 //						continue;
 //					HearthTreeNode newState = new HearthTreeNode((BoardModel)boardState.data_.deepCopy());
-//					Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(newState).getMinions().get(index);
+//					BaseEntity minion = PlayerSide.CURRENT_PLAYER.getPlayer(newState).getMinions().get(index);
 //					newState = minion.takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, newState, deckPlayer0, deckPlayer1, false, true);
 //					newState = BoardStateFactoryBase.handleDeadMinions(newState, deckPlayer0, deckPlayer1);
 //					toRet.addChild(newState);
@@ -100,7 +100,7 @@ public class ElvenArcher extends Minion {
 //			{
 //				for (int index = 0; index < PlayerSide.WAITING_PLAYER.getPlayer(toRet).getNumMinions(); ++index) {
 //					HearthTreeNode newState = new HearthTreeNode((BoardModel)boardState.data_.deepCopy());
-//					Minion minion = PlayerSide.WAITING_PLAYER.getPlayer(newState).getMinions().get(index);
+//					BaseEntity minion = PlayerSide.WAITING_PLAYER.getPlayer(newState).getMinions().get(index);
 //					newState = minion.takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, newState, deckPlayer0, deckPlayer1, false, true);
 //					newState = BoardStateFactoryBase.handleDeadMinions(newState, deckPlayer0, deckPlayer1);
 //					toRet.addChild(newState);
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Felguard.java b/src/main/java/com/hearthsim/card/minion/concrete/Felguard.java
index 34b341f..d495ade 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Felguard.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Felguard.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Demon;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
@@ -33,7 +33,7 @@ public class Felguard extends Demon {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/FireElemental.java b/src/main/java/com/hearthsim/card/minion/concrete/FireElemental.java
index 6ad447c..3e3dbc5 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/FireElemental.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/FireElemental.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -37,7 +37,7 @@ public class FireElemental extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/FlameImp.java b/src/main/java/com/hearthsim/card/minion/concrete/FlameImp.java
index 5f69970..c9df81d 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/FlameImp.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/FlameImp.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Demon;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
@@ -34,7 +34,7 @@ public class FlameImp extends Demon {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/FlesheatingGhoul.java b/src/main/java/com/hearthsim/card/minion/concrete/FlesheatingGhoul.java
index 5e4c4b0..56ef932 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/FlesheatingGhoul.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/FlesheatingGhoul.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSInvalidPlayerIndexException;
 import com.hearthsim.model.PlayerSide;
@@ -36,7 +36,7 @@ public class FlesheatingGhoul extends Minion {
 	public HearthTreeNode minionDeadEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide deadMinionPlayerSide,
-			Minion deadMinion,
+			BaseEntity deadMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/FrostwolfWarlord.java b/src/main/java/com/hearthsim/card/minion/concrete/FrostwolfWarlord.java
index 948b5bd..afdd2ef 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/FrostwolfWarlord.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/FrostwolfWarlord.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class FrostwolfWarlord extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/GnomishInventor.java b/src/main/java/com/hearthsim/card/minion/concrete/GnomishInventor.java
index b1edda3..be47110 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/GnomishInventor.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/GnomishInventor.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.util.tree.CardDrawNode;
@@ -34,7 +34,7 @@ public class GnomishInventor extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/GrimscaleOracle.java b/src/main/java/com/hearthsim/card/minion/concrete/GrimscaleOracle.java
index c876ae7..bc4845e 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/GrimscaleOracle.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/GrimscaleOracle.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.Murloc;
 import com.hearthsim.exception.HSException;
@@ -41,7 +41,7 @@ public class GrimscaleOracle extends Murloc {
 	 */
 	protected HearthTreeNode summonMinion_core(
             PlayerSide targetSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -50,13 +50,13 @@ public class GrimscaleOracle extends Murloc {
 		HearthTreeNode toRet = super.summonMinion_core(targetSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
 		if (toRet != null) {
 			
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				if (minion instanceof Murloc && minion != this) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() + 1));
 				}
 			}
 			
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				if (minion instanceof Murloc && minion != this) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() + 1));
 				}
@@ -83,12 +83,12 @@ public class GrimscaleOracle extends Murloc {
 	
 	public void silenced(PlayerSide thisPlayerSide, BoardModel boardState) throws HSInvalidPlayerIndexException {
 		if (!silenced_) {
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(boardState).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(boardState).getMinions()) {
 				if (minion instanceof Murloc && minion != this) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() - 1));
 				}
 			}
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(boardState).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(boardState).getMinions()) {
 				if (minion instanceof Murloc && minion != this) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() - 1));
 				}
@@ -98,7 +98,7 @@ public class GrimscaleOracle extends Murloc {
 	}
 		
 	private HearthTreeNode doBuffs(
-            Minion targetMinion,
+            BaseEntity targetMinion,
             HearthTreeNode boardState)
 		throws HSInvalidPlayerIndexException
 	{
@@ -124,7 +124,7 @@ public class GrimscaleOracle extends Murloc {
 	public HearthTreeNode minionSummonedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide summonedMinionPlayerSide,
-			Minion summonedMinion,
+			BaseEntity summonedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -146,7 +146,7 @@ public class GrimscaleOracle extends Murloc {
 	public HearthTreeNode minionTransformedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide transformedMinionPlayerSide,
-			Minion transformedMinion,
+			BaseEntity transformedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/GuardianOfKings.java b/src/main/java/com/hearthsim/card/minion/concrete/GuardianOfKings.java
index 75a5341..b374b23 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/GuardianOfKings.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/GuardianOfKings.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class GuardianOfKings extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/GurubashiBerserker.java b/src/main/java/com/hearthsim/card/minion/concrete/GurubashiBerserker.java
index 96ee3e4..b53e869 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/GurubashiBerserker.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/GurubashiBerserker.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.exception.HSInvalidPlayerIndexException;
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/HealingTotem.java b/src/main/java/com/hearthsim/card/minion/concrete/HealingTotem.java
index e8bccd3..f7fd8ab 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/HealingTotem.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/HealingTotem.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.Totem;
 import com.hearthsim.exception.HSException;
@@ -36,7 +36,7 @@ public class HealingTotem extends Totem {
 			return tmpState;
 		
 	
-		for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(tmpState).getMinions()) {
+		for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(tmpState).getMinions()) {
 			tmpState = minion.takeHeal((byte)1, PlayerSide.CURRENT_PLAYER, tmpState, deckPlayer0, deckPlayer1);
 		}
 		
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Houndmaster.java b/src/main/java/com/hearthsim/card/minion/concrete/Houndmaster.java
index db68d0f..d6658bf 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Houndmaster.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Houndmaster.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -35,7 +35,7 @@ public class Houndmaster extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/InjuredBlademaster.java b/src/main/java/com/hearthsim/card/minion/concrete/InjuredBlademaster.java
index fcd99e9..e5fad04 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/InjuredBlademaster.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/InjuredBlademaster.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -33,7 +33,7 @@ public class InjuredBlademaster extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/IronbeakOwl.java b/src/main/java/com/hearthsim/card/minion/concrete/IronbeakOwl.java
index 3efe64d..aafbb7a 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/IronbeakOwl.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/IronbeakOwl.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class IronbeakOwl extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/IronforgeRifleman.java b/src/main/java/com/hearthsim/card/minion/concrete/IronforgeRifleman.java
index d32af7b..1052615 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/IronforgeRifleman.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/IronforgeRifleman.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -37,7 +37,7 @@ public class IronforgeRifleman extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Leokk.java b/src/main/java/com/hearthsim/card/minion/concrete/Leokk.java
index d55c212..5f0f1a3 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Leokk.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Leokk.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Beast;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
@@ -42,7 +42,7 @@ public class Leokk extends Beast {
 	
 	protected HearthTreeNode summonMinion_core(
             PlayerSide targetSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -50,7 +50,7 @@ public class Leokk extends Beast {
 	{	
 		HearthTreeNode toRet = super.summonMinion_core(targetSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				if (minion != this) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() + 1));
 				}
@@ -74,7 +74,7 @@ public class Leokk extends Beast {
 	 */
 	
 	public void silenced(PlayerSide thisPlayerSide, BoardModel boardState) throws HSInvalidPlayerIndexException {
-		for (Minion minion : boardState.getMinions(thisPlayerSide)) {
+		for (BaseEntity minion : boardState.getMinions(thisPlayerSide)) {
 			if (minion != this) {
 				minion.setAuraAttack((byte)(minion.getAuraAttack() - 1));
 			}
@@ -85,7 +85,7 @@ public class Leokk extends Beast {
 	private HearthTreeNode doBuffs(
             PlayerSide thisMinionPlayerSide,
             PlayerSide placedMinionPlayerSide,
-            Minion placedMinion,
+            BaseEntity placedMinion,
             HearthTreeNode boardState) throws HSInvalidPlayerIndexException {
 		if (thisMinionPlayerSide != placedMinionPlayerSide)
 			return boardState;
@@ -110,7 +110,7 @@ public class Leokk extends Beast {
 	public HearthTreeNode minionSummonedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide summonedMinionPlayerSide,
-			Minion summonedMinion,
+			BaseEntity summonedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -131,7 +131,7 @@ public class Leokk extends Beast {
 	public HearthTreeNode minionTransformedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide transformedMinionPlayerSide,
-			Minion transformedMinion,
+			BaseEntity transformedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/MurlocTidehunter.java b/src/main/java/com/hearthsim/card/minion/concrete/MurlocTidehunter.java
index f59b464..07ec7d1 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/MurlocTidehunter.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/MurlocTidehunter.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.Murloc;
 import com.hearthsim.exception.HSException;
@@ -35,7 +35,7 @@ public class MurlocTidehunter extends Murloc {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Nightblade.java b/src/main/java/com/hearthsim/card/minion/concrete/Nightblade.java
index f552312..eea5ace 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Nightblade.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Nightblade.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -40,7 +40,7 @@ public class Nightblade extends Minion {
 	
 	public HearthTreeNode useOn(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/NorthshireCleric.java b/src/main/java/com/hearthsim/card/minion/concrete/NorthshireCleric.java
index 5377a03..3c47a43 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/NorthshireCleric.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/NorthshireCleric.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSInvalidPlayerIndexException;
 import com.hearthsim.model.PlayerSide;
@@ -48,7 +48,7 @@ public class NorthshireCleric extends Minion {
 	public HearthTreeNode minionHealedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide healedMinionPlayerSide,
-			Minion healedMinion,
+			BaseEntity healedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/NoviceEngineer.java b/src/main/java/com/hearthsim/card/minion/concrete/NoviceEngineer.java
index 8f41cb6..bcb80d2 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/NoviceEngineer.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/NoviceEngineer.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.util.tree.CardDrawNode;
@@ -34,7 +34,7 @@ public class NoviceEngineer extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/PriestessOfElune.java b/src/main/java/com/hearthsim/card/minion/concrete/PriestessOfElune.java
index 473503e..b7e5740 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/PriestessOfElune.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/PriestessOfElune.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class PriestessOfElune extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/RaidLeader.java b/src/main/java/com/hearthsim/card/minion/concrete/RaidLeader.java
index 0178550..342b071 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/RaidLeader.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/RaidLeader.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.exception.HSInvalidPlayerIndexException;
@@ -40,7 +40,7 @@ public class RaidLeader extends Minion {
 	 */
 	protected HearthTreeNode summonMinion_core(
             PlayerSide targetSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -48,7 +48,7 @@ public class RaidLeader extends Minion {
 	{		
 		HearthTreeNode toRet = super.summonMinion_core(targetSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
 		if (toRet != null) {
-			for (Minion minion : targetSide.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : targetSide.getPlayer(toRet).getMinions()) {
 				if (minion != this) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() + 1));
 				}
@@ -72,7 +72,7 @@ public class RaidLeader extends Minion {
 	 */
 	
 	public void silenced(PlayerSide thisPlayerSide, BoardModel boardState) throws HSInvalidPlayerIndexException {
-		for (Minion minion : boardState.getMinions(thisPlayerSide)) {
+		for (BaseEntity minion : boardState.getMinions(thisPlayerSide)) {
 			if (minion != this) {
 				minion.setAuraAttack((byte)(minion.getAuraAttack() - 1));
 			}
@@ -83,7 +83,7 @@ public class RaidLeader extends Minion {
 	private HearthTreeNode doBuffs(
             PlayerSide thisMinionPlayerSide,
             PlayerSide placedMinionPlayerSide,
-            Minion placedMinion,
+            BaseEntity placedMinion,
             HearthTreeNode boardState) throws HSInvalidPlayerIndexException {
 		if (thisMinionPlayerSide != placedMinionPlayerSide)
 			return boardState;
@@ -109,7 +109,7 @@ public class RaidLeader extends Minion {
 	public HearthTreeNode minionSummonedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide summonedMinionPlayerSide,
-			Minion summonedMinion,
+			BaseEntity summonedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -130,7 +130,7 @@ public class RaidLeader extends Minion {
 	public HearthTreeNode minionTransformedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide transformedMinionPlayerSide,
-			Minion transformedMinion,
+			BaseEntity transformedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/RazorfenHunter.java b/src/main/java/com/hearthsim/card/minion/concrete/RazorfenHunter.java
index 7ff414c..484e7da 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/RazorfenHunter.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/RazorfenHunter.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class RazorfenHunter extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -43,7 +43,7 @@ public class RazorfenHunter extends Minion {
 	{
 		HearthTreeNode toRet = boardState;
 		if (toRet != null && PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions() < 7) {
-			Minion mdragon = new Boar();
+			BaseEntity mdragon = new Boar();
 			toRet = mdragon.summonMinion(PlayerSide.CURRENT_PLAYER, this, boardState, deckPlayer0, deckPlayer1, false);
 		}
 		return toRet;
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/ShatteredSunCleric.java b/src/main/java/com/hearthsim/card/minion/concrete/ShatteredSunCleric.java
index c3cd46d..bd91ab4 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/ShatteredSunCleric.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/ShatteredSunCleric.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -35,7 +35,7 @@ public class ShatteredSunCleric extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/SilverHandKnight.java b/src/main/java/com/hearthsim/card/minion/concrete/SilverHandKnight.java
index 096912a..1e4e4fd 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/SilverHandKnight.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/SilverHandKnight.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class SilverHandKnight extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -43,7 +43,7 @@ public class SilverHandKnight extends Minion {
 	{
 		HearthTreeNode toRet = boardState;
 		if (toRet != null && PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions() < 7) {
-			Minion mdragon = new Squire();
+			BaseEntity mdragon = new Squire();
 			toRet = mdragon.summonMinion(PlayerSide.CURRENT_PLAYER, this, boardState, deckPlayer0, deckPlayer1, false);
 		}
 		return toRet;
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Spellbreaker.java b/src/main/java/com/hearthsim/card/minion/concrete/Spellbreaker.java
index e04c39f..2862a84 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Spellbreaker.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Spellbreaker.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class Spellbreaker extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/StampedingKodo.java b/src/main/java/com/hearthsim/card/minion/concrete/StampedingKodo.java
index b656c63..7faaa21 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/StampedingKodo.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/StampedingKodo.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Beast;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -53,13 +53,13 @@ public class StampedingKodo extends Beast {
 		HearthTreeNode toRet = boardState;
 		if (singleRealizationOnly) {
 			if (toRet != null) {
-				List<Minion> possibleTargets = new ArrayList<Minion>();
-				for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+				List<BaseEntity> possibleTargets = new ArrayList<BaseEntity>();
+				for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 					if (minion.getTotalAttack() <= 2)
-						possibleTargets.add(minion);
+						possibleTargets.add((Minion) minion);
 				}
 				if (possibleTargets.size() > 0) {
-					Minion targetMinion = possibleTargets.get((int)(Math.random() * possibleTargets.size()));
+					BaseEntity targetMinion = (Minion) possibleTargets.get((int)(Math.random() * possibleTargets.size()));
 					targetMinion.setHealth((byte)-99); //destroyed!
 				}
 			}
@@ -69,15 +69,15 @@ public class StampedingKodo extends Beast {
 			toRet = new RandomEffectNode(boardState, new HearthAction(HearthAction.Verb.USE_CARD, PlayerSide.CURRENT_PLAYER, thisMinionIndex, PlayerSide.CURRENT_PLAYER, placementTargetIndex));
 			if (toRet != null) {
 				List<Minion> possibleTargets = new ArrayList<Minion>();
-				for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+				for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 					if (minion.getTotalAttack() <= 2)
-						possibleTargets.add(minion);
+						possibleTargets.add((Minion) minion);
 				}
 				if (possibleTargets.size() > 0) {
 					PlayerModel targetPlayer = PlayerSide.WAITING_PLAYER.getPlayer(toRet);
-					for (Minion possibleTarget : possibleTargets) {
+					for (BaseEntity possibleTarget : possibleTargets) {
 						HearthTreeNode newState = new HearthTreeNode((BoardModel) toRet.data_.deepCopy());
-						Minion targetMinion = PlayerSide.WAITING_PLAYER.getPlayer(newState).getMinions().get(targetPlayer.getMinions().indexOf(possibleTarget));
+						BaseEntity targetMinion = (Minion) PlayerSide.WAITING_PLAYER.getPlayer(newState).getMinions().get(targetPlayer.getMinions().indexOf(possibleTarget));
 						targetMinion.setHealth((byte)-99); //destroyed!
 						newState = BoardStateFactoryBase.handleDeadMinions(newState, deckPlayer0, deckPlayer1);
 						toRet.addChild(newState);
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/StarvingBuzzard.java b/src/main/java/com/hearthsim/card/minion/concrete/StarvingBuzzard.java
index a92c1b5..4985d54 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/StarvingBuzzard.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/StarvingBuzzard.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Beast;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSInvalidPlayerIndexException;
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/StormpikeCommando.java b/src/main/java/com/hearthsim/card/minion/concrete/StormpikeCommando.java
index cd7fe59..026d1f2 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/StormpikeCommando.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/StormpikeCommando.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -37,7 +37,7 @@ public class StormpikeCommando extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/StormwindChampion.java b/src/main/java/com/hearthsim/card/minion/concrete/StormwindChampion.java
index 644905b..03a7590 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/StormwindChampion.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/StormwindChampion.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.exception.HSInvalidPlayerIndexException;
@@ -41,7 +41,7 @@ public class StormwindChampion extends Minion {
 	 */
 	protected HearthTreeNode summonMinion_core(
             PlayerSide targetSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -49,7 +49,7 @@ public class StormwindChampion extends Minion {
 	{		
 		HearthTreeNode toRet = super.summonMinion_core(targetSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				if (minion != this) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() + 1));
 					minion.addAuraHealth((byte)1);
@@ -75,7 +75,7 @@ public class StormwindChampion extends Minion {
 	
 	public void silenced(PlayerSide thisPlayerSide, BoardModel boardState) throws HSInvalidPlayerIndexException {
 		if (!silenced_) {
-			for (Minion minion : boardState.getMinions(thisPlayerSide)) {
+			for (BaseEntity minion : boardState.getMinions(thisPlayerSide)) {
 				if (minion != this) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() - 1));
 					minion.removeAuraHealth((byte)1);
@@ -88,7 +88,7 @@ public class StormwindChampion extends Minion {
 	private HearthTreeNode doBuffs(
             PlayerSide thisMinionPlayerSide,
             PlayerSide placedMinionPlayerSide,
-            Minion placedMinion,
+            BaseEntity placedMinion,
             HearthTreeNode boardState) throws HSInvalidPlayerIndexException {
 		if (thisMinionPlayerSide != placedMinionPlayerSide)
 			return boardState;
@@ -115,7 +115,7 @@ public class StormwindChampion extends Minion {
 	public HearthTreeNode minionSummonedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide summonedMinionPlayerSide,
-			Minion summonedMinion,
+			BaseEntity summonedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -136,7 +136,7 @@ public class StormwindChampion extends Minion {
 	public HearthTreeNode minionTransformedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide transformedMinionPlayerSide,
-			Minion transformedMinion,
+			BaseEntity transformedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Succubus.java b/src/main/java/com/hearthsim/card/minion/concrete/Succubus.java
index 38f32f8..1f684dc 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Succubus.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Succubus.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Demon;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
@@ -39,7 +39,7 @@ public class Succubus extends Demon {
 	
 	public HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/SunfuryProtector.java b/src/main/java/com/hearthsim/card/minion/concrete/SunfuryProtector.java
index 835bf56..73fb34b 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/SunfuryProtector.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/SunfuryProtector.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -33,7 +33,7 @@ public class SunfuryProtector extends Minion {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/TempleEnforcer.java b/src/main/java/com/hearthsim/card/minion/concrete/TempleEnforcer.java
index c69163d..29874aa 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/TempleEnforcer.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/TempleEnforcer.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class TempleEnforcer extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/TheBlackKnight.java b/src/main/java/com/hearthsim/card/minion/concrete/TheBlackKnight.java
index bc4e2c1..49a330f 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/TheBlackKnight.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/TheBlackKnight.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -34,7 +34,7 @@ public class TheBlackKnight extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/TimberWolf.java b/src/main/java/com/hearthsim/card/minion/concrete/TimberWolf.java
index 3ba9bcb..fbccdd8 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/TimberWolf.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/TimberWolf.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Beast;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
@@ -41,7 +41,7 @@ public class TimberWolf extends Beast {
 	 */
 	protected HearthTreeNode summonMinion_core(
             PlayerSide targetSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -49,7 +49,7 @@ public class TimberWolf extends Beast {
 	{
 		HearthTreeNode toRet = super.summonMinion_core(targetSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				if (minion != this && minion instanceof Beast) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() + 1));
 				}
@@ -72,7 +72,7 @@ public class TimberWolf extends Beast {
 	
 	public void silenced(PlayerSide thisPlayerSide, BoardModel boardState) throws HSInvalidPlayerIndexException {
 		if (!silenced_) {
-			for (Minion minion : boardState.getMinions(thisPlayerSide)) {
+			for (BaseEntity minion : boardState.getMinions(thisPlayerSide)) {
 				if (minion != this && minion instanceof Beast) {
 					minion.setAuraAttack((byte)(minion.getAuraAttack() - 1));
 				}
@@ -84,7 +84,7 @@ public class TimberWolf extends Beast {
 	private HearthTreeNode doBuffs(
             PlayerSide thisMinionPlayerSide,
             PlayerSide placedMinionPlayerSide,
-            Minion placedMinion,
+            BaseEntity placedMinion,
             HearthTreeNode boardState) throws HSInvalidPlayerIndexException
 	{
 		if (placedMinionPlayerSide != thisMinionPlayerSide)
@@ -112,7 +112,7 @@ public class TimberWolf extends Beast {
 	public HearthTreeNode minionSummonedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide summonedMinionPlayerSide,
-			Minion summonedMinion,
+			BaseEntity summonedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -133,7 +133,7 @@ public class TimberWolf extends Beast {
 	public HearthTreeNode minionTransformedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide transformedMinionPlayerSide,
-			Minion transformedMinion,
+			BaseEntity transformedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/TwilightDrake.java b/src/main/java/com/hearthsim/card/minion/concrete/TwilightDrake.java
index d4fda3b..9f77028 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/TwilightDrake.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/TwilightDrake.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Dragon;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
@@ -34,7 +34,7 @@ public class TwilightDrake extends Dragon {
 	 */
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Undertaker.java b/src/main/java/com/hearthsim/card/minion/concrete/Undertaker.java
index dde92be..64af520 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Undertaker.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Undertaker.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSInvalidPlayerIndexException;
 import com.hearthsim.model.PlayerSide;
@@ -27,7 +27,7 @@ public class Undertaker extends Minion {
 	public HearthTreeNode minionSummonedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide summonedMinionPlayerSide,
-			Minion summonedMinion,
+			BaseEntity summonedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/VioletTeacher.java b/src/main/java/com/hearthsim/card/minion/concrete/VioletTeacher.java
index 5680531..efca34a 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/VioletTeacher.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/VioletTeacher.java
@@ -1,7 +1,7 @@
 package com.hearthsim.card.minion.concrete;
 
 import com.hearthsim.card.Card;
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -45,7 +45,7 @@ public class VioletTeacher extends Minion {
 		if (isInHand_)
 			return toRet;
         if (usedCard instanceof SpellCard && PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions() < 7) {
-            Minion newMinion = new VioletApprentice();
+        	BaseEntity newMinion = new VioletApprentice();
             toRet = newMinion.summonMinion(thisCardPlayerSide, this, toRet, deckPlayer0, deckPlayer1, false);
         }
         return toRet;
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/VoodooDoctor.java b/src/main/java/com/hearthsim/card/minion/concrete/VoodooDoctor.java
index bc6fb92..f55a2fe 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/VoodooDoctor.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/VoodooDoctor.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -36,7 +36,7 @@ public class VoodooDoctor extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/WaterElemental.java b/src/main/java/com/hearthsim/card/minion/concrete/WaterElemental.java
index ed9d144..be52ddb 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/WaterElemental.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/WaterElemental.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -38,7 +38,7 @@ public class WaterElemental extends Minion {
 	 */
 	protected HearthTreeNode attack_core(
 			PlayerSide targetMinionPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/Windspeaker.java b/src/main/java/com/hearthsim/card/minion/concrete/Windspeaker.java
index 40ac2be..5913dd3 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/Windspeaker.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/Windspeaker.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
@@ -35,7 +35,7 @@ public class Windspeaker extends Minion {
 	
 	public HearthTreeNode useTargetableBattlecry_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1
diff --git a/src/main/java/com/hearthsim/card/minion/concrete/YoungPriestess.java b/src/main/java/com/hearthsim/card/minion/concrete/YoungPriestess.java
index 400544e..043c4f1 100644
--- a/src/main/java/com/hearthsim/card/minion/concrete/YoungPriestess.java
+++ b/src/main/java/com/hearthsim/card/minion/concrete/YoungPriestess.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.minion.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
diff --git a/src/main/java/com/hearthsim/card/minion/heroes/Druid.java b/src/main/java/com/hearthsim/card/minion/heroes/Druid.java
index b57d392..bdef841 100644
--- a/src/main/java/com/hearthsim/card/minion/heroes/Druid.java
+++ b/src/main/java/com/hearthsim/card/minion/heroes/Druid.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.heroes;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.DeepCopyable;
@@ -69,7 +70,7 @@ public class Druid extends Hero {
 	
 	public HearthTreeNode useHeroAbility_core(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/heroes/Hunter.java b/src/main/java/com/hearthsim/card/minion/heroes/Hunter.java
index e0307db..5a204d2 100644
--- a/src/main/java/com/hearthsim/card/minion/heroes/Hunter.java
+++ b/src/main/java/com/hearthsim/card/minion/heroes/Hunter.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.heroes;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.DeepCopyable;
@@ -69,7 +70,7 @@ public class Hunter extends Hero {
 	
 	public HearthTreeNode useHeroAbility_core(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/heroes/Mage.java b/src/main/java/com/hearthsim/card/minion/heroes/Mage.java
index 0625c77..f71a723 100644
--- a/src/main/java/com/hearthsim/card/minion/heroes/Mage.java
+++ b/src/main/java/com/hearthsim/card/minion/heroes/Mage.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.heroes;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.DeepCopyable;
@@ -69,7 +70,7 @@ public class Mage extends Hero {
 	
 	public HearthTreeNode useHeroAbility_core(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/heroes/NewHero.java b/src/main/java/com/hearthsim/card/minion/heroes/NewHero.java
index 6863d18..5ed8f8b 100644
--- a/src/main/java/com/hearthsim/card/minion/heroes/NewHero.java
+++ b/src/main/java/com/hearthsim/card/minion/heroes/NewHero.java
@@ -98,7 +98,7 @@ public class NewHero extends BaseEntity
 	
 	public HearthTreeNode attack(
 			PlayerSide targetMinionPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -133,7 +133,7 @@ public class NewHero extends BaseEntity
 	}
 	
 	
-    public boolean canBeUsedOn(PlayerSide playerSide, Minion minion, BoardModel boardModel) {
+    public boolean canBeUsedOn(PlayerSide playerSide, BaseEntity minion, BoardModel boardModel) {
 		if (hasBeenUsed)
 			return false;
 		if (!minion.isHeroTargetable())
@@ -143,7 +143,7 @@ public class NewHero extends BaseEntity
 
 	public final HearthTreeNode useHeroAbility(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -164,7 +164,7 @@ public class NewHero extends BaseEntity
 	 */
 	public final HearthTreeNode useHeroAbility(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -183,7 +183,7 @@ public class NewHero extends BaseEntity
 	
 	public HearthTreeNode useHeroAbility_core(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/heroes/Paladin.java b/src/main/java/com/hearthsim/card/minion/heroes/Paladin.java
index 2d10aed..2318562 100644
--- a/src/main/java/com/hearthsim/card/minion/heroes/Paladin.java
+++ b/src/main/java/com/hearthsim/card/minion/heroes/Paladin.java
@@ -67,7 +67,7 @@ public class Paladin extends Hero {
 	
 	public HearthTreeNode useHeroAbility_core(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/heroes/Priest.java b/src/main/java/com/hearthsim/card/minion/heroes/Priest.java
index 23124cc..f669705 100644
--- a/src/main/java/com/hearthsim/card/minion/heroes/Priest.java
+++ b/src/main/java/com/hearthsim/card/minion/heroes/Priest.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.heroes;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -53,7 +54,7 @@ public class Priest extends Hero {
 	}
 
 	
-    public boolean canBeUsedOn(PlayerSide playerSide, Minion minion, BoardModel boardModel) {
+    public boolean canBeUsedOn(PlayerSide playerSide, BaseEntity minion, BoardModel boardModel) {
 		return super.canBeUsedOn(playerSide, minion, boardModel) && minion.getTotalHealth() < minion.getTotalMaxHealth();
     }
 	
@@ -71,7 +72,7 @@ public class Priest extends Hero {
 	
 	public HearthTreeNode useHeroAbility_core(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/minion/heroes/Shaman.java b/src/main/java/com/hearthsim/card/minion/heroes/Shaman.java
index 9ab66db..4e6d83d 100644
--- a/src/main/java/com/hearthsim/card/minion/heroes/Shaman.java
+++ b/src/main/java/com/hearthsim/card/minion/heroes/Shaman.java
@@ -77,7 +77,7 @@ public class Shaman extends Hero {
 	
 	public HearthTreeNode useHeroAbility_core(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -94,7 +94,7 @@ public class Shaman extends Hero {
 		
 		if (singleRealizationOnly) {
 			HearthTreeNode toRet = boardState;
-			Minion minionToSummon = null;
+			BaseEntity minionToSummon = null;
 			Minion[] allTotems = {new SearingTotem(), new StoneclawTotem(), new HealingTotem(), new WrathOfAirTotem()};
 			for(int i = allTotems.length - 1; i > 0; --i) {
 				int j = (int)(Math.random() * (i + 1));
@@ -104,7 +104,7 @@ public class Shaman extends Hero {
 			}
 			for (int index = 0; index < 4; ++index) {
 				boolean totemAlreadySummoned = false;
-				for (Minion minion : toRet.data_.getMinions(targetPlayerSide)) {
+				for (BaseEntity minion : toRet.data_.getMinions(targetPlayerSide)) {
 					if (minion.getClass().equals(allTotems[index].getClass())) {
 						totemAlreadySummoned = true;
 					}
@@ -119,7 +119,7 @@ public class Shaman extends Hero {
 			this.hasBeenUsed = true;
 			toRet.data_.getCurrentPlayer().subtractMana(HERO_ABILITY_COST);
 			BaseEntity summonTarget = toRet.data_.getCharacter(targetPlayerSide, numMinions);
-			toRet = minionToSummon.summonMinion(targetPlayerSide, summonTarget, toRet, deckPlayer0, deckPlayer1, false);
+			toRet = ((Minion) minionToSummon).summonMinion(targetPlayerSide, summonTarget, toRet, deckPlayer0, deckPlayer1, false);
 			return toRet;
 		}
 		
@@ -129,7 +129,7 @@ public class Shaman extends Hero {
 			boolean allTotemsNotSummonable = true;
 			for (Minion totemToSummon : totems) {
 				boolean totemAlreadySummoned = false;
-				for (Minion minion : toRet.data_.getMinions(targetPlayerSide)) {
+				for (BaseEntity minion : toRet.data_.getMinions(targetPlayerSide)) {
 					if (minion.getClass().equals(totemToSummon.getClass())) {
 						totemAlreadySummoned = true;
 						break;
diff --git a/src/main/java/com/hearthsim/card/minion/heroes/Warlock.java b/src/main/java/com/hearthsim/card/minion/heroes/Warlock.java
index 03a04b5..01b2a2b 100644
--- a/src/main/java/com/hearthsim/card/minion/heroes/Warlock.java
+++ b/src/main/java/com/hearthsim/card/minion/heroes/Warlock.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.minion.heroes;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.DeepCopyable;
@@ -70,7 +71,7 @@ public class Warlock extends Hero {
 	
 	public HearthTreeNode useHeroAbility_core(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/SpellCard.java b/src/main/java/com/hearthsim/card/spellcard/SpellCard.java
index c3fd0eb..380056c 100644
--- a/src/main/java/com/hearthsim/card/spellcard/SpellCard.java
+++ b/src/main/java/com/hearthsim/card/spellcard/SpellCard.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.spellcard;
 
 import com.hearthsim.card.Card;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
 import org.json.JSONObject;
@@ -19,7 +20,7 @@ public class SpellCard extends Card {
 	}
 
     @Override
-    public boolean canBeUsedOn(PlayerSide playerSide, Minion minion, BoardModel boardModel) {
+    public boolean canBeUsedOn(PlayerSide playerSide, BaseEntity minion, BoardModel boardModel) {
         return !hasBeenUsed && !minion.getStealthed() && minion.isHeroTargetable();
     }
 
diff --git a/src/main/java/com/hearthsim/card/spellcard/SpellDamage.java b/src/main/java/com/hearthsim/card/spellcard/SpellDamage.java
index fa6ea58..1d6777c 100644
--- a/src/main/java/com/hearthsim/card/spellcard/SpellDamage.java
+++ b/src/main/java/com/hearthsim/card/spellcard/SpellDamage.java
@@ -2,6 +2,7 @@ package com.hearthsim.card.spellcard;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -66,7 +67,7 @@ public class SpellDamage extends SpellCard {
 	 */
 	public HearthTreeNode attack(
 			PlayerSide targetMinionPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -90,7 +91,7 @@ public class SpellDamage extends SpellCard {
 	 */
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/AncestralHealing.java b/src/main/java/com/hearthsim/card/spellcard/concrete/AncestralHealing.java
index f9a185f..0920aff 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/AncestralHealing.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/AncestralHealing.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -47,7 +47,7 @@ public class AncestralHealing extends SpellCard {
 	 */
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/AncestralSpirit.java b/src/main/java/com/hearthsim/card/spellcard/concrete/AncestralSpirit.java
index 8e11a56..8dc8b84 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/AncestralSpirit.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/AncestralSpirit.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.event.deathrattle.DeathrattleSummonMinionAction;
@@ -48,7 +48,7 @@ public class AncestralSpirit extends SpellCard {
 
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/AnimalCompanion.java b/src/main/java/com/hearthsim/card/spellcard/concrete/AnimalCompanion.java
index 9ef39ad..ea4f326 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/AnimalCompanion.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/AnimalCompanion.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Huffer;
 import com.hearthsim.card.minion.concrete.Leokk;
@@ -57,7 +57,7 @@ public class AnimalCompanion extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -78,7 +78,7 @@ public class AnimalCompanion extends SpellCard {
 			toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 			if (toRet != null) {
 				double rnd = Math.random();
-				Minion minion = null;
+				BaseEntity minion = null;
 				if (rnd < 0.333333333333333333333333333) {
 					minion = new Huffer();
 				} else if (rnd > 0.66666666666666666666666666666) {
@@ -87,17 +87,17 @@ public class AnimalCompanion extends SpellCard {
 					minion = new Misha();
 				}
             	BaseEntity placementTarget = toRet.data_.getCharacter(side, toRet.data_.getMinions(side).size()); //this minion can't be a hero
-            	toRet = minion.summonMinion(side, placementTarget, toRet, deckPlayer0, deckPlayer1, false);					
+            	toRet = (minion).summonMinion(side, placementTarget, toRet, deckPlayer0, deckPlayer1, false);					
 			}
 		} else {
 			toRet = new RandomEffectNode(boardState, new HearthAction(HearthAction.Verb.USE_CARD, PlayerSide.CURRENT_PLAYER, 0, side, 0));
 			if (toRet != null) {
 				int thisCardIndex = side.getPlayer(boardState).getHand().indexOf(this);
-				for (Minion minion : new Minion[]{ new Huffer(), new Leokk(), new Misha()}) {
+				for (BaseEntity minion : new Minion[]{ new Huffer(), new Leokk(), new Misha()}) {
 					HearthTreeNode newState = toRet.addChild(new HearthTreeNode((BoardModel) toRet.data_.deepCopy()));
 					newState = super.use_core(side, side.getPlayer(newState).getHero(), newState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 					BaseEntity placementTarget = newState.data_.getCharacter(side, newState.data_.getMinions(side).size()); //this minion can't be a hero
-	            	newState = minion.summonMinion(side, placementTarget, newState, deckPlayer0, deckPlayer1, false);					
+	            	newState = (minion).summonMinion(side, placementTarget, newState, deckPlayer0, deckPlayer1, false);					
 					newState.data_.getCurrentPlayer().subtractMana(this.mana_);
 					side.getPlayer(newState).getHand().remove(thisCardIndex);
 				}
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/ArcaneExplosion.java b/src/main/java/com/hearthsim/card/spellcard/concrete/ArcaneExplosion.java
index 4f58987..10d9653 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/ArcaneExplosion.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/ArcaneExplosion.java
@@ -1,8 +1,9 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -48,7 +49,7 @@ public class ArcaneExplosion extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -65,7 +66,7 @@ public class ArcaneExplosion extends SpellCard {
 		
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 
 				toRet = minion.takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
 			}
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/ArcaneIntellect.java b/src/main/java/com/hearthsim/card/spellcard/concrete/ArcaneIntellect.java
index 158acd8..98badcb 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/ArcaneIntellect.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/ArcaneIntellect.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -49,7 +49,7 @@ public class ArcaneIntellect extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Assassinate.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Assassinate.java
index ef745f2..409e553 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Assassinate.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Assassinate.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class Assassinate extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Backstab.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Backstab.java
index 9281d07..58ad362 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Backstab.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Backstab.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -38,7 +38,7 @@ public class Backstab extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/BattleRage.java b/src/main/java/com/hearthsim/card/spellcard/concrete/BattleRage.java
index 292bd99..756a46d 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/BattleRage.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/BattleRage.java
@@ -1,9 +1,10 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerModel;
 import com.hearthsim.model.PlayerSide;
@@ -53,7 +54,7 @@ public class BattleRage extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide targetPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -70,7 +71,7 @@ public class BattleRage extends SpellCard {
             Hero hero = playerModel.getHero();
             MinionList minions = playerModel.getMinions();
             int numCardsToDraw = hero.getTotalHealth() < hero.getTotalMaxHealth() ? 1 : 0;
-			for (Minion minion : minions) {
+			for (BaseEntity minion : minions) {
 				numCardsToDraw += minion.getTotalHealth() < minion.getTotalMaxHealth() ? 1 : 0;
 			}
 			if (toRet instanceof CardDrawNode) {
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Bite.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Bite.java
index 92b88b0..c4fdde6 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Bite.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Bite.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/BlessedChampion.java b/src/main/java/com/hearthsim/card/spellcard/concrete/BlessedChampion.java
index d705bb9..02d6ef7 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/BlessedChampion.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/BlessedChampion.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class BlessedChampion extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/BlessingOfKings.java b/src/main/java/com/hearthsim/card/spellcard/concrete/BlessingOfKings.java
index abaede9..af1df81 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/BlessingOfKings.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/BlessingOfKings.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class BlessingOfKings extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/BlessingOfMight.java b/src/main/java/com/hearthsim/card/spellcard/concrete/BlessingOfMight.java
index 2925daf..572ef9c 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/BlessingOfMight.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/BlessingOfMight.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -47,7 +47,7 @@ public class BlessingOfMight extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Bloodlust.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Bloodlust.java
index 85ad335..9db8cb6 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Bloodlust.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Bloodlust.java
@@ -1,8 +1,9 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -38,7 +39,7 @@ public class Bloodlust extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -51,7 +52,7 @@ public class Bloodlust extends SpellCard {
 		
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		
-		for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 			minion.setExtraAttackUntilTurnEnd((byte)3);
 		}
 		return toRet;
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Charge.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Charge.java
index 7c970d8..163dfa6 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Charge.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Charge.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class Charge extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/CircleOfHealing.java b/src/main/java/com/hearthsim/card/spellcard/concrete/CircleOfHealing.java
index 7a6819f..d31bb5b 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/CircleOfHealing.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/CircleOfHealing.java
@@ -1,8 +1,9 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -51,7 +52,7 @@ public class CircleOfHealing extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -62,11 +63,11 @@ public class CircleOfHealing extends SpellCard {
 			return null;
 		
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
-		for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 			toRet = minion.takeHeal(HEAL_AMOUNT, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1);
 		}
 
-		for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 			toRet = minion.takeHeal(HEAL_AMOUNT, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1);
 		}
 
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Claw.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Claw.java
index ef3e984..1332394 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Claw.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Claw.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Consecration.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Consecration.java
index 20d6255..59ebc25 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Consecration.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Consecration.java
@@ -1,8 +1,9 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -50,7 +51,7 @@ public class Consecration extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -63,7 +64,7 @@ public class Consecration extends SpellCard {
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		if (toRet != null) {
 			toRet = toRet.data_.getWaitingPlayerHero().takeDamage(DAMAGE_AMOUNT, PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = minion.takeDamage(DAMAGE_AMOUNT, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
 			}
 		}
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Corruption.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Corruption.java
index 8e09d97..3b80141 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Corruption.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Corruption.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class Corruption extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/DeadlyPoison.java b/src/main/java/com/hearthsim/card/spellcard/concrete/DeadlyPoison.java
index 0fb2b6b..620d48f 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/DeadlyPoison.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/DeadlyPoison.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Demonfire.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Demonfire.java
index d5c051b..9e91125 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Demonfire.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Demonfire.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Demon;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
@@ -51,7 +51,7 @@ public class Demonfire extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/DivineFavor.java b/src/main/java/com/hearthsim/card/spellcard/concrete/DivineFavor.java
index 3248471..ad8a032 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/DivineFavor.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/DivineFavor.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class DivineFavor extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/DivineSpirit.java b/src/main/java/com/hearthsim/card/spellcard/concrete/DivineSpirit.java
index 6ad577c..fc8ff69 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/DivineSpirit.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/DivineSpirit.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -49,7 +49,7 @@ public class DivineSpirit extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/DrainLife.java b/src/main/java/com/hearthsim/card/spellcard/concrete/DrainLife.java
index fae6dbb..b4958d1 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/DrainLife.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/DrainLife.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -38,7 +38,7 @@ public class DrainLife extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Equality.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Equality.java
index de34722..854f0f4 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Equality.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Equality.java
@@ -1,8 +1,9 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -44,7 +45,7 @@ public class Equality extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -57,10 +58,10 @@ public class Equality extends SpellCard {
 		
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				minion.setHealth((byte)1);
 			}
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				minion.setHealth((byte)1);
 			}
 		}
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/ExcessMana.java b/src/main/java/com/hearthsim/card/spellcard/concrete/ExcessMana.java
index 39e72fa..062f828 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/ExcessMana.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/ExcessMana.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -49,7 +49,7 @@ public class ExcessMana extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Execute.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Execute.java
index c7ef09d..fdfccb4 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Execute.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Execute.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class Execute extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/FanOfKnives.java b/src/main/java/com/hearthsim/card/spellcard/concrete/FanOfKnives.java
index 2a39792..c9979f6 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/FanOfKnives.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/FanOfKnives.java
@@ -1,8 +1,9 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.CardDrawNode;
@@ -50,7 +51,7 @@ public class FanOfKnives extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -67,7 +68,7 @@ public class FanOfKnives extends SpellCard {
 		
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = minion.takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
 			}
 			
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Flamestrike.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Flamestrike.java
index 7044dd2..13b4017 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Flamestrike.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Flamestrike.java
@@ -1,8 +1,9 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -48,7 +49,7 @@ public class Flamestrike extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -65,7 +66,7 @@ public class Flamestrike extends SpellCard {
 		
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = minion.takeDamage((byte)4, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
 			}
 		}
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/FrostNova.java b/src/main/java/com/hearthsim/card/spellcard/concrete/FrostNova.java
index d3d7b3c..0b2e9e6 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/FrostNova.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/FrostNova.java
@@ -1,8 +1,9 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -47,7 +48,7 @@ public class FrostNova extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -64,7 +65,7 @@ public class FrostNova extends SpellCard {
 		
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				minion.setFrozen(true);
 			}
 		}		
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/FrostShock.java b/src/main/java/com/hearthsim/card/spellcard/concrete/FrostShock.java
index 589e6ce..b248032 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/FrostShock.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/FrostShock.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -38,7 +38,7 @@ public class FrostShock extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Frostbolt.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Frostbolt.java
index e32194e..582404d 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Frostbolt.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Frostbolt.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -38,7 +38,7 @@ public class Frostbolt extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/HammerOfWrath.java b/src/main/java/com/hearthsim/card/spellcard/concrete/HammerOfWrath.java
index 0d6d1e6..67689da 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/HammerOfWrath.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/HammerOfWrath.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -39,7 +39,7 @@ public class HammerOfWrath extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/HandOfProtection.java b/src/main/java/com/hearthsim/card/spellcard/concrete/HandOfProtection.java
index a7c971f..933bc5c 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/HandOfProtection.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/HandOfProtection.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class HandOfProtection extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/HealingTouch.java b/src/main/java/com/hearthsim/card/spellcard/concrete/HealingTouch.java
index 3c49d7f..a78f40d 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/HealingTouch.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/HealingTouch.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -50,7 +50,7 @@ public class HealingTouch extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Hellfire.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Hellfire.java
index 6b9e019..a372220 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Hellfire.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Hellfire.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -50,7 +50,7 @@ public class Hellfire extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -63,12 +63,12 @@ public class Hellfire extends SpellCard {
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		if (toRet != null) {
 			toRet = toRet.data_.getCurrentPlayerHero().takeDamage(DAMAGE_AMOUNT, PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = minion.takeDamage(DAMAGE_AMOUNT, PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
 			}
 	
 			toRet = toRet.data_.getWaitingPlayerHero().takeDamage(DAMAGE_AMOUNT, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = minion.takeDamage(DAMAGE_AMOUNT, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
 			}
 		}		
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/HeroicStrike.java b/src/main/java/com/hearthsim/card/spellcard/concrete/HeroicStrike.java
index 2e21708..2652926 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/HeroicStrike.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/HeroicStrike.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -49,7 +49,7 @@ public class HeroicStrike extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Hex.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Hex.java
index 76db13c..e236ebc 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Hex.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Hex.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Frog;
 import com.hearthsim.card.spellcard.SpellCard;
@@ -49,7 +49,7 @@ public class Hex extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/HolyFire.java b/src/main/java/com/hearthsim/card/spellcard/concrete/HolyFire.java
index 390a945..c2459ab 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/HolyFire.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/HolyFire.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -39,7 +39,7 @@ public class HolyFire extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/HolyLight.java b/src/main/java/com/hearthsim/card/spellcard/concrete/HolyLight.java
index 90b6821..381c1f9 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/HolyLight.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/HolyLight.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -50,7 +50,7 @@ public class HolyLight extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/HolyNova.java b/src/main/java/com/hearthsim/card/spellcard/concrete/HolyNova.java
index a39dade..c6e5390 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/HolyNova.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/HolyNova.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -49,7 +49,7 @@ public class HolyNova extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -67,12 +67,12 @@ public class HolyNova extends SpellCard {
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		if (toRet != null) {
 			toRet = toRet.data_.getCurrentPlayerHero().takeHeal((byte)2, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1);
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = minion.takeHeal((byte)2, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1);
 			}
 			
 			toRet = toRet.data_.getWaitingPlayerHero().takeDamage((byte)2, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = minion.takeDamage((byte)2, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
 			}
 		}
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Humility.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Humility.java
index 1e358fe..40fc2b1 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Humility.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Humility.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -50,7 +50,7 @@ public class Humility extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/HuntersMark.java b/src/main/java/com/hearthsim/card/spellcard/concrete/HuntersMark.java
index 70a48f1..a206d51 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/HuntersMark.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/HuntersMark.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -47,7 +47,7 @@ public class HuntersMark extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/InnerFire.java b/src/main/java/com/hearthsim/card/spellcard/concrete/InnerFire.java
index 8704e32..bfbb026 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/InnerFire.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/InnerFire.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class InnerFire extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/InnerRage.java b/src/main/java/com/hearthsim/card/spellcard/concrete/InnerRage.java
index 8068315..3723790 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/InnerRage.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/InnerRage.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class InnerRage extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Innervate.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Innervate.java
index b8fc843..28b2a58 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Innervate.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Innervate.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class Innervate extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/KillCommand.java b/src/main/java/com/hearthsim/card/spellcard/concrete/KillCommand.java
index a4a7bce..0f99608 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/KillCommand.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/KillCommand.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Beast;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
@@ -48,7 +48,7 @@ public class KillCommand extends SpellDamage {
 		throws HSException
 	{
 		boolean haveBeast = false;
-		for (final Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(boardState).getMinions()) {
+		for (final BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(boardState).getMinions()) {
 			haveBeast = haveBeast || minion instanceof Beast;
 		}
 		if (haveBeast)
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/LavaBurst.java b/src/main/java/com/hearthsim/card/spellcard/concrete/LavaBurst.java
index 16c7a86..656b94e 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/LavaBurst.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/LavaBurst.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -38,7 +38,7 @@ public class LavaBurst extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/LayOnHands.java b/src/main/java/com/hearthsim/card/spellcard/concrete/LayOnHands.java
index fb8a276..a514707 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/LayOnHands.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/LayOnHands.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -49,7 +49,7 @@ public class LayOnHands extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/LightningBolt.java b/src/main/java/com/hearthsim/card/spellcard/concrete/LightningBolt.java
index ca0d729..26a97e5 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/LightningBolt.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/LightningBolt.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -38,7 +38,7 @@ public class LightningBolt extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/MarkOfTheWild.java b/src/main/java/com/hearthsim/card/spellcard/concrete/MarkOfTheWild.java
index 84bf3cd..846d712 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/MarkOfTheWild.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/MarkOfTheWild.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -49,7 +49,7 @@ public class MarkOfTheWild extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/MindBlast.java b/src/main/java/com/hearthsim/card/spellcard/concrete/MindBlast.java
index 802157a..82506b7 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/MindBlast.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/MindBlast.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -38,7 +38,7 @@ public class MindBlast extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/MindControl.java b/src/main/java/com/hearthsim/card/spellcard/concrete/MindControl.java
index f603376..12f1f59 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/MindControl.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/MindControl.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class MindControl extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/MirrorImage.java b/src/main/java/com/hearthsim/card/spellcard/concrete/MirrorImage.java
index 1dc5193..d6cd05e 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/MirrorImage.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/MirrorImage.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.MirrorImageMinion;
 import com.hearthsim.card.spellcard.SpellCard;
@@ -51,7 +51,7 @@ public class MirrorImage extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/MortalCoil.java b/src/main/java/com/hearthsim/card/spellcard/concrete/MortalCoil.java
index b8c0d12..e8a54e6 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/MortalCoil.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/MortalCoil.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -39,7 +39,7 @@ public class MortalCoil extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Polymorph.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Polymorph.java
index 560f7e7..0042fbd 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Polymorph.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Polymorph.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Sheep;
 import com.hearthsim.card.spellcard.SpellCard;
@@ -49,7 +49,7 @@ public class Polymorph extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/PowerWordShield.java b/src/main/java/com/hearthsim/card/spellcard/concrete/PowerWordShield.java
index 401d3af..9259f83 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/PowerWordShield.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/PowerWordShield.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -49,7 +49,7 @@ public class PowerWordShield extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/RockbiterWeapon.java b/src/main/java/com/hearthsim/card/spellcard/concrete/RockbiterWeapon.java
index 38a9c4f..c520616 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/RockbiterWeapon.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/RockbiterWeapon.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class RockbiterWeapon extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/SacrificialPact.java b/src/main/java/com/hearthsim/card/spellcard/concrete/SacrificialPact.java
index 8aa4600..237ee39 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/SacrificialPact.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/SacrificialPact.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Demon;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
@@ -49,7 +49,7 @@ public class SacrificialPact extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Sap.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Sap.java
index 0b47b2f..ae793b3 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Sap.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Sap.java
@@ -1,7 +1,7 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Card;
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -53,7 +53,7 @@ public class Sap extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/SavageRoar.java b/src/main/java/com/hearthsim/card/spellcard/concrete/SavageRoar.java
index 512b33b..72a3936 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/SavageRoar.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/SavageRoar.java
@@ -1,7 +1,7 @@
 package com.hearthsim.card.spellcard.concrete;
 
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -50,7 +50,7 @@ public class SavageRoar extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -62,7 +62,7 @@ public class SavageRoar extends SpellCard {
 		}
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		toRet.data_.getCurrentPlayerHero().setExtraAttackUntilTurnEnd((byte)2);
-		for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions())
+		for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions())
 			minion.setExtraAttackUntilTurnEnd((byte)2);
 		
 		return toRet;
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowBolt.java b/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowBolt.java
index fb635ec..40fcb27 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowBolt.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowBolt.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -39,7 +39,7 @@ public class ShadowBolt extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowWordDeath.java b/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowWordDeath.java
index 25f93c6..21fd6f6 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowWordDeath.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowWordDeath.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class ShadowWordDeath extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowWordPain.java b/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowWordPain.java
index 89bb2e2..fc49234 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowWordPain.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/ShadowWordPain.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class ShadowWordPain extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/ShieldBlock.java b/src/main/java/com/hearthsim/card/spellcard/concrete/ShieldBlock.java
index 25f6bff..c9edfac 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/ShieldBlock.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/ShieldBlock.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -50,7 +50,7 @@ public class ShieldBlock extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Shiv.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Shiv.java
index a72ce79..6e2d16a 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Shiv.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Shiv.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -40,7 +40,7 @@ public class Shiv extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Silence.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Silence.java
index 3956f2a..1c51a3d 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Silence.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Silence.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -39,7 +39,7 @@ public class Silence extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/SinisterStrike.java b/src/main/java/com/hearthsim/card/spellcard/concrete/SinisterStrike.java
index dfa13bb..0771409 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/SinisterStrike.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/SinisterStrike.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -38,7 +38,7 @@ public class SinisterStrike extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Slam.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Slam.java
index 80a08b5..5354b0c 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Slam.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Slam.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -39,7 +39,7 @@ public class Slam extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Sprint.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Sprint.java
index 167d7dc..a4af7cf 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Sprint.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Sprint.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -50,7 +50,7 @@ public class Sprint extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Starfire.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Starfire.java
index 63089a8..d038053 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Starfire.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Starfire.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
 import com.hearthsim.exception.HSException;
@@ -40,7 +40,7 @@ public class Starfire extends SpellDamage {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Swipe.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Swipe.java
index 25661a0..ed6ae39 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Swipe.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Swipe.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -49,7 +49,7 @@ public class Swipe extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -64,7 +64,7 @@ public class Swipe extends SpellCard {
 		toRet = targetMinion.takeDamage((byte)4, PlayerSide.CURRENT_PLAYER, side, toRet, deckPlayer0, deckPlayer1, true, false);
 		if (isNotHero(targetMinion))
 			toRet = toRet.data_.getWaitingPlayerHero().takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, side, boardState, deckPlayer0, deckPlayer1, true, false);
-		for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+		for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 			if (minion != targetMinion)
 				toRet = minion.takeDamage((byte)1, PlayerSide.CURRENT_PLAYER, side, toRet, deckPlayer0, deckPlayer1, true, false);
 		}
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/TheCoin.java b/src/main/java/com/hearthsim/card/spellcard/concrete/TheCoin.java
index 2269543..7191501 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/TheCoin.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/TheCoin.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -25,7 +25,7 @@ public class TheCoin extends SpellCard {
 	}
 
 	
-    public boolean canBeUsedOn(PlayerSide playerSide, Minion minion, BoardModel boardModel) {
+    public boolean canBeUsedOn(PlayerSide playerSide, BaseEntity minion, BoardModel boardModel) {
         return !(isWaitingPlayer(playerSide) || isNotHero(minion));
     }
 	
@@ -43,7 +43,7 @@ public class TheCoin extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/TotemicMight.java b/src/main/java/com/hearthsim/card/spellcard/concrete/TotemicMight.java
index 63cda57..3bb7492 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/TotemicMight.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/TotemicMight.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.Totem;
 import com.hearthsim.card.spellcard.SpellCard;
@@ -49,7 +49,7 @@ public class TotemicMight extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -62,7 +62,7 @@ public class TotemicMight extends SpellCard {
 		
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				if (minion instanceof Totem) {
 					minion.setHealth((byte)(2 + minion.getHealth()));
 					minion.setMaxHealth((byte)(2 + minion.getMaxHealth()));
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Whirlwind.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Whirlwind.java
index 178073e..7973f66 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Whirlwind.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Whirlwind.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -50,7 +50,7 @@ public class Whirlwind extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -63,11 +63,11 @@ public class Whirlwind extends SpellCard {
 		HearthTreeNode toRet = super.use_core(side, targetMinion, boardState, deckPlayer0, deckPlayer1, singleRealizationOnly);
 		
 		if (toRet != null) {
-			for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = minion.takeDamage(DAMAGE_AMOUNT, PlayerSide.CURRENT_PLAYER, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
 			}
 	
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = minion.takeDamage(DAMAGE_AMOUNT, PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1, true, false);
 			}
 		}
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/WildGrowth.java b/src/main/java/com/hearthsim/card/spellcard/concrete/WildGrowth.java
index 6dd2767..72c516c 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/WildGrowth.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/WildGrowth.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -50,7 +50,7 @@ public class WildGrowth extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/spellcard/concrete/Windfury.java b/src/main/java/com/hearthsim/card/spellcard/concrete/Windfury.java
index 50d290a..c4fcd2d 100644
--- a/src/main/java/com/hearthsim/card/spellcard/concrete/Windfury.java
+++ b/src/main/java/com/hearthsim/card/spellcard/concrete/Windfury.java
@@ -1,6 +1,6 @@
 package com.hearthsim.card.spellcard.concrete;
 
-import com.hearthsim.card.Deck;
+import com.hearthsim.card.Deck;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellCard;
 import com.hearthsim.exception.HSException;
@@ -48,7 +48,7 @@ public class Windfury extends SpellCard {
 	
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/weapon/WeaponCard.java b/src/main/java/com/hearthsim/card/weapon/WeaponCard.java
index e565f0c..622398b 100644
--- a/src/main/java/com/hearthsim/card/weapon/WeaponCard.java
+++ b/src/main/java/com/hearthsim/card/weapon/WeaponCard.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.weapon;
 import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -74,7 +75,7 @@ public class WeaponCard extends Card {
 	 */
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/card/weapon/concrete/StormforgedAxe.java b/src/main/java/com/hearthsim/card/weapon/concrete/StormforgedAxe.java
index aad4277..19852e1 100644
--- a/src/main/java/com/hearthsim/card/weapon/concrete/StormforgedAxe.java
+++ b/src/main/java/com/hearthsim/card/weapon/concrete/StormforgedAxe.java
@@ -3,6 +3,7 @@ package com.hearthsim.card.weapon.concrete;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.weapon.WeaponCard;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -32,7 +33,7 @@ public class StormforgedAxe extends WeaponCard {
 	 */
 	protected HearthTreeNode use_core(
 			PlayerSide side,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
diff --git a/src/main/java/com/hearthsim/entity/BaseEntity.java b/src/main/java/com/hearthsim/entity/BaseEntity.java
index 4532fb4..48e6e1f 100644
--- a/src/main/java/com/hearthsim/entity/BaseEntity.java
+++ b/src/main/java/com/hearthsim/entity/BaseEntity.java
@@ -389,56 +389,6 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	{
 		super(name,mana,hasBeenUsed,isInHand);
 	}
-
-	public HearthTreeNode attack(
-			PlayerSide targetMinionPlayerSide,
-			BaseEntity targetMinion,
-			HearthTreeNode boardState,
-			Deck deckPlayer0,
-			Deck deckPlayer1)
-		throws HSException
-	{
-		
-		//can't attack a stealthed target
-		if (targetMinion.getStealthed())
-			return null;
-		
-		if (frozen_) {
-			this.hasAttacked_ = true;
-			this.frozen_ = false;
-			return boardState;
-		}
-		
-		//Notify all that an attack is beginning
-		HearthTreeNode toRet = boardState;
-		if (toRet != null) {
-			//Notify all that a minion is created
-			toRet = toRet.data_.getCurrentPlayerHero().minionAttackingEvent(toRet);
-            for (Minion entity : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!entity.isSilenced())
-                    toRet = entity.minionAttackingEvent(toRet);
-            }
-			toRet = toRet.data_.getWaitingPlayerHero().minionAttackingEvent(toRet);
-            for (Minion entity : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-                if (!entity.isSilenced())
-                    toRet = entity.minionAttackingEvent(toRet);
-            }
-		}
-		
-		//Do the actual attack
-		toRet = this.attack_core(targetMinionPlayerSide, targetMinion, boardState, deckPlayer0, deckPlayer1);
-		
-		//check for and remove dead minions
-		if (toRet != null) {
-			toRet = BoardStateFactoryBase.handleDeadMinions(toRet, deckPlayer0, deckPlayer1);
-		}
-		
-		//Attacking means you lose stealth
-		if (toRet != null)
-			this.stealthed_ = false;
-		
-		return toRet;
-	}
 	
     /**
 	 * Called at the start of the turn
@@ -505,15 +455,15 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 			
 			//Notify all that the minion is damaged
 			HearthTreeNode toRet = boardState;
-			toRet = toRet.data_.getCurrentPlayerHero().minionDamagedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+			toRet = toRet.data_.getCurrentPlayerHero().minionDamagedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
 			for (int j = 0; j < PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
 				if (!PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).isSilenced())
-					toRet = PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).minionDamagedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+					toRet = PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).minionDamagedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
 			}
-			toRet = toRet.data_.getWaitingPlayerHero().minionDamagedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+			toRet = toRet.data_.getWaitingPlayerHero().minionDamagedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
 			for (int j = 0; j < PlayerSide.WAITING_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
 				if (!PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).isSilenced())
-					toRet = PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).minionDamagedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+					toRet = PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).minionDamagedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
 			}
 			
 			return toRet;
@@ -545,19 +495,19 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 
         //perform the deathrattle action if there is one
         if (deathrattleAction_ != null) {
-            toRet =  deathrattleAction_.performAction((Minion) this, thisPlayerSide, toRet, deckPlayer0, deckPlayer1);
+            toRet =  deathrattleAction_.performAction(this, thisPlayerSide, toRet, deckPlayer0, deckPlayer1);
         }
 
         //Notify all that it is dead
-        toRet = toRet.data_.getCurrentPlayerHero().minionDeadEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+        toRet = toRet.data_.getCurrentPlayerHero().minionDeadEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
         for (int j = 0; j < PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
             if (!PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).isSilenced())
-                toRet = PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).minionDeadEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+                toRet = PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions().get(j).minionDeadEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
         }
-        toRet = toRet.data_.getWaitingPlayerHero().minionDeadEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+        toRet = toRet.data_.getWaitingPlayerHero().minionDeadEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
         for (int j = 0; j < PlayerSide.WAITING_PLAYER.getPlayer(toRet).getNumMinions(); ++j) {
             if (!PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).isSilenced())
-                toRet = PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).minionDeadEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+                toRet = PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions().get(j).minionDeadEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
         }
 
         return toRet;
@@ -621,15 +571,15 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 			
 			//Notify all that it the minion is healed
 			HearthTreeNode toRet = boardState;
-			toRet = toRet.data_.getCurrentPlayerHero().minionHealedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
-            for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			toRet = toRet.data_.getCurrentPlayerHero().minionHealedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
+            for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
                 if (!minion.isSilenced())
-                    toRet = minion.minionHealedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+                    toRet = minion.minionHealedEvent(PlayerSide.CURRENT_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
             }
-			toRet = toRet.data_.getWaitingPlayerHero().minionHealedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
-            for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			toRet = toRet.data_.getWaitingPlayerHero().minionHealedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
+            for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
                 if (!minion.isSilenced())
-                    toRet = minion.minionHealedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, (Minion) this, toRet, deckPlayer0, deckPlayer1);
+                    toRet = minion.minionHealedEvent(PlayerSide.WAITING_PLAYER, thisPlayerSide, this, toRet, deckPlayer0, deckPlayer1);
             }
 			return toRet;
 		}
@@ -638,7 +588,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	
 	
 	@Override
-    public boolean canBeUsedOn(PlayerSide playerSide, Minion minion, BoardModel boardModel) {
+    public boolean canBeUsedOn(PlayerSide playerSide, BaseEntity minion, BoardModel boardModel) {
         return playerSide != PlayerSide.WAITING_PLAYER && !hasBeenUsed;
     }
 
@@ -701,9 +651,9 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 		return null;
 	}
 	
-/*	public EnumSet<BattlecryTargetType> getBattlecryTargets() {
+	public EnumSet<BattlecryTargetType> getBattlecryTargets() {
 		return EnumSet.of(BattlecryTargetType.NO_BATTLECRY);
-	}*/
+	}
 	
 	
 	/**
@@ -718,7 +668,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	 * @throws HSException
 	 */
 	public HearthTreeNode useUntargetableBattlecry(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -734,7 +684,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	}
 	
 	public HearthTreeNode useUntargetableBattlecry_core(
-			Minion minionPlacementTarget,
+			BaseEntity minionPlacementTarget,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1,
@@ -756,100 +706,100 @@ public abstract class BaseEntity extends Card implements DeepCopyable
      * @return The boardState is manipulated and returned
 	 * @throws HSException 
 	 */
-//	@Override
-//	protected HearthTreeNode use_core(
-//			PlayerSide side,
-//			Minion targetMinion,
-//			HearthTreeNode boardState,
-//			Deck deckPlayer0,
-//			Deck deckPlayer1,
-//			boolean singleRealizationOnly)
-//		throws HSException
-//	{
-//		if (hasBeenUsed) {
-//			//Card is already used, nothing to do
-//			return null;
-//		}
-//		
-//		if (side == PlayerSide.WAITING_PLAYER)
-//			return null;
-//		
-//		HearthTreeNode toRet = this.summonMinion(side, targetMinion, boardState, deckPlayer0, deckPlayer1, false);
-//		if (toRet != null) { //summon succeeded, now let's use up our mana
-//			toRet.data_.getCurrentPlayer().subtractMana(this.mana_);
-//			toRet.data_.removeCard_hand(this);
-//
-//			//Battlecry if available
-//			for (BattlecryTargetType btt : this.getBattlecryTargets()) {
-//				switch  (btt) {
-//				case NO_TARGET:
-//					toRet = this.useUntargetableBattlecry(targetMinion, toRet, deckPlayer0, deckPlayer1, singleRealizationOnly);
-//					break;
-//				case ENEMY_HERO:
-//					toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, PlayerSide.WAITING_PLAYER.getPlayer(toRet).getHero(), toRet, deckPlayer0, deckPlayer1);
-//					break;
-//				case FRIENDLY_HERO:
-//					toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getHero(), toRet, deckPlayer0, deckPlayer1);
-//					break;
-//				case ENEMY_MINIONS:
-//					for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-//						toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-//					}
-//					break;
-//				case FRIENDLY_MINIONS:
-//					for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-//						if (minion != this)
-//							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-//					}
-//					break;
-//				case ENEMY_BEASTS:
-//					for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-//						if (minion instanceof Beast)
-//							toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-//					}
-//					break;
-//				case FRIENDLY_BEASTS:
-//					for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-//						if (minion != this && minion instanceof Beast)
-//							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-//					}
-//					break;
-//				case ENEMY_MURLOCS:
-//					for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
-//						if (minion instanceof Murloc)
-//							toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-//					}
-//					break;
-//				case FRIENDLY_MURLOCS:
-//					for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
-//						if (minion != this && minion instanceof Murloc)
-//							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
-//					}
-//					break;
-//				default:
-//					break;
-//				}
-//			}
-//			
-//			
-//			//Notify all that a minion is placed
-//			toRet = toRet.data_.getCurrentPlayerHero().minionPlacedEvent(toRet);
-//			for (Iterator<Minion> iter = toRet.data_.getCurrentPlayer().getMinions().iterator(); iter.hasNext();) {
-//				Minion minion = iter.next();
-//				if (!minion.silenced_)
-//					toRet = minion.minionPlacedEvent(toRet);
-//			}
-//			toRet = toRet.data_.getWaitingPlayerHero().minionPlacedEvent(toRet);
-//			for (Iterator<Minion> iter = toRet.data_.getWaitingPlayer().getMinions().iterator(); iter.hasNext();) {
-//				Minion minion = iter.next();
-//				if (!minion.silenced_)
-//					toRet = minion.minionPlacedEvent(toRet);
-//			}
-//		
-//		}
-//		
-//		return toRet;
-//	}
+	@Override
+	protected HearthTreeNode use_core(
+			PlayerSide side,
+			BaseEntity targetMinion,
+			HearthTreeNode boardState,
+			Deck deckPlayer0,
+			Deck deckPlayer1,
+			boolean singleRealizationOnly)
+		throws HSException
+	{
+		if (hasBeenUsed) {
+			//Card is already used, nothing to do
+			return null;
+		}
+		
+		if (side == PlayerSide.WAITING_PLAYER)
+			return null;
+		
+		HearthTreeNode toRet = this.summonMinion(side, targetMinion, boardState, deckPlayer0, deckPlayer1, false);
+		if (toRet != null) { //summon succeeded, now let's use up our mana
+			toRet.data_.getCurrentPlayer().subtractMana(this.mana_);
+			toRet.data_.removeCard_hand(this);
+
+			//Battlecry if available
+			for (BattlecryTargetType btt : this.getBattlecryTargets()) {
+				switch  (btt) {
+				case NO_TARGET:
+					toRet = this.useUntargetableBattlecry(targetMinion, toRet, deckPlayer0, deckPlayer1, singleRealizationOnly);
+					break;
+				case ENEMY_HERO:
+					toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, PlayerSide.WAITING_PLAYER.getPlayer(toRet).getHero(), toRet, deckPlayer0, deckPlayer1);
+					break;
+				case FRIENDLY_HERO:
+					toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getHero(), toRet, deckPlayer0, deckPlayer1);
+					break;
+				case ENEMY_MINIONS:
+					for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+						toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
+					}
+					break;
+				case FRIENDLY_MINIONS:
+					for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+						if (minion != this)
+							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
+					}
+					break;
+				case ENEMY_BEASTS:
+					for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+						if (minion instanceof Beast)
+							toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
+					}
+					break;
+				case FRIENDLY_BEASTS:
+					for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+						if (minion != this && minion instanceof Beast)
+							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
+					}
+					break;
+				case ENEMY_MURLOCS:
+					for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+						if (minion instanceof Murloc)
+							toRet = this.useTargetableBattlecry(PlayerSide.WAITING_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
+					}
+					break;
+				case FRIENDLY_MURLOCS:
+					for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+						if (minion != this && minion instanceof Murloc)
+							toRet = this.useTargetableBattlecry(PlayerSide.CURRENT_PLAYER, minion, toRet, deckPlayer0, deckPlayer1);
+					}
+					break;
+				default:
+					break;
+				}
+			}
+			
+			
+			//Notify all that a minion is placed
+			toRet = toRet.data_.getCurrentPlayerHero().minionPlacedEvent(toRet);
+			for (Iterator<BaseEntity> iter = toRet.data_.getCurrentPlayer().getMinions().iterator(); iter.hasNext();) {
+				BaseEntity minion = iter.next();
+				if (!minion.silenced_)
+					toRet = minion.minionPlacedEvent(toRet);
+			}
+			toRet = toRet.data_.getWaitingPlayerHero().minionPlacedEvent(toRet);
+			for (Iterator<BaseEntity> iter = toRet.data_.getWaitingPlayer().getMinions().iterator(); iter.hasNext();) {
+				BaseEntity minion = iter.next();
+				if (!minion.silenced_)
+					toRet = minion.minionPlacedEvent(toRet);
+			}
+		
+		}
+		
+		return toRet;
+	}
 	
 	
 	
@@ -869,9 +819,9 @@ public abstract class BaseEntity extends Card implements DeepCopyable
      *
      * @return The boardState is manipulated and returned
 	 */
-/*	public HearthTreeNode summonMinion(
+	public HearthTreeNode summonMinion(
             PlayerSide targetSide,
-            Minion targetMinion,
+            BaseEntity targetMinion,
             HearthTreeNode boardState,
             Deck deckPlayer0,
             Deck deckPlayer1,
@@ -886,24 +836,24 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 				//Notify all that a minion is summoned
 
 				toRet = toRet.data_.getCurrentPlayerHero().minionSummonedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+                for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
                     if (!minion.silenced_)
                         toRet = minion.minionSummonedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
                 }
 				toRet = toRet.data_.getWaitingPlayerHero().minionSummonedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+                for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
                     if (!minion.silenced_)
                         toRet = minion.minionSummonedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
                 }
 			} else {
 				//Notify all that a minion is transformed
 				toRet = toRet.data_.getCurrentPlayerHero().minionTransformedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+                for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
                     if (!minion.silenced_)
                         toRet = minion.minionTransformedEvent(PlayerSide.CURRENT_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
                 }
 				toRet = toRet.data_.getWaitingPlayerHero().minionTransformedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
-                for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+                for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
                     if (!minion.silenced_)
                         toRet = minion.minionTransformedEvent(PlayerSide.WAITING_PLAYER, targetSide, this, toRet, deckPlayer0, deckPlayer1);
                 }
@@ -911,7 +861,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 		}
 		
 		return toRet;
-	}*/
+	}
 	
 	/**
 	 * 
@@ -928,9 +878,9 @@ public abstract class BaseEntity extends Card implements DeepCopyable
      * @param deckPlayer1 The deck of player1
 	 * @throws HSException 
 	 */
-/*	protected HearthTreeNode summonMinion_core(
+	protected HearthTreeNode summonMinion_core(
             PlayerSide targetSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
             Deck deckPlayer0,
             Deck deckPlayer1
@@ -953,7 +903,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 			return null;
 		}
 
-	}*/
+	}
 	/**
 	 * 
 	 * Attack with the minion
@@ -968,7 +918,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	 */
 	public HearthTreeNode attack(
 			PlayerSide targetMinionPlayerSide,
-			Minion targetMinion,
+			BaseEntity targetMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -990,12 +940,12 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 		if (toRet != null) {
 			//Notify all that a minion is created
 			toRet = toRet.data_.getCurrentPlayerHero().minionAttackingEvent(toRet);
-            for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+            for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
                 if (!minion.isSilenced())
                     toRet = minion.minionAttackingEvent(toRet);
             }
 			toRet = toRet.data_.getWaitingPlayerHero().minionAttackingEvent(toRet);
-            for (Minion minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+            for (BaseEntity minion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
                 if (!minion.isSilenced())
                     toRet = minion.minionAttackingEvent(toRet);
             }
@@ -1100,7 +1050,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	public HearthTreeNode minionSummonedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide summonedMinionPlayerSide,
-			Minion summonedMinion,
+			BaseEntity summonedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -1121,7 +1071,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	public HearthTreeNode minionTransformedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide transformedMinionPlayerSide,
-			Minion transformedMinion,
+			BaseEntity transformedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -1158,7 +1108,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	public HearthTreeNode minionDamagedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide damagedPlayerSide,
-			Minion damagedMinion,
+			BaseEntity damagedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -1181,7 +1131,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	public HearthTreeNode minionDeadEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide deadMinionPlayerSide,
-			Minion deadMinion,
+			BaseEntity deadMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
@@ -1204,7 +1154,7 @@ public abstract class BaseEntity extends Card implements DeepCopyable
 	public HearthTreeNode minionHealedEvent(
 			PlayerSide thisMinionPlayerSide,
 			PlayerSide healedMinionPlayerSide,
-			Minion healedMinion,
+			BaseEntity healedMinion,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
 			Deck deckPlayer1)
diff --git a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleAction.java b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleAction.java
index 2a656f8..b2e258a 100644
--- a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleAction.java
+++ b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleAction.java
@@ -2,6 +2,7 @@ package com.hearthsim.event.deathrattle;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -21,7 +22,7 @@ public abstract class DeathrattleAction {
      * @param deckPlayer1    @return
      * @throws HSInvalidPlayerIndexException
 	 */
-	public HearthTreeNode performAction(Minion minion, PlayerSide playerSide, HearthTreeNode boardState, Deck deckPlayer0, Deck deckPlayer1) throws HSException {
+	public HearthTreeNode performAction(BaseEntity minion, PlayerSide playerSide, HearthTreeNode boardState, Deck deckPlayer0, Deck deckPlayer1) throws HSException {
 		return boardState;
 	}
 	
diff --git a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleCardDrawAction.java b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleCardDrawAction.java
index 1711812..fb1e30a 100644
--- a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleCardDrawAction.java
+++ b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleCardDrawAction.java
@@ -2,6 +2,7 @@ package com.hearthsim.event.deathrattle;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.CardDrawNode;
@@ -17,7 +18,7 @@ public class DeathrattleCardDrawAction extends DeathrattleAction {
 	
 	@Override
 	public HearthTreeNode performAction(
-			Minion minion,
+			BaseEntity minion,
 			PlayerSide playerSide,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
diff --git a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDamageAll.java b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDamageAll.java
index e3f7f52..5b892d0 100644
--- a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDamageAll.java
+++ b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDamageAll.java
@@ -2,6 +2,7 @@ package com.hearthsim.event.deathrattle;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -16,7 +17,7 @@ public class DeathrattleDamageAll extends DeathrattleAction {
 	
 	@Override
 	public HearthTreeNode performAction(
-			Minion minion,
+			BaseEntity minion,
 			PlayerSide playerSide,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
@@ -26,11 +27,11 @@ public class DeathrattleDamageAll extends DeathrattleAction {
 		HearthTreeNode toRet = super.performAction(minion, playerSide, boardState, deckPlayer0, deckPlayer1);
 		if (toRet != null) {
 			toRet = toRet.data_.getCurrentPlayerHero().takeDamage(damage_, playerSide, PlayerSide.CURRENT_PLAYER, boardState, deckPlayer0, deckPlayer1, false, false);
-			for(Minion aMinion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for(BaseEntity aMinion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = aMinion.takeDamage(damage_, playerSide, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1, false, false);
 			}
 			toRet = toRet.data_.getWaitingPlayerHero().takeDamage(damage_, playerSide, PlayerSide.WAITING_PLAYER, boardState, deckPlayer0, deckPlayer1, false, false);
-			for(Minion aMinion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for(BaseEntity aMinion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = aMinion.takeDamage(damage_, playerSide, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, false, false);
 			}
 		}
diff --git a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDamageAllMinions.java b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDamageAllMinions.java
index 04dda26..e211bcc 100644
--- a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDamageAllMinions.java
+++ b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDamageAllMinions.java
@@ -2,6 +2,7 @@ package com.hearthsim.event.deathrattle;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -16,7 +17,7 @@ public class DeathrattleDamageAllMinions extends DeathrattleAction {
 	
 	@Override
 	public HearthTreeNode performAction(
-			Minion minion,
+			BaseEntity minion,
 			PlayerSide playerSide,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
@@ -25,10 +26,10 @@ public class DeathrattleDamageAllMinions extends DeathrattleAction {
 	{
 		HearthTreeNode toRet = super.performAction(minion, playerSide, boardState, deckPlayer0, deckPlayer1);
 		if (toRet != null) {
-			for(Minion aMinion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
+			for(BaseEntity aMinion : PlayerSide.WAITING_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = aMinion.takeDamage(damage_, playerSide, PlayerSide.WAITING_PLAYER, toRet, deckPlayer0, deckPlayer1, false, false);
 			}
-			for(Minion aMinion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
+			for(BaseEntity aMinion : PlayerSide.CURRENT_PLAYER.getPlayer(toRet).getMinions()) {
 				toRet = aMinion.takeDamage(damage_, playerSide, PlayerSide.CURRENT_PLAYER, toRet, deckPlayer0, deckPlayer1, false, false);
 			}
 		}
diff --git a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDealDamageEnemyHeroAction.java b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDealDamageEnemyHeroAction.java
index 37e240d..99c4251 100644
--- a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDealDamageEnemyHeroAction.java
+++ b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleDealDamageEnemyHeroAction.java
@@ -2,6 +2,7 @@ package com.hearthsim.event.deathrattle;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -15,7 +16,7 @@ public class DeathrattleDealDamageEnemyHeroAction extends DeathrattleAction {
 	
 	@Override
 	public HearthTreeNode performAction(
-			Minion minion,
+			BaseEntity minion,
 			PlayerSide playerSide,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
diff --git a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleHealHeroAction.java b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleHealHeroAction.java
index f8b257d..0fd56bd 100644
--- a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleHealHeroAction.java
+++ b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleHealHeroAction.java
@@ -2,6 +2,7 @@ package com.hearthsim.event.deathrattle;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -18,7 +19,7 @@ public class DeathrattleHealHeroAction extends DeathrattleAction {
 	
 	@Override
 	public HearthTreeNode performAction(
-			Minion minion,
+			BaseEntity minion,
 			PlayerSide playerSide,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
diff --git a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleSummonMinionAction.java b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleSummonMinionAction.java
index 9bc64ea..cae2fab 100644
--- a/src/main/java/com/hearthsim/event/deathrattle/DeathrattleSummonMinionAction.java
+++ b/src/main/java/com/hearthsim/event/deathrattle/DeathrattleSummonMinionAction.java
@@ -2,6 +2,7 @@ package com.hearthsim.event.deathrattle;
 
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -18,7 +19,7 @@ public class DeathrattleSummonMinionAction extends DeathrattleAction {
 	
 	@Override
 	public HearthTreeNode performAction(
-			Minion minion,
+			BaseEntity minion,
 			PlayerSide playerSide,
 			HearthTreeNode boardState,
 			Deck deckPlayer0,
@@ -28,8 +29,8 @@ public class DeathrattleSummonMinionAction extends DeathrattleAction {
 		HearthTreeNode toRet = super.performAction(minion, playerSide, boardState, deckPlayer0, deckPlayer1);
 		for (int index = 0; index < numMinions_; ++index) {
             try {
-            	Minion newMinion = (Minion)minionClass_.newInstance();
-            	Minion placementTarget = toRet.data_.getCharacter(playerSide, toRet.data_.getMinions(playerSide).indexOf(minion)); //this minion can't be a hero
+            	Minion newMinion = (Minion) minionClass_.newInstance();
+            	BaseEntity placementTarget = toRet.data_.getCharacter(playerSide, toRet.data_.getMinions(playerSide).indexOf(minion)); //this minion can't be a hero
             	toRet.data_.removeMinion(minion);
 				toRet = newMinion.summonMinion(playerSide, placementTarget, toRet, deckPlayer0, deckPlayer1, false);
 			} catch (InstantiationException | IllegalAccessException e) {
diff --git a/src/main/java/com/hearthsim/model/BoardModel.java b/src/main/java/com/hearthsim/model/BoardModel.java
index 724a2cb..66ebee3 100644
--- a/src/main/java/com/hearthsim/model/BoardModel.java
+++ b/src/main/java/com/hearthsim/model/BoardModel.java
@@ -35,15 +35,15 @@ public class BoardModel implements DeepCopyable {
     IdentityLinkedList<MinionPlayerPair> allMinionsFIFOList_;
 
     public class MinionPlayerPair {
-        private Minion minion;
+        private BaseEntity minion;
         private PlayerModel playerModel ;
 
-        public MinionPlayerPair(Minion minion, PlayerModel playerModel) {
+        public MinionPlayerPair(BaseEntity minion, PlayerModel playerModel) {
             this.minion = minion;
             this.playerModel = playerModel;
         }
 
-        public Minion getMinion() {
+        public BaseEntity getMinion() {
             return minion;
         }
 
@@ -140,7 +140,7 @@ public class BoardModel implements DeepCopyable {
         }
     }
 
-    public Minion getMinion(PlayerSide side, int index) throws HSInvalidPlayerIndexException {
+    public BaseEntity getMinion(PlayerSide side, int index) throws HSInvalidPlayerIndexException {
         return modelForSide(side).getMinions().get(index);
     }
 
@@ -161,17 +161,17 @@ public class BoardModel implements DeepCopyable {
         return (BaseEntity) (index == 0 ? playerModel.getHero() : playerModel.getMinions().get(index - 1));
     }
 
-    public Minion getCurrentPlayerCharacter(int index) {
+    public BaseEntity getCurrentPlayerCharacter(int index) {
         return getMinionForCharacter(PlayerSide.CURRENT_PLAYER, index);
     }
 
-    public Minion getWaitingPlayerCharacter(int index) {
+    public BaseEntity getWaitingPlayerCharacter(int index) {
         return getMinionForCharacter(PlayerSide.WAITING_PLAYER, index);
     }
 
-    public Minion getMinionForCharacter(PlayerSide playerSide, int index) {
+    public BaseEntity getMinionForCharacter(PlayerSide playerSide, int index) {
         PlayerModel playerModel = modelForSide(playerSide);
-        return (Minion) (index == 0 ? playerModel.getHero() : playerModel.getMinions().get(index - 1));
+        return (index == 0 ? playerModel.getHero() : playerModel.getMinions().get(index - 1));
     }
 
     //-----------------------------------------------------------------------------------
@@ -190,13 +190,13 @@ public class BoardModel implements DeepCopyable {
      * @param position The position to place the minion.  The new minion goes to the "left" (lower index) of the postinion index.
      * @throws HSInvalidPlayerIndexException
      */
-/*    public void placeMinion(PlayerSide playerSide, Minion minion, int position) throws HSInvalidPlayerIndexException {
+/*    public void placeMinion(PlayerSide playerSide, BaseEntity minion, int position) throws HSInvalidPlayerIndexException {
         PlayerModel playerModel = modelForSide(playerSide);
         playerModel.getMinions().add(position, minion);
 
         this.allMinionsFIFOList_.add(new MinionPlayerPair(minion, playerModel));
         minion.isInHand(false);*/
-    public void placeMinion(PlayerSide playerSide, Minion minion, int position) throws HSInvalidPlayerIndexException {
+    public void placeMinion(PlayerSide playerSide, BaseEntity minion, int position) throws HSInvalidPlayerIndexException {
         PlayerModel playerModel = modelForSide(playerSide);
         playerModel.getMinions().add(position, minion);
 
@@ -216,7 +216,7 @@ public class BoardModel implements DeepCopyable {
      * @param minion The minion to be placed on the board.  The minion is placed on the right-most space.
      * @throws HSInvalidPlayerIndexException
      */
-    public void placeMinion(PlayerSide playerSide, Minion minion) throws HSInvalidPlayerIndexException {
+    public void placeMinion(PlayerSide playerSide, BaseEntity minion) throws HSInvalidPlayerIndexException {
         minion.isInHand(false);
         PlayerModel playerModel = modelForSide(playerSide);
         playerModel.getMinions().add(minion);
@@ -469,7 +469,7 @@ public class BoardModel implements DeepCopyable {
         return minionIdPair.getPlayerModel().getMinions().remove(minionIdPair.minion);
     }
 
-    public boolean removeMinion(Minion minion) throws HSException {
+    public boolean removeMinion(BaseEntity minion) throws HSException {
         MinionPlayerPair mP = null;
         for (MinionPlayerPair minionIdPair : this.allMinionsFIFOList_) {
             if (minionIdPair.minion == minion) {
@@ -508,20 +508,20 @@ public class BoardModel implements DeepCopyable {
     public ArrayList<Integer> getAttackableMinions() {
         ArrayList<Integer> toRet = new ArrayList<Integer>();
         boolean hasTaunt = false;
-        for (final Minion minion : waitingPlayer.getMinions()) {
+        for (final BaseEntity minion : waitingPlayer.getMinions()) {
             hasTaunt = hasTaunt || minion.getTaunt();
         }
         if (!hasTaunt) {
             toRet.add(0);
             int counter = 1;
-            for (Minion ignored : waitingPlayer.getMinions()) {
+            for (BaseEntity ignored : waitingPlayer.getMinions()) {
                 toRet.add(counter);
                 counter++;
             }
             return toRet;
         } else {
             int counter = 1;
-            for (Minion aP1_minions_ : waitingPlayer.getMinions()) {
+            for (BaseEntity aP1_minions_ : waitingPlayer.getMinions()) {
                 if (aP1_minions_.getTaunt())
                     toRet.add(counter);
                 counter++;
@@ -538,11 +538,11 @@ public class BoardModel implements DeepCopyable {
      * @return
      */
     public boolean hasDeadMinions() {
-        for (Minion minion : currentPlayer.getMinions()) {
+        for (BaseEntity minion : currentPlayer.getMinions()) {
             if (minion.getTotalHealth() <= 0)
                 return true;
         }
-        for (Minion minion : getWaitingPlayer().getMinions()) {
+        for (BaseEntity minion : getWaitingPlayer().getMinions()) {
             if (minion.getTotalHealth() <= 0) {
                 return true;
             }
@@ -610,11 +610,11 @@ public class BoardModel implements DeepCopyable {
         currentPlayer.getHero().hasBeenUsed(false);
         waitingPlayer.getHero().hasAttacked(false);
         waitingPlayer.getHero().hasBeenUsed(false);
-        for (Minion minion : currentPlayer.getMinions()) {
+        for (BaseEntity minion : currentPlayer.getMinions()) {
             minion.hasAttacked(false);
             minion.hasBeenUsed(false);
         }
-        for (Minion minion : waitingPlayer.getMinions()) {
+        for (BaseEntity minion : waitingPlayer.getMinions()) {
             minion.hasAttacked(false);
             minion.hasBeenUsed(false);
         }
@@ -641,7 +641,7 @@ public class BoardModel implements DeepCopyable {
         for (MinionPlayerPair minionPlayerPair : allMinionsFIFOList_) {
 
             PlayerModel oldPlayerModel = minionPlayerPair.getPlayerModel();
-            Minion oldMinion = minionPlayerPair.getMinion();
+            BaseEntity oldMinion = minionPlayerPair.getMinion();
             int indexOfOldMinion = oldPlayerModel.getMinions().indexOf(oldMinion);
 
             PlayerModel newPlayerModel;
@@ -673,7 +673,7 @@ public class BoardModel implements DeepCopyable {
         for (MinionPlayerPair minionPlayerPair : allMinionsFIFOList_) {
 
             PlayerModel oldPlayerModel = minionPlayerPair.getPlayerModel();
-            Minion oldMinion = minionPlayerPair.getMinion();
+            BaseEntity oldMinion = minionPlayerPair.getMinion();
             int indexOfOldMinion = oldPlayerModel.getMinions().indexOf(oldMinion);
 
             PlayerModel newPlayerModel;
@@ -700,12 +700,12 @@ public class BoardModel implements DeepCopyable {
         json.put("p1_deckPos", p1_deckPos_);
 
         JSONArray p0_minions = new JSONArray();
-        for (Minion minion : currentPlayer.getMinions())
+        for (BaseEntity minion : currentPlayer.getMinions())
             p0_minions.put(minion.toJSON());
         json.put("p0_minions", p0_minions);
 
         JSONArray p1_minions = new JSONArray();
-        for (Minion minion : waitingPlayer.getMinions())
+        for (BaseEntity minion : waitingPlayer.getMinions())
             p1_minions.put(minion.toJSON());
         json.put("p1_minions", p1_minions);
 
diff --git a/src/main/java/com/hearthsim/model/PlayerModel.java b/src/main/java/com/hearthsim/model/PlayerModel.java
index abbabf6..b6b905c 100644
--- a/src/main/java/com/hearthsim/model/PlayerModel.java
+++ b/src/main/java/com/hearthsim/model/PlayerModel.java
@@ -6,6 +6,7 @@ import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.util.DeepCopyable;
 import com.hearthsim.util.IdentityLinkedList;
 import com.hearthsim.util.MinionList;
@@ -153,8 +154,8 @@ public class PlayerModel implements DeepCopyable {
         copiedPlayerModel.setMaxMana(maxMana);
         copiedPlayerModel.setOverload(overload);
 
-        for (Minion minion : minions) {
-            copiedPlayerModel.getMinions().add((Minion) (minion).deepCopy());
+        for (BaseEntity minion : minions) {
+            copiedPlayerModel.getMinions().add((BaseEntity) (minion).deepCopy());
         }
 
         copiedPlayerModel.setSpellDamage(spellDamage);
diff --git a/src/main/java/com/hearthsim/player/playercontroller/ArtificialPlayer.java b/src/main/java/com/hearthsim/player/playercontroller/ArtificialPlayer.java
index 7655dab..8719cb5 100644
--- a/src/main/java/com/hearthsim/player/playercontroller/ArtificialPlayer.java
+++ b/src/main/java/com/hearthsim/player/playercontroller/ArtificialPlayer.java
@@ -3,6 +3,7 @@ package com.hearthsim.player.playercontroller;
 import com.hearthsim.card.Card;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.SpellDamage;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.exception.HSInvalidParamFileException;
 import com.hearthsim.exception.HSParamNotFoundException;
@@ -153,7 +154,7 @@ public class ArtificialPlayer {
 			//Charge modeling.  Charge's value primarily comes from the fact that it can be used immediately upon placing it.
 			//After the card is placed, it's really just like any other minion, except maybe for small value in bouncing it.
 			//So, the additional score for charge minions should really only apply when it is still in the hand.
-			Minion minion = (Minion)card;
+			BaseEntity minion = (BaseEntity) card;
 			theScore += card.getMana() * manaWeight + (minion.getCharge() ? myChargeWeight : 0.0);
 		} else
 			theScore += card.getMana() * manaWeight;
@@ -189,8 +190,8 @@ public class ArtificialPlayer {
 	 */
 	public double boardScore(BoardModel board) {
 
-		IdentityLinkedList<Minion> myBoardCards;
-		IdentityLinkedList<Minion> opBoardCards;
+		IdentityLinkedList<BaseEntity> myBoardCards;
+		IdentityLinkedList<BaseEntity> opBoardCards;
 		IdentityLinkedList<Card> myHandCards;
 		myBoardCards = board.getCurrentPlayer().getMinions();
 		opBoardCards = board.getWaitingPlayer().getMinions();
@@ -198,7 +199,7 @@ public class ArtificialPlayer {
 		
 		//my board score
 		double myScore = 0.0;
-		for (final Minion minion: myBoardCards) {
+		for (final BaseEntity minion: myBoardCards) {
 			myScore += minion.getAttack() * myAttackWeight;
 			myScore += minion.getTotalHealth() * myHealthWeight;
 			myScore += (minion.getTaunt() ? 1.0 : 0.0) * tauntWeight;
@@ -208,7 +209,7 @@ public class ArtificialPlayer {
 				
 		//opponent board score
 		double opScore = 0.0;
-		for (final Minion minion: opBoardCards) {
+		for (final BaseEntity minion: opBoardCards) {
 			opScore += minion.getAttack() * enemyAttackWeight;
 			opScore += minion.getTotalHealth() * enemyHealthWeight;
 			opScore += (minion.getTaunt() ? 1.0 : 0.0) * tauntWeight;
diff --git a/src/main/java/com/hearthsim/util/HearthAction.java b/src/main/java/com/hearthsim/util/HearthAction.java
index 72e51ae..51564d5 100644
--- a/src/main/java/com/hearthsim/util/HearthAction.java
+++ b/src/main/java/com/hearthsim/util/HearthAction.java
@@ -4,6 +4,7 @@ import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.PlayerSide;
 import com.hearthsim.util.tree.HearthTreeNode;
@@ -52,19 +53,19 @@ public class HearthAction {
 		switch(verb_) {
 			case USE_CARD: {
 				Card card = boardState.data_.getCard_hand(actionPerformerPlayerSide, cardOrCharacterIndex_);
-				Minion target = boardState.data_.getCharacter(targetPlayerSide, targetCharacterIndex_);
+				BaseEntity target = boardState.data_.getCharacter(targetPlayerSide, targetCharacterIndex_);
 				toRet = card.useOn(targetPlayerSide, target, toRet, deckPlayer0, deckPlayer1, true);
 			}
 			break;
 			case HERO_ABILITY: {
 				Hero hero = boardState.data_.getHero(actionPerformerPlayerSide);
-				Minion target = boardState.data_.getCharacter(targetPlayerSide, targetCharacterIndex_);
+				BaseEntity target = boardState.data_.getCharacter(targetPlayerSide, targetCharacterIndex_);
 				toRet = hero.useHeroAbility(targetPlayerSide, target, toRet, deckPlayer0, deckPlayer1, true);
 			}
 			break;
 			case ATTACK: {
-				Minion attacker = boardState.data_.getCharacter(actionPerformerPlayerSide, cardOrCharacterIndex_);
-				Minion target = boardState.data_.getCharacter(targetPlayerSide, targetCharacterIndex_);
+				BaseEntity attacker = boardState.data_.getCharacter(actionPerformerPlayerSide, cardOrCharacterIndex_);
+				BaseEntity target = boardState.data_.getCharacter(targetPlayerSide, targetCharacterIndex_);
 				toRet = attacker.attack(targetPlayerSide, target, toRet, deckPlayer0, deckPlayer1);
 			}
 			break;
diff --git a/src/main/java/com/hearthsim/util/MinionList.java b/src/main/java/com/hearthsim/util/MinionList.java
index 8ebe3d7..488528a 100644
--- a/src/main/java/com/hearthsim/util/MinionList.java
+++ b/src/main/java/com/hearthsim/util/MinionList.java
@@ -1,6 +1,7 @@
 package com.hearthsim.util;
 
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 
 /**
  * A list of minion
@@ -13,7 +14,7 @@ import com.hearthsim.card.minion.Minion;
  * minions, we must iterate over the temporal ordered list.
  *
  */
-public class MinionList extends IdentityLinkedList<Minion> {
+public class MinionList extends IdentityLinkedList<BaseEntity> {
 
 //	IdentityLinkedList<Minion> fifoList_;
 //	
@@ -23,25 +24,25 @@ public class MinionList extends IdentityLinkedList<Minion> {
 //	}
 //	
 //	@Override
-//	public void add(int index, Minion minion) {
+//	public void add(int index, BaseEntity minion) {
 //		super.add(index, minion);
 //		fifoList_.addLast(minion);
 //	}
 //
 //	@Override
-//	public boolean add(Minion minion) {
+//	public boolean add(BaseEntity minion) {
 //		fifoList_.addLast(minion);
 //		return super.add(minion);
 //	}
 //
 //	@Override
-//	public void addLast(Minion minion) {
+//	public void addLast(BaseEntity minion) {
 //		fifoList_.addLast(minion);
 //		super.addLast(minion);
 //	}
 //
 //	@Override
-//	public void addFirst(Minion minion) {
+//	public void addFirst(BaseEntity minion) {
 //		fifoList_.addLast(minion);
 //		super.addFirst(minion);
 //	}
diff --git a/src/main/java/com/hearthsim/util/factory/BoardStateFactoryBase.java b/src/main/java/com/hearthsim/util/factory/BoardStateFactoryBase.java
index e0eb997..5b3c592 100644
--- a/src/main/java/com/hearthsim/util/factory/BoardStateFactoryBase.java
+++ b/src/main/java/com/hearthsim/util/factory/BoardStateFactoryBase.java
@@ -3,6 +3,7 @@ package com.hearthsim.util.factory;
 import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -74,10 +75,10 @@ public class BoardStateFactoryBase {
 		if (!boardStateNode.data_.getCurrentPlayerHero().hasBeenUsed()) {
 			//Case0: Decided to use the hero ability -- Use it on everything!
 			for(int i = 0; i <= PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getNumMinions(); ++i) {
-				Minion targetMinion = boardStateNode.data_.getCurrentPlayerCharacter(i);
+				BaseEntity targetMinion = boardStateNode.data_.getCurrentPlayerCharacter(i);
 				if (boardStateNode.data_.getCurrentPlayerHero().canBeUsedOn(PlayerSide.CURRENT_PLAYER, targetMinion, boardStateNode.data_)) {
 					HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-					Minion copiedTargetMinion = newState.data_.getCurrentPlayerCharacter(i);
+					BaseEntity copiedTargetMinion = newState.data_.getCurrentPlayerCharacter(i);
 					newState = newState.data_.getCurrentPlayerHero().useHeroAbility(PlayerSide.CURRENT_PLAYER, copiedTargetMinion, newState, deckPlayer0_, deckPlayer1_, false);
 					if (newState != null) {
 						newState = this.doMoves(newState, ai);
@@ -87,10 +88,10 @@ public class BoardStateFactoryBase {
 				}
 			}
 			for(int i = 0; i <= PlayerSide.WAITING_PLAYER.getPlayer(boardStateNode).getNumMinions(); ++i) {
-				Minion targetMinion = boardStateNode.data_.getWaitingPlayerCharacter(i);
+				BaseEntity targetMinion = boardStateNode.data_.getWaitingPlayerCharacter(i);
 				if (boardStateNode.data_.getCurrentPlayerHero().canBeUsedOn(PlayerSide.WAITING_PLAYER, targetMinion, boardStateNode.data_)) {
 					HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-					Minion copiedTargetMinion = newState.data_.getWaitingPlayerCharacter(i);
+					BaseEntity copiedTargetMinion = newState.data_.getWaitingPlayerCharacter(i);
 					newState = newState.data_.getCurrentPlayerHero().useHeroAbility(PlayerSide.WAITING_PLAYER, copiedTargetMinion, newState, deckPlayer0_, deckPlayer1_, false);
 					if (newState != null) {
 						newState = this.doMoves(newState, ai);
@@ -116,13 +117,13 @@ public class BoardStateFactoryBase {
 		//Use the minions that we have out on the board
 		//the case where I choose to not use any more minions
 		boolean allAttacked = boardStateNode.data_.getCurrentPlayerHero().hasAttacked();
-		for ( final Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getMinions()) {
+		for ( final BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getMinions()) {
 			allAttacked = allAttacked && minion.hasAttacked();
 		}
 		
 		if (!allAttacked && PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getNumMinions() > 0) {
 			HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-			for (Minion minion : PlayerSide.CURRENT_PLAYER.getPlayer(newState).getMinions()) {
+			for (BaseEntity minion : PlayerSide.CURRENT_PLAYER.getPlayer(newState).getMinions()) {
 				minion.hasAttacked(true);
 			}
 			newState.data_.getCurrentPlayerHero().hasAttacked(true);
@@ -135,7 +136,7 @@ public class BoardStateFactoryBase {
 			for(final Integer integer : attackable) {
 				int i = integer.intValue();
 				HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-				Minion targetMinion = newState.data_.getWaitingPlayerCharacter(i);
+				BaseEntity targetMinion = newState.data_.getWaitingPlayerCharacter(i);
 				newState = newState.data_.getCurrentPlayerHero().attack(PlayerSide.WAITING_PLAYER, targetMinion, newState, deckPlayer0_, deckPlayer1_);
 				if (newState != null) {
 					newState = this.doMoves(newState, ai);
@@ -145,7 +146,7 @@ public class BoardStateFactoryBase {
 		}
 		//attack with minion
 		for (int ic = 0; ic < PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getNumMinions(); ++ic) {
-			final Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getMinions().get(ic);
+			final BaseEntity minion = PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getMinions().get(ic);
 			if (minion.hasAttacked()) {
 				continue;
 			}
@@ -153,8 +154,8 @@ public class BoardStateFactoryBase {
 			for(final Integer integer : attackable) {
 				int i = integer.intValue();
 				HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-				Minion targetMinion = newState.data_.getWaitingPlayerCharacter(i);
-				Minion tempMinion = PlayerSide.CURRENT_PLAYER.getPlayer(newState).getMinions().get(ic);
+				BaseEntity targetMinion = newState.data_.getWaitingPlayerCharacter(i);
+				BaseEntity tempMinion = PlayerSide.CURRENT_PLAYER.getPlayer(newState).getMinions().get(ic);
 				newState = tempMinion.attack(PlayerSide.WAITING_PLAYER, targetMinion, newState, deckPlayer0_, deckPlayer1_);
 				if (newState != null) {
 					newState = this.doMoves(newState, ai);
@@ -190,10 +191,10 @@ public class BoardStateFactoryBase {
 			if (boardStateNode.data_.getCurrentPlayerCardHand(ic).getMana() <= mana && !boardStateNode.data_.getCurrentPlayerCardHand(ic).hasBeenUsed()) {
 				//we can use this card!  Let's try using it on everything
 				for(int i = 0; i <= PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getNumMinions(); ++i) {
-					Minion targetMinion = boardStateNode.data_.getCurrentPlayerCharacter(i);
+					BaseEntity targetMinion = boardStateNode.data_.getCurrentPlayerCharacter(i);
 					if (boardStateNode.data_.getCurrentPlayerCardHand(ic).canBeUsedOn(PlayerSide.CURRENT_PLAYER, targetMinion, boardStateNode.data_)) {
 						HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-						Minion copiedTargetMinion = newState.data_.getCurrentPlayerCharacter(i);
+						BaseEntity copiedTargetMinion = newState.data_.getCurrentPlayerCharacter(i);
 						Card card = newState.data_.getCurrentPlayerCardHand(ic);
 						newState = card.useOn(PlayerSide.CURRENT_PLAYER, copiedTargetMinion, newState, deckPlayer0_, deckPlayer1_, false);
 						if (newState != null) {
@@ -203,10 +204,10 @@ public class BoardStateFactoryBase {
 					}
 				}
 				for(int i = 0; i <= PlayerSide.WAITING_PLAYER.getPlayer(boardStateNode).getNumMinions(); ++i) {
-					Minion targetMinion = boardStateNode.data_.getWaitingPlayerCharacter(i);
+					BaseEntity targetMinion = boardStateNode.data_.getWaitingPlayerCharacter(i);
 					if (boardStateNode.data_.getCurrentPlayerCardHand(ic).canBeUsedOn(PlayerSide.WAITING_PLAYER, targetMinion, boardStateNode.data_)) {
 						HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-						Minion copiedTargetMinion = newState.data_.getWaitingPlayerCharacter(i);
+						BaseEntity copiedTargetMinion = newState.data_.getWaitingPlayerCharacter(i);
 						Card card = newState.data_.getCurrentPlayerCardHand(ic);
 						newState = card.useOn(PlayerSide.WAITING_PLAYER, copiedTargetMinion, newState, deckPlayer0_, deckPlayer1_, false);
 						if (newState != null) {
diff --git a/src/main/java/com/hearthsim/util/factory/SparseBoardStateFactory.java b/src/main/java/com/hearthsim/util/factory/SparseBoardStateFactory.java
index ba3e625..403d281 100644
--- a/src/main/java/com/hearthsim/util/factory/SparseBoardStateFactory.java
+++ b/src/main/java/com/hearthsim/util/factory/SparseBoardStateFactory.java
@@ -3,6 +3,7 @@ package com.hearthsim.util.factory;
 import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -72,7 +73,7 @@ public class SparseBoardStateFactory extends BoardStateFactoryBase {
 						byte secondMaxAttack = -100;
 						int secondMaxAttackIndex = 0;
 						for(int midx = 0; midx < numMinions; ++midx) {
-							Minion tempMinion = PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getMinions().get(midx);
+							Minion tempMinion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getMinions().get(midx);
 							if (tempMinion.getTotalAttack() >= maxAttack) {
 								secondMaxAttackIndex = maxAttackIndex;
 								secondMaxAttack = maxAttack;
@@ -101,10 +102,10 @@ public class SparseBoardStateFactory extends BoardStateFactoryBase {
 							log.info("blah");
 					}
 					//actually place the card now
-					Minion targetMinion = boardStateNode.data_.getCurrentPlayerCharacter(cardPlacementIndex);
+					BaseEntity targetMinion = boardStateNode.data_.getCurrentPlayerCharacter(cardPlacementIndex);
 					if (cardToUse.canBeUsedOn(PlayerSide.CURRENT_PLAYER, targetMinion, boardStateNode.data_)) {
 						HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-						Minion copiedTargetMinion = newState.data_.getCurrentPlayerCharacter(cardPlacementIndex);
+						BaseEntity copiedTargetMinion = newState.data_.getCurrentPlayerCharacter(cardPlacementIndex);
 						Card card = newState.data_.getCurrentPlayerCardHand(ic);
 						newState = card.useOn(PlayerSide.CURRENT_PLAYER, copiedTargetMinion, newState, deckPlayer0_, deckPlayer1_, false);
 						if (newState != null) {
@@ -115,10 +116,10 @@ public class SparseBoardStateFactory extends BoardStateFactoryBase {
 				} else {
 					//not a minion card, do the default thorough branching
 					for(int i = 0; i <= PlayerSide.CURRENT_PLAYER.getPlayer(boardStateNode).getNumMinions(); ++i) {
-						Minion targetMinion = boardStateNode.data_.getCurrentPlayerCharacter(i);
+						BaseEntity targetMinion = boardStateNode.data_.getCurrentPlayerCharacter(i);
 						if (cardToUse.canBeUsedOn(PlayerSide.CURRENT_PLAYER, targetMinion,boardStateNode.data_)) {
 							HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-							Minion copiedTargetMinion = newState.data_.getCurrentPlayerCharacter(i);
+							BaseEntity copiedTargetMinion = newState.data_.getCurrentPlayerCharacter(i);
 							Card card = newState.data_.getCurrentPlayerCardHand(ic);
 							newState = card.useOn(PlayerSide.CURRENT_PLAYER, copiedTargetMinion, newState, deckPlayer0_, deckPlayer1_, false);
 							if (newState != null) {
@@ -128,10 +129,10 @@ public class SparseBoardStateFactory extends BoardStateFactoryBase {
 						}
 					}
 					for(int i = 0; i <= PlayerSide.WAITING_PLAYER.getPlayer(boardStateNode).getNumMinions(); ++i) {
-						Minion targetMinion = boardStateNode.data_.getWaitingPlayerCharacter(i);
+						BaseEntity targetMinion = boardStateNode.data_.getWaitingPlayerCharacter(i);
 						if (cardToUse.canBeUsedOn(PlayerSide.WAITING_PLAYER, targetMinion, boardStateNode.data_)) {
 							HearthTreeNode newState = new HearthTreeNode((BoardModel)boardStateNode.data_.deepCopy());
-							Minion copiedTargetMinion = newState.data_.getWaitingPlayerCharacter(i);
+							BaseEntity copiedTargetMinion = newState.data_.getWaitingPlayerCharacter(i);
 							Card card = newState.data_.getCurrentPlayerCardHand(ic);
 							newState = card.useOn(PlayerSide.WAITING_PLAYER, copiedTargetMinion, newState, deckPlayer0_, deckPlayer1_, false);
 							if (newState != null) {
diff --git a/src/test/groovy/com/hearthsim/test/groovy/card/CardSpec.groovy b/src/test/groovy/com/hearthsim/test/groovy/card/CardSpec.groovy
index 3ddde59..5831223 100644
--- a/src/test/groovy/com/hearthsim/test/groovy/card/CardSpec.groovy
+++ b/src/test/groovy/com/hearthsim/test/groovy/card/CardSpec.groovy
@@ -2,6 +2,7 @@ package com.hearthsim.test.groovy.card
 
 import com.hearthsim.card.minion.Hero
 import com.hearthsim.card.minion.Minion
+import com.hearthsim.entity.BaseEntity
 import com.hearthsim.model.BoardModel
 import com.hearthsim.model.PlayerModel
 import com.hearthsim.test.helpers.BoardModelBuilder
@@ -46,8 +47,8 @@ class CardSpec extends Specification{
 	void assertMinionsEqual(MinionList oldMinions, MinionList newMinions) {
 		Assert.assertEquals(oldMinions.size(), newMinions.size())
 		for (int indx = 0; indx < oldMinions.size(); ++indx) {
-			Minion oldMinion = oldMinions.get(indx)
-			Minion newMinion = newMinions.get(indx)
+			BaseEntity oldMinion = oldMinions.get(indx)
+			BaseEntity newMinion = newMinions.get(indx)
 			Assert.assertEquals(oldMinion.attack, newMinion.attack)
 			Assert.assertEquals(oldMinion.baseAttack_, newMinion.baseAttack_)
 			Assert.assertEquals(oldMinion.auraAttack, newMinion.auraAttack)
diff --git a/src/test/java/com/hearthsim/test/TestDeepClone.java b/src/test/java/com/hearthsim/test/TestDeepClone.java
index 9eac371..0202826 100644
--- a/src/test/java/com/hearthsim/test/TestDeepClone.java
+++ b/src/test/java/com/hearthsim/test/TestDeepClone.java
@@ -2,6 +2,8 @@ package com.hearthsim.test;
 
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.AcidicSwampOoze;
+import com.hearthsim.entity.BaseEntity;
+
 import org.junit.Test;
 
 import static org.junit.Assert.assertFalse;
@@ -14,8 +16,8 @@ public class TestDeepClone {
 	public void test_AcidicSwampOoze() {
 		
 
-		Minion card1 = new AcidicSwampOoze();
-		Minion card1_cloned = (Minion)card1.deepCopy();
+		BaseEntity card1 = new AcidicSwampOoze();
+		BaseEntity card1_cloned = (BaseEntity) card1.deepCopy();
 		
 		assertTrue(card1.equals(card1_cloned));
 		assertTrue(card1_cloned.equals(card1));
@@ -24,7 +26,7 @@ public class TestDeepClone {
 		assertFalse(card1.equals(card1_cloned));
 		assertFalse(card1_cloned.equals(card1));
 
-		card1_cloned = (Minion)card1.deepCopy();
+		card1_cloned = (BaseEntity) card1.deepCopy();
 		assertTrue(card1.equals(card1_cloned));
 		assertTrue(card1_cloned.equals(card1));
 
@@ -32,21 +34,21 @@ public class TestDeepClone {
 		assertFalse(card1.equals(card1_cloned));
 		assertFalse(card1_cloned.equals(card1));
 
-		card1_cloned = (Minion)card1.deepCopy();
+		card1_cloned = (BaseEntity)card1.deepCopy();
 		assertTrue(card1.equals(card1_cloned));
 		assertTrue(card1_cloned.equals(card1));
 		
 		card1.setDestroyOnTurnEnd(true);
 		assertFalse(card1.equals(card1_cloned));
 		assertFalse(card1_cloned.equals(card1));
-		card1_cloned = (Minion)card1.deepCopy();
+		card1_cloned = (BaseEntity)card1.deepCopy();
 		assertTrue(card1.equals(card1_cloned));
 		assertTrue(card1_cloned.equals(card1));
 
 		card1.setDestroyOnTurnStart(true);
 		assertFalse(card1.equals(card1_cloned));
 		assertFalse(card1_cloned.equals(card1));
-		card1_cloned = (Minion)card1.deepCopy();
+		card1_cloned = (BaseEntity)card1.deepCopy();
 		assertTrue(card1.equals(card1_cloned));
 		assertTrue(card1_cloned.equals(card1));
 
diff --git a/src/test/java/com/hearthsim/test/card/TestAncestralHealing.java b/src/test/java/com/hearthsim/test/card/TestAncestralHealing.java
index c29665a..a0b942d 100644
--- a/src/test/java/com/hearthsim/test/card/TestAncestralHealing.java
+++ b/src/test/java/com/hearthsim/test/card/TestAncestralHealing.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.AncestralHealing;
 import com.hearthsim.exception.HSException;
@@ -43,7 +43,7 @@ public class TestAncestralHealing {
 		HearthTreeNode res;
 		
 		try {
-			Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+			BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 			res = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 			assertTrue(res == null);
 		} catch (HSInvalidPlayerIndexException e) {
@@ -52,7 +52,7 @@ public class TestAncestralHealing {
 		}
 		
 		try {
-			Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+			BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 			res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 			assertTrue(res == null);
 		} catch (HSInvalidPlayerIndexException e) {
@@ -69,7 +69,7 @@ public class TestAncestralHealing {
 		HearthTreeNode res;
 		
 		try {
-			Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+			BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 			res = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 			assertFalse(res == null);
 			assertTrue(res.data_.getCurrentPlayer().getMana() == 2);
@@ -91,7 +91,7 @@ public class TestAncestralHealing {
 		HearthTreeNode res;
 		
 		try {
-			Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+			BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 			res = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 			assertFalse(res == null);
 			assertTrue(res.data_.getCurrentPlayer().getMana() == 2);
@@ -113,7 +113,7 @@ public class TestAncestralHealing {
 		HearthTreeNode res;
 		
 		try {
-			Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+			BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 			res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 			assertFalse(res == null);
 			assertTrue(res.data_.getCurrentPlayer().getMana() == 2);
@@ -135,7 +135,7 @@ public class TestAncestralHealing {
 		HearthTreeNode res;
 		
 		try {
-			Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+			BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 			res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 			assertFalse(res == null);
 			assertTrue(res.data_.getCurrentPlayer().getMana() == 2);
diff --git a/src/test/java/com/hearthsim/test/card/TestAnimalCompanion.java b/src/test/java/com/hearthsim/test/card/TestAnimalCompanion.java
index 5908fdd..4ff4a69 100644
--- a/src/test/java/com/hearthsim/test/card/TestAnimalCompanion.java
+++ b/src/test/java/com/hearthsim/test/card/TestAnimalCompanion.java
@@ -8,6 +8,7 @@ import com.hearthsim.card.minion.concrete.Leokk;
 import com.hearthsim.card.minion.concrete.Misha;
 import com.hearthsim.card.spellcard.concrete.AnimalCompanion;
 import com.hearthsim.card.spellcard.concrete.TheCoin;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -70,7 +71,7 @@ public class TestAnimalCompanion {
 		board.data_.placeCardHandCurrentPlayer(leokk);
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(1);
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertTrue(ret == null);
@@ -92,7 +93,7 @@ public class TestAnimalCompanion {
 		board.data_.placeCardHandCurrentPlayer(leokk);
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(1);
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
 		//Use Leokk.  The other minions should now be buffed with +1 attack
@@ -116,9 +117,9 @@ public class TestAnimalCompanion {
 
 		
 		//Now, attack and kill Leokk.  All minions should go back to their original attack
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		minion.hasAttacked(false);
-		Minion target2 = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target2 = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		ret = minion.attack(PlayerSide.WAITING_PLAYER, target2, board, deck, null);
 		
 		assertFalse(ret == null);
@@ -143,7 +144,7 @@ public class TestAnimalCompanion {
 	public void test0() throws HSException {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertTrue(ret == null);
@@ -162,7 +163,7 @@ public class TestAnimalCompanion {
 	public void test1() throws HSException {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/card/TestArcaneExplosion.java b/src/test/java/com/hearthsim/test/card/TestArcaneExplosion.java
index 116305b..08d0309 100644
--- a/src/test/java/com/hearthsim/test/card/TestArcaneExplosion.java
+++ b/src/test/java/com/hearthsim/test/card/TestArcaneExplosion.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.ArcaneExplosion;
 import com.hearthsim.exception.HSException;
@@ -44,7 +44,7 @@ public class TestArcaneExplosion {
 
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		res = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
diff --git a/src/test/java/com/hearthsim/test/card/TestArcaneIntellect.java b/src/test/java/com/hearthsim/test/card/TestArcaneIntellect.java
index 7b9a5fb..57294af 100644
--- a/src/test/java/com/hearthsim/test/card/TestArcaneIntellect.java
+++ b/src/test/java/com/hearthsim/test/card/TestArcaneIntellect.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -71,7 +71,7 @@ public class TestArcaneIntellect {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -128,7 +128,7 @@ public class TestArcaneIntellect {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
diff --git a/src/test/java/com/hearthsim/test/card/TestAssassinate.java b/src/test/java/com/hearthsim/test/card/TestAssassinate.java
index be674b1..01fd7be 100644
--- a/src/test/java/com/hearthsim/test/card/TestAssassinate.java
+++ b/src/test/java/com/hearthsim/test/card/TestAssassinate.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Assassinate;
@@ -54,7 +54,7 @@ public class TestAssassinate {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -98,7 +98,7 @@ public class TestAssassinate {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -143,7 +143,7 @@ public class TestAssassinate {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
diff --git a/src/test/java/com/hearthsim/test/card/TestBackstab.java b/src/test/java/com/hearthsim/test/card/TestBackstab.java
index d550abd..9c5f58d 100644
--- a/src/test/java/com/hearthsim/test/card/TestBackstab.java
+++ b/src/test/java/com/hearthsim/test/card/TestBackstab.java
@@ -4,6 +4,7 @@ import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Backstab;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -48,7 +49,7 @@ public class TestBackstab {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -86,7 +87,7 @@ public class TestBackstab {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -116,7 +117,7 @@ public class TestBackstab {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -144,7 +145,7 @@ public class TestBackstab {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
diff --git a/src/test/java/com/hearthsim/test/card/TestBite.java b/src/test/java/com/hearthsim/test/card/TestBite.java
index 90cc168..6781985 100644
--- a/src/test/java/com/hearthsim/test/card/TestBite.java
+++ b/src/test/java/com/hearthsim/test/card/TestBite.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -78,7 +78,7 @@ public class TestBite {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -105,7 +105,7 @@ public class TestBite {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestBlessedChampion.java b/src/test/java/com/hearthsim/test/card/TestBlessedChampion.java
index c445f39..636414c 100644
--- a/src/test/java/com/hearthsim/test/card/TestBlessedChampion.java
+++ b/src/test/java/com/hearthsim/test/card/TestBlessedChampion.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -62,7 +62,7 @@ public class TestBlessedChampion {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -91,7 +91,7 @@ public class TestBlessedChampion {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -120,7 +120,7 @@ public class TestBlessedChampion {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestBlessingOfMight.java b/src/test/java/com/hearthsim/test/card/TestBlessingOfMight.java
index 4bded21..893fb2a 100644
--- a/src/test/java/com/hearthsim/test/card/TestBlessingOfMight.java
+++ b/src/test/java/com/hearthsim/test/card/TestBlessingOfMight.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.BlessingOfMight;
@@ -48,7 +48,7 @@ public class TestBlessingOfMight {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -85,7 +85,7 @@ public class TestBlessingOfMight {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -113,7 +113,7 @@ public class TestBlessingOfMight {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
diff --git a/src/test/java/com/hearthsim/test/card/TestBloodlust.java b/src/test/java/com/hearthsim/test/card/TestBloodlust.java
index 74aff7d..735da23 100644
--- a/src/test/java/com/hearthsim/test/card/TestBloodlust.java
+++ b/src/test/java/com/hearthsim/test/card/TestBloodlust.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Bloodlust;
@@ -59,7 +59,7 @@ public class TestBloodlust {
 	@Test
 	public void test0() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -79,7 +79,7 @@ public class TestBloodlust {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -100,7 +100,7 @@ public class TestBloodlust {
 		assertEquals(PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(0).getTotalAttack(), attack0);
 		assertEquals(PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).getTotalAttack(), attack0);
 		
-		Minion theMinion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		Minion theMinion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		ret = theMinion.attack(PlayerSide.WAITING_PLAYER, target, ret, deck, null);
 		assertEquals(board.data_.getCurrentPlayerHero().getHealth(), 30);
@@ -110,7 +110,7 @@ public class TestBloodlust {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -131,7 +131,7 @@ public class TestBloodlust {
 		assertEquals(PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(0).getTotalAttack(), attack0);
 		assertEquals(PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).getTotalAttack(), attack0);
 		
-		Minion theMinion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		Minion theMinion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		ret = theMinion.attack(PlayerSide.WAITING_PLAYER, target, ret, deck, null);
 		assertEquals(board.data_.getCurrentPlayerHero().getHealth(), 30);
diff --git a/src/test/java/com/hearthsim/test/card/TestCharge.java b/src/test/java/com/hearthsim/test/card/TestCharge.java
index d0c11b6..8801d18 100644
--- a/src/test/java/com/hearthsim/test/card/TestCharge.java
+++ b/src/test/java/com/hearthsim/test/card/TestCharge.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Charge;
@@ -52,7 +52,7 @@ public class TestCharge {
 		Charge fb = new Charge();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertTrue(ret == null);
@@ -78,7 +78,7 @@ public class TestCharge {
 		Charge fb = new Charge();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/card/TestClaw.java b/src/test/java/com/hearthsim/test/card/TestClaw.java
index 9792af0..2c884c0 100644
--- a/src/test/java/com/hearthsim/test/card/TestClaw.java
+++ b/src/test/java/com/hearthsim/test/card/TestClaw.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Claw;
@@ -54,7 +54,7 @@ public class TestClaw {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -74,7 +74,7 @@ public class TestClaw {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -93,7 +93,7 @@ public class TestClaw {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestConsecration.java b/src/test/java/com/hearthsim/test/card/TestConsecration.java
index 35f4b3f..ade711c 100644
--- a/src/test/java/com/hearthsim/test/card/TestConsecration.java
+++ b/src/test/java/com/hearthsim/test/card/TestConsecration.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Consecration;
@@ -55,7 +55,7 @@ public class TestConsecration {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -74,7 +74,7 @@ public class TestConsecration {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestCorruption.java b/src/test/java/com/hearthsim/test/card/TestCorruption.java
index 6c8f72b..d8b6892 100644
--- a/src/test/java/com/hearthsim/test/card/TestCorruption.java
+++ b/src/test/java/com/hearthsim/test/card/TestCorruption.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Corruption;
@@ -61,7 +61,7 @@ public class TestCorruption {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -80,7 +80,7 @@ public class TestCorruption {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestDeadlyPoison.java b/src/test/java/com/hearthsim/test/card/TestDeadlyPoison.java
index b335c56..38aead4 100644
--- a/src/test/java/com/hearthsim/test/card/TestDeadlyPoison.java
+++ b/src/test/java/com/hearthsim/test/card/TestDeadlyPoison.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.DeadlyPoison;
@@ -57,7 +57,7 @@ public class TestDeadlyPoison {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -76,7 +76,7 @@ public class TestDeadlyPoison {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -95,7 +95,7 @@ public class TestDeadlyPoison {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -117,7 +117,7 @@ public class TestDeadlyPoison {
 		FieryWarAxe fb = new FieryWarAxe();
 		board.data_.placeCardHandCurrentPlayer(fb);
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(1);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestDemonfire.java b/src/test/java/com/hearthsim/test/card/TestDemonfire.java
index b759972..1b2b89d 100644
--- a/src/test/java/com/hearthsim/test/card/TestDemonfire.java
+++ b/src/test/java/com/hearthsim/test/card/TestDemonfire.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -62,7 +62,7 @@ public class TestDemonfire {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -91,7 +91,7 @@ public class TestDemonfire {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -118,7 +118,7 @@ public class TestDemonfire {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -147,7 +147,7 @@ public class TestDemonfire {
 	public void test3() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestDivineSpirit.java b/src/test/java/com/hearthsim/test/card/TestDivineSpirit.java
index c605262..eef75ab 100644
--- a/src/test/java/com/hearthsim/test/card/TestDivineSpirit.java
+++ b/src/test/java/com/hearthsim/test/card/TestDivineSpirit.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.DivineSpirit;
@@ -78,7 +78,7 @@ public class TestDivineSpirit {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -97,7 +97,7 @@ public class TestDivineSpirit {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -116,7 +116,7 @@ public class TestDivineSpirit {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -144,7 +144,7 @@ public class TestDivineSpirit {
 	@Test
 	public void test3() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestDrainLife.java b/src/test/java/com/hearthsim/test/card/TestDrainLife.java
index 6f56aaf..7e3fa86 100644
--- a/src/test/java/com/hearthsim/test/card/TestDrainLife.java
+++ b/src/test/java/com/hearthsim/test/card/TestDrainLife.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.DrainLife;
@@ -53,7 +53,7 @@ public class TestDrainLife {
 		DrainLife fb = new DrainLife();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertTrue(ret == null);
@@ -79,7 +79,7 @@ public class TestDrainLife {
 		DrainLife fb = new DrainLife();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -107,7 +107,7 @@ public class TestDrainLife {
 		
 		board.data_.getCurrentPlayerHero().setHealth((byte)15);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/card/TestEquality.java b/src/test/java/com/hearthsim/test/card/TestEquality.java
index bf90dd4..9c12f8d 100644
--- a/src/test/java/com/hearthsim/test/card/TestEquality.java
+++ b/src/test/java/com/hearthsim/test/card/TestEquality.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -62,7 +62,7 @@ public class TestEquality {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -91,7 +91,7 @@ public class TestEquality {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestExecute.java b/src/test/java/com/hearthsim/test/card/TestExecute.java
index 5076bed..a82bb6f 100644
--- a/src/test/java/com/hearthsim/test/card/TestExecute.java
+++ b/src/test/java/com/hearthsim/test/card/TestExecute.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Execute;
@@ -53,7 +53,7 @@ public class TestExecute {
 		Execute fb = new Execute();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertTrue(ret == null);
@@ -79,7 +79,7 @@ public class TestExecute {
 		Execute fb = new Execute();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		assertTrue(ret == null);
@@ -105,7 +105,7 @@ public class TestExecute {
 		Execute fb = new Execute();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/card/TestFanOfKnives.java b/src/test/java/com/hearthsim/test/card/TestFanOfKnives.java
index 3b51df6..5291db4 100644
--- a/src/test/java/com/hearthsim/test/card/TestFanOfKnives.java
+++ b/src/test/java/com/hearthsim/test/card/TestFanOfKnives.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.FanOfKnives;
@@ -60,7 +60,7 @@ public class TestFanOfKnives {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -79,7 +79,7 @@ public class TestFanOfKnives {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -98,7 +98,7 @@ public class TestFanOfKnives {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestFireball.java b/src/test/java/com/hearthsim/test/card/TestFireball.java
index 57a8825..12b7962 100644
--- a/src/test/java/com/hearthsim/test/card/TestFireball.java
+++ b/src/test/java/com/hearthsim/test/card/TestFireball.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Fireball;
 import com.hearthsim.exception.HSException;
@@ -42,7 +42,7 @@ public class TestFireball {
 		Fireball fb = new Fireball();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		
@@ -62,7 +62,7 @@ public class TestFireball {
 		Fireball fb = new Fireball();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
@@ -82,7 +82,7 @@ public class TestFireball {
 		Fireball fb = new Fireball();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		
@@ -101,7 +101,7 @@ public class TestFireball {
 		Fireball fb = new Fireball();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		
@@ -121,7 +121,7 @@ public class TestFireball {
 		Fireball fb = new Fireball();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
@@ -140,7 +140,7 @@ public class TestFireball {
 		Fireball fb = new Fireball();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestFrostShock.java b/src/test/java/com/hearthsim/test/card/TestFrostShock.java
index f204806..7bfbc50 100644
--- a/src/test/java/com/hearthsim/test/card/TestFrostShock.java
+++ b/src/test/java/com/hearthsim/test/card/TestFrostShock.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.FrostShock;
@@ -52,7 +52,7 @@ public class TestFrostShock {
 		FrostShock fb = new FrostShock();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertTrue(ret == null);
@@ -80,7 +80,7 @@ public class TestFrostShock {
 		FrostShock fb = new FrostShock();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/card/TestHammerOfWrath.java b/src/test/java/com/hearthsim/test/card/TestHammerOfWrath.java
index d99bb86..185cb4c 100644
--- a/src/test/java/com/hearthsim/test/card/TestHammerOfWrath.java
+++ b/src/test/java/com/hearthsim/test/card/TestHammerOfWrath.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.HammerOfWrath;
@@ -52,7 +52,7 @@ public class TestHammerOfWrath {
 		HammerOfWrath fb = new HammerOfWrath();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -82,7 +82,7 @@ public class TestHammerOfWrath {
 		HammerOfWrath fb = new HammerOfWrath();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/card/TestHealingTouch.java b/src/test/java/com/hearthsim/test/card/TestHealingTouch.java
index f3200fd..2df0b9c 100644
--- a/src/test/java/com/hearthsim/test/card/TestHealingTouch.java
+++ b/src/test/java/com/hearthsim/test/card/TestHealingTouch.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.NorthshireCleric;
@@ -54,7 +54,7 @@ public class TestHealingTouch {
 		HealingTouch fb = new HealingTouch();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -74,7 +74,7 @@ public class TestHealingTouch {
 		HealingTouch fb = new HealingTouch();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -96,7 +96,7 @@ public class TestHealingTouch {
 		HealingTouch fb = new HealingTouch();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/card/TestHellfire.java b/src/test/java/com/hearthsim/test/card/TestHellfire.java
index 9c066b7..6862c94 100644
--- a/src/test/java/com/hearthsim/test/card/TestHellfire.java
+++ b/src/test/java/com/hearthsim/test/card/TestHellfire.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Hellfire;
@@ -55,7 +55,7 @@ public class TestHellfire {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -74,7 +74,7 @@ public class TestHellfire {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestHex.java b/src/test/java/com/hearthsim/test/card/TestHex.java
index 1e0c683..baf9a6d 100644
--- a/src/test/java/com/hearthsim/test/card/TestHex.java
+++ b/src/test/java/com/hearthsim/test/card/TestHex.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -79,7 +79,7 @@ public class TestHex {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -105,7 +105,7 @@ public class TestHex {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -131,7 +131,7 @@ public class TestHex {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -159,7 +159,7 @@ public class TestHex {
 	@Test
 	public void test3() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestHolyNova.java b/src/test/java/com/hearthsim/test/card/TestHolyNova.java
index f20b057..f4e8570 100644
--- a/src/test/java/com/hearthsim/test/card/TestHolyNova.java
+++ b/src/test/java/com/hearthsim/test/card/TestHolyNova.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.HolyNova;
@@ -60,7 +60,7 @@ public class TestHolyNova {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -79,7 +79,7 @@ public class TestHolyNova {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -98,7 +98,7 @@ public class TestHolyNova {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		board.data_.getCurrentPlayerHero().setHealth((byte)23);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -128,7 +128,7 @@ public class TestHolyNova {
 		board.data_.getCurrentPlayerHero().setHealth((byte)23);
 		PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(0).setHealth((byte)(PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(0).getHealth() - 1));
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestHolySmite.java b/src/test/java/com/hearthsim/test/card/TestHolySmite.java
index 9236757..5de6a09 100644
--- a/src/test/java/com/hearthsim/test/card/TestHolySmite.java
+++ b/src/test/java/com/hearthsim/test/card/TestHolySmite.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.HolySmite;
 import com.hearthsim.exception.HSException;
@@ -42,7 +42,7 @@ public class TestHolySmite {
 		HolySmite hs = new HolySmite();
 		board.data_.placeCardHandCurrentPlayer(hs);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		
@@ -62,7 +62,7 @@ public class TestHolySmite {
 		HolySmite hs = new HolySmite();
 		board.data_.placeCardHandCurrentPlayer(hs);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
@@ -82,7 +82,7 @@ public class TestHolySmite {
 		HolySmite hs = new HolySmite();
 		board.data_.placeCardHandCurrentPlayer(hs);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		
@@ -101,7 +101,7 @@ public class TestHolySmite {
 		HolySmite hs = new HolySmite();
 		board.data_.placeCardHandCurrentPlayer(hs);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		
@@ -121,7 +121,7 @@ public class TestHolySmite {
 		HolySmite hs = new HolySmite();
 		board.data_.placeCardHandCurrentPlayer(hs);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
@@ -140,7 +140,7 @@ public class TestHolySmite {
 		HolySmite hs = new HolySmite();
 		board.data_.placeCardHandCurrentPlayer(hs);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestHumility.java b/src/test/java/com/hearthsim/test/card/TestHumility.java
index dba13a8..67c1421 100644
--- a/src/test/java/com/hearthsim/test/card/TestHumility.java
+++ b/src/test/java/com/hearthsim/test/card/TestHumility.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Humility;
@@ -59,7 +59,7 @@ public class TestHumility {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -78,7 +78,7 @@ public class TestHumility {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -97,7 +97,7 @@ public class TestHumility {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		board.data_.getCurrentPlayerHero().setHealth((byte)23);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
diff --git a/src/test/java/com/hearthsim/test/card/TestHuntersMark.java b/src/test/java/com/hearthsim/test/card/TestHuntersMark.java
index 01bacca..a24b32d 100644
--- a/src/test/java/com/hearthsim/test/card/TestHuntersMark.java
+++ b/src/test/java/com/hearthsim/test/card/TestHuntersMark.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.HuntersMark;
@@ -60,7 +60,7 @@ public class TestHuntersMark {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -79,7 +79,7 @@ public class TestHuntersMark {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -98,7 +98,7 @@ public class TestHuntersMark {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		board.data_.getCurrentPlayerHero().setHealth((byte)23);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
@@ -125,7 +125,7 @@ public class TestHuntersMark {
 	@Test
 	public void test3() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		board.data_.getCurrentPlayerHero().setHealth((byte)23);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
diff --git a/src/test/java/com/hearthsim/test/card/TestInnerFire.java b/src/test/java/com/hearthsim/test/card/TestInnerFire.java
index f6da1c7..dceb736 100644
--- a/src/test/java/com/hearthsim/test/card/TestInnerFire.java
+++ b/src/test/java/com/hearthsim/test/card/TestInnerFire.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -77,7 +77,7 @@ public class TestInnerFire {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -103,7 +103,7 @@ public class TestInnerFire {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -129,7 +129,7 @@ public class TestInnerFire {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestInnerRage.java b/src/test/java/com/hearthsim/test/card/TestInnerRage.java
index 449f10f..53ffe20 100644
--- a/src/test/java/com/hearthsim/test/card/TestInnerRage.java
+++ b/src/test/java/com/hearthsim/test/card/TestInnerRage.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.AcolyteOfPain;
@@ -83,7 +83,7 @@ public class TestInnerRage {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -112,7 +112,7 @@ public class TestInnerRage {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -141,7 +141,7 @@ public class TestInnerRage {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -195,7 +195,7 @@ public class TestInnerRage {
 	public void test3() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestInnervate.java b/src/test/java/com/hearthsim/test/card/TestInnervate.java
index 820efe3..3ddc621 100644
--- a/src/test/java/com/hearthsim/test/card/TestInnervate.java
+++ b/src/test/java/com/hearthsim/test/card/TestInnervate.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.Innervate;
@@ -59,7 +59,7 @@ public class TestInnervate {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -78,7 +78,7 @@ public class TestInnervate {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -97,7 +97,7 @@ public class TestInnervate {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -123,7 +123,7 @@ public class TestInnervate {
 		board.data_.getCurrentPlayer().setMana((byte)10);
 		board.data_.getCurrentPlayer().setMaxMana((byte)10);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestKillCommand.java b/src/test/java/com/hearthsim/test/card/TestKillCommand.java
index 0e79f7b..2e75c1a 100644
--- a/src/test/java/com/hearthsim/test/card/TestKillCommand.java
+++ b/src/test/java/com/hearthsim/test/card/TestKillCommand.java
@@ -108,7 +108,7 @@ public class TestKillCommand {
 	public void test2() throws HSException {
 		
 		board.data_.placeMinion(PlayerSide.CURRENT_PLAYER, new IronfurGrizzly());
-		Hero target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestMarkOfTheWild.java b/src/test/java/com/hearthsim/test/card/TestMarkOfTheWild.java
index 3fc1b76..0796aab 100644
--- a/src/test/java/com/hearthsim/test/card/TestMarkOfTheWild.java
+++ b/src/test/java/com/hearthsim/test/card/TestMarkOfTheWild.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.MarkOfTheWild;
@@ -59,10 +59,10 @@ public class TestMarkOfTheWild {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
-		
+
 		assertTrue(ret == null);
 		assertEquals(board.data_.getNumCards_hand(), 1);
 		assertEquals(PlayerSide.CURRENT_PLAYER.getPlayer(board).getNumMinions(), 2);
@@ -78,7 +78,7 @@ public class TestMarkOfTheWild {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -97,7 +97,7 @@ public class TestMarkOfTheWild {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestMindControl.java b/src/test/java/com/hearthsim/test/card/TestMindControl.java
index 1c92c83..4dd266f 100644
--- a/src/test/java/com/hearthsim/test/card/TestMindControl.java
+++ b/src/test/java/com/hearthsim/test/card/TestMindControl.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.MindControl;
@@ -60,7 +60,7 @@ public class TestMindControl {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -81,7 +81,7 @@ public class TestMindControl {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -102,7 +102,7 @@ public class TestMindControl {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestMirroImage.java b/src/test/java/com/hearthsim/test/card/TestMirroImage.java
index b3091e2..6715a9a 100644
--- a/src/test/java/com/hearthsim/test/card/TestMirroImage.java
+++ b/src/test/java/com/hearthsim/test/card/TestMirroImage.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.MirrorImageMinion;
@@ -61,7 +61,7 @@ public class TestMirroImage {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -82,7 +82,7 @@ public class TestMirroImage {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -103,7 +103,7 @@ public class TestMirroImage {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestMortalCoil.java b/src/test/java/com/hearthsim/test/card/TestMortalCoil.java
index 25b8924..b60d2b5 100644
--- a/src/test/java/com/hearthsim/test/card/TestMortalCoil.java
+++ b/src/test/java/com/hearthsim/test/card/TestMortalCoil.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.MortalCoil;
@@ -61,7 +61,7 @@ public class TestMortalCoil {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -82,7 +82,7 @@ public class TestMortalCoil {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -104,7 +104,7 @@ public class TestMortalCoil {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -126,7 +126,7 @@ public class TestMortalCoil {
 	@Test
 	public void test3() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestNightblade.java b/src/test/java/com/hearthsim/test/card/TestNightblade.java
index 5f0e467..5bca131 100644
--- a/src/test/java/com/hearthsim/test/card/TestNightblade.java
+++ b/src/test/java/com/hearthsim/test/card/TestNightblade.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Nightblade;
@@ -59,7 +59,7 @@ public class TestNightblade {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -81,7 +81,7 @@ public class TestNightblade {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -103,7 +103,7 @@ public class TestNightblade {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestRockbiterWeapon.java b/src/test/java/com/hearthsim/test/card/TestRockbiterWeapon.java
index a742763..7063073 100644
--- a/src/test/java/com/hearthsim/test/card/TestRockbiterWeapon.java
+++ b/src/test/java/com/hearthsim/test/card/TestRockbiterWeapon.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.RockbiterWeapon;
@@ -60,7 +60,7 @@ public class TestRockbiterWeapon {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -100,7 +100,7 @@ public class TestRockbiterWeapon {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestSacrificialPact.java b/src/test/java/com/hearthsim/test/card/TestSacrificialPact.java
index 8779426..5ca6438 100644
--- a/src/test/java/com/hearthsim/test/card/TestSacrificialPact.java
+++ b/src/test/java/com/hearthsim/test/card/TestSacrificialPact.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Demon;
 import com.hearthsim.card.minion.Minion;
@@ -60,7 +60,7 @@ public class TestSacrificialPact {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -81,7 +81,7 @@ public class TestSacrificialPact {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -102,7 +102,7 @@ public class TestSacrificialPact {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestSap.java b/src/test/java/com/hearthsim/test/card/TestSap.java
index 8d63bb3..4b4ffc2 100644
--- a/src/test/java/com/hearthsim/test/card/TestSap.java
+++ b/src/test/java/com/hearthsim/test/card/TestSap.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BloodfenRaptor;
@@ -76,7 +76,7 @@ public class TestSap {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -102,7 +102,7 @@ public class TestSap {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -128,7 +128,7 @@ public class TestSap {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -155,7 +155,7 @@ public class TestSap {
 	@Test
 	public void test3() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -182,7 +182,7 @@ public class TestSap {
 	@Test
 	public void test4() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		for (int indx = 0; indx < 10; ++indx) 
 			board.data_.placeCardHandWaitingPlayer(new TheCoin());
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestSavageRoar.java b/src/test/java/com/hearthsim/test/card/TestSavageRoar.java
index c29a04f..348cd3f 100644
--- a/src/test/java/com/hearthsim/test/card/TestSavageRoar.java
+++ b/src/test/java/com/hearthsim/test/card/TestSavageRoar.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -77,7 +77,7 @@ public class TestSavageRoar {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -103,7 +103,7 @@ public class TestSavageRoar {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -129,7 +129,7 @@ public class TestSavageRoar {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestShadowWordDeath.java b/src/test/java/com/hearthsim/test/card/TestShadowWordDeath.java
index ae93f29..138279d 100644
--- a/src/test/java/com/hearthsim/test/card/TestShadowWordDeath.java
+++ b/src/test/java/com/hearthsim/test/card/TestShadowWordDeath.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -76,7 +76,7 @@ public class TestShadowWordDeath {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -102,7 +102,7 @@ public class TestShadowWordDeath {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -128,7 +128,7 @@ public class TestShadowWordDeath {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestShadowWordPain.java b/src/test/java/com/hearthsim/test/card/TestShadowWordPain.java
index 3e872ed..6e6c4c7 100644
--- a/src/test/java/com/hearthsim/test/card/TestShadowWordPain.java
+++ b/src/test/java/com/hearthsim/test/card/TestShadowWordPain.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -77,7 +77,7 @@ public class TestShadowWordPain {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -103,7 +103,7 @@ public class TestShadowWordPain {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -129,7 +129,7 @@ public class TestShadowWordPain {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestSlam.java b/src/test/java/com/hearthsim/test/card/TestSlam.java
index 3dd01ca..e2d4ad5 100644
--- a/src/test/java/com/hearthsim/test/card/TestSlam.java
+++ b/src/test/java/com/hearthsim/test/card/TestSlam.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -79,7 +79,7 @@ public class TestSlam {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -106,7 +106,7 @@ public class TestSlam {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -136,7 +136,7 @@ public class TestSlam {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -166,7 +166,7 @@ public class TestSlam {
 	@Test
 	public void test3() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestSwipe.java b/src/test/java/com/hearthsim/test/card/TestSwipe.java
index d991aff..3c6c756 100644
--- a/src/test/java/com/hearthsim/test/card/TestSwipe.java
+++ b/src/test/java/com/hearthsim/test/card/TestSwipe.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -78,7 +78,7 @@ public class TestSwipe {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -105,7 +105,7 @@ public class TestSwipe {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -131,7 +131,7 @@ public class TestSwipe {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -157,7 +157,7 @@ public class TestSwipe {
 	@Test
 	public void test3() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/card/TestWildGrowth.java b/src/test/java/com/hearthsim/test/card/TestWildGrowth.java
index 423378b..da27996 100644
--- a/src/test/java/com/hearthsim/test/card/TestWildGrowth.java
+++ b/src/test/java/com/hearthsim/test/card/TestWildGrowth.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.card;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -79,7 +79,7 @@ public class TestWildGrowth {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -106,7 +106,7 @@ public class TestWildGrowth {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -133,7 +133,7 @@ public class TestWildGrowth {
 	@Test
 	public void test2() throws HSException {
 				
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -168,7 +168,7 @@ public class TestWildGrowth {
 		board.data_.getWaitingPlayer().setMaxMana((byte)10);
 		
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/heroes/TestBaseEntity.java b/src/test/java/com/hearthsim/test/heroes/TestBaseEntity.java
index ed440fe..4f794be 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestBaseEntity.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestBaseEntity.java
@@ -1,78 +1,77 @@
-/*package com.hearthsim.test.heroes;
-
-import com.hearthsim.util.tree.HearthTreeNode;
-import com.hearthsim.card.Card;
-import com.hearthsim.card.Deck;
-import com.hearthsim.card.minion.Hero;
-import com.hearthsim.card.minion.Minion;
-import com.hearthsim.card.minion.concrete.BoulderfistOgre;
-import com.hearthsim.card.minion.concrete.RaidLeader;
-import com.hearthsim.card.minion.heroes.Druid;
-import com.hearthsim.card.spellcard.concrete.TheCoin;
-import com.hearthsim.card.spellcard.concrete.WildGrowth;
-import com.hearthsim.exception.HSException;
-import com.hearthsim.model.BoardModel;
-import com.hearthsim.model.PlayerSide;
-import com.hearthsim.util.tree.HearthTreeNode;
-import org.junit.Before;
-import org.junit.Test;
-import static org.junit.Assert.*;
-
-public class TestBaseEntity
-{
-	private HearthTreeNode board;
-	private Deck deck;
-	
-	@Before
-	public void setup() {
-		board = new HearthTreeNode(new BoardModel(new Druid(), new Hero()));
-
-		Minion minion0_0 = new BoulderfistOgre();
-		Minion minion0_1 = new RaidLeader();
-		Minion minion1_0 = new BoulderfistOgre();
-		Minion minion1_1 = new RaidLeader();
-		
-		board.data_.placeCardHandCurrentPlayer(minion0_0);
-		board.data_.placeCardHandCurrentPlayer(minion0_1);
-				
-		board.data_.placeCardHandWaitingPlayer(minion1_0);
-		board.data_.placeCardHandWaitingPlayer(minion1_1);
-
-		Card cards[] = new Card[10];
-		for (int index = 0; index < 10; ++index) {
-			cards[index] = new TheCoin();
-		}
-	
-		deck = new Deck(cards);
-
-		Card fb = new WildGrowth();
-		board.data_.placeCardHandCurrentPlayer(fb);
-
-		board.data_.getCurrentPlayer().setMana((byte)8);
-		board.data_.getWaitingPlayer().setMana((byte)8);
-		
-		board.data_.getCurrentPlayer().setMaxMana((byte)8);
-		board.data_.getWaitingPlayer().setMaxMana((byte)8);
-		
-		HearthTreeNode tmpBoard = new HearthTreeNode(board.data_.flipPlayers());
-		try {
-			tmpBoard.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, tmpBoard.data_.getCurrentPlayerHero(), tmpBoard, deck, null);
-			tmpBoard.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, tmpBoard.data_.getCurrentPlayerHero(), tmpBoard, deck, null);
-		} catch (HSException e) {
-			// TODO Auto-generated catch block
-			e.printStackTrace();
-		}
-		board = new HearthTreeNode(tmpBoard.data_.flipPlayers());
-		try {
-			board.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, board.data_.getCurrentPlayerHero(), board, deck, null);
-			board.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, board.data_.getCurrentPlayerHero(), board, deck, null);
-		} catch (HSException e) {
-			// TODO Auto-generated catch block
-			e.printStackTrace();
-		}
-		board.data_.resetMana();
-		board.data_.resetMinions();
-		
-	}
-}
-*/
\ No newline at end of file
+//package com.hearthsim.test.heroes;
+//
+//import com.hearthsim.util.tree.HearthTreeNode;
+//import com.hearthsim.card.Card;
+//import com.hearthsim.card.Deck;
+//import com.hearthsim.card.minion.Hero;
+//import com.hearthsim.card.minion.Minion;
+//import com.hearthsim.card.minion.concrete.BoulderfistOgre;
+//import com.hearthsim.card.minion.concrete.RaidLeader;
+//import com.hearthsim.card.minion.heroes.Druid;
+//import com.hearthsim.card.spellcard.concrete.TheCoin;
+//import com.hearthsim.card.spellcard.concrete.WildGrowth;
+//import com.hearthsim.exception.HSException;
+//import com.hearthsim.model.BoardModel;
+//import com.hearthsim.model.PlayerSide;
+//import com.hearthsim.util.tree.HearthTreeNode;
+//import org.junit.Before;
+//import org.junit.Test;
+//import static org.junit.Assert.*;
+//
+//public class TestBaseEntity
+//{
+//	private HearthTreeNode board;
+//	private Deck deck;
+//	
+//	@Before
+//	public void setup() {
+//		board = new HearthTreeNode(new BoardModel(new Druid(), new Hero()));
+//
+//		BaseEntity minion0_0 = new BoulderfistOgre();
+//		BaseEntity minion0_1 = new RaidLeader();
+//		BaseEntity minion1_0 = new BoulderfistOgre();
+//		BaseEntity minion1_1 = new RaidLeader();
+//		
+//		board.data_.placeCardHandCurrentPlayer(minion0_0);
+//		board.data_.placeCardHandCurrentPlayer(minion0_1);
+//				
+//		board.data_.placeCardHandWaitingPlayer(minion1_0);
+//		board.data_.placeCardHandWaitingPlayer(minion1_1);
+//
+//		Card cards[] = new Card[10];
+//		for (int index = 0; index < 10; ++index) {
+//			cards[index] = new TheCoin();
+//		}
+//	
+//		deck = new Deck(cards);
+//
+//		Card fb = new WildGrowth();
+//		board.data_.placeCardHandCurrentPlayer(fb);
+//
+//		board.data_.getCurrentPlayer().setMana((byte)8);
+//		board.data_.getWaitingPlayer().setMana((byte)8);
+//		
+//		board.data_.getCurrentPlayer().setMaxMana((byte)8);
+//		board.data_.getWaitingPlayer().setMaxMana((byte)8);
+//		
+//		HearthTreeNode tmpBoard = new HearthTreeNode(board.data_.flipPlayers());
+//		try {
+//			tmpBoard.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, tmpBoard.data_.getCurrentPlayerHero(), tmpBoard, deck, null);
+//			tmpBoard.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, tmpBoard.data_.getCurrentPlayerHero(), tmpBoard, deck, null);
+//		} catch (HSException e) {
+//			// TODO Auto-generated catch block
+//			e.printStackTrace();
+//		}
+//		board = new HearthTreeNode(tmpBoard.data_.flipPlayers());
+//		try {
+//			board.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, board.data_.getCurrentPlayerHero(), board, deck, null);
+//			board.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, board.data_.getCurrentPlayerHero(), board, deck, null);
+//		} catch (HSException e) {
+//			// TODO Auto-generated catch block
+//			e.printStackTrace();
+//		}
+//		board.data_.resetMana();
+//		board.data_.resetMinions();
+//		
+//	}
+//}
diff --git a/src/test/java/com/hearthsim/test/heroes/TestDruid.java b/src/test/java/com/hearthsim/test/heroes/TestDruid.java
index b040c1f..2131628 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestDruid.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestDruid.java
@@ -9,6 +9,7 @@ import com.hearthsim.card.minion.concrete.RaidLeader;
 import com.hearthsim.card.minion.heroes.Druid;
 import com.hearthsim.card.spellcard.concrete.TheCoin;
 import com.hearthsim.card.spellcard.concrete.WildGrowth;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -27,10 +28,10 @@ public class TestDruid {
 	public void setup() {
 		board = new HearthTreeNode(new BoardModel(new Druid(), new Hero()));
 
-		Minion minion0_0 = new BoulderfistOgre();
-		Minion minion0_1 = new RaidLeader();
-		Minion minion1_0 = new BoulderfistOgre();
-		Minion minion1_1 = new RaidLeader();
+		BaseEntity minion0_0 = new BoulderfistOgre();
+		BaseEntity minion0_1 = new RaidLeader();
+		BaseEntity minion1_0 = new BoulderfistOgre();
+		BaseEntity minion1_1 = new RaidLeader();
 		
 		board.data_.placeCardHandCurrentPlayer(minion0_0);
 		board.data_.placeCardHandCurrentPlayer(minion0_1);
@@ -79,8 +80,8 @@ public class TestDruid {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/heroes/TestHunter.java b/src/test/java/com/hearthsim/test/heroes/TestHunter.java
index b4d593e..f148c17 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestHunter.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestHunter.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.heroes;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -28,10 +28,10 @@ public class TestHunter {
 	public void setup() {
 		board = new HearthTreeNode(new BoardModel(new Hunter(), new Hero()));
 
-		Minion minion0_0 = new BoulderfistOgre();
-		Minion minion0_1 = new RaidLeader();
-		Minion minion1_0 = new BoulderfistOgre();
-		Minion minion1_1 = new RaidLeader();
+		BaseEntity minion0_0 = new BoulderfistOgre();
+		BaseEntity minion0_1 = new RaidLeader();
+		BaseEntity minion1_0 = new BoulderfistOgre();
+		BaseEntity minion1_1 = new RaidLeader();
 		
 		board.data_.placeCardHandCurrentPlayer(minion0_0);
 		board.data_.placeCardHandCurrentPlayer(minion0_1);
@@ -80,8 +80,8 @@ public class TestHunter {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/heroes/TestMage.java b/src/test/java/com/hearthsim/test/heroes/TestMage.java
index c8d337f..4565af4 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestMage.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestMage.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.heroes;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -27,10 +27,10 @@ public class TestMage {
 	public void setup() {
 		board = new HearthTreeNode(new BoardModel(new Mage(), new Hero()));
 
-		Minion minion0_0 = new ChillwindYeti();
-		Minion minion0_1 = new ChillwindYeti();
-		Minion minion1_0 = new ChillwindYeti();
-		Minion minion1_1 = new ChillwindYeti();
+		BaseEntity minion0_0 = new ChillwindYeti();
+		BaseEntity minion0_1 = new ChillwindYeti();
+		BaseEntity minion1_0 = new ChillwindYeti();
+		BaseEntity minion1_1 = new ChillwindYeti();
 		
 		board.data_.placeCardHandCurrentPlayer(minion0_0);
 		board.data_.placeCardHandCurrentPlayer(minion0_1);
@@ -76,8 +76,8 @@ public class TestMage {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/heroes/TestPaladin.java b/src/test/java/com/hearthsim/test/heroes/TestPaladin.java
index c4555bf..cff4f69 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestPaladin.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestPaladin.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.heroes;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -29,10 +29,10 @@ public class TestPaladin {
 	public void setup() {
 		board = new HearthTreeNode(new BoardModel(new Paladin(), new Hero()));
 
-		Minion minion0_0 = new BoulderfistOgre();
-		Minion minion0_1 = new RaidLeader();
-		Minion minion1_0 = new BoulderfistOgre();
-		Minion minion1_1 = new RaidLeader();
+		BaseEntity minion0_0 = new BoulderfistOgre();
+		BaseEntity minion0_1 = new RaidLeader();
+		BaseEntity minion1_0 = new BoulderfistOgre();
+		BaseEntity minion1_1 = new RaidLeader();
 		
 		board.data_.placeCardHandCurrentPlayer(minion0_0);
 		board.data_.placeCardHandCurrentPlayer(minion0_1);
@@ -81,8 +81,8 @@ public class TestPaladin {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/heroes/TestPriest.java b/src/test/java/com/hearthsim/test/heroes/TestPriest.java
index 041e957..6624f67 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestPriest.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestPriest.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.heroes;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -28,10 +28,10 @@ public class TestPriest {
 	public void setup() {
 		board = new HearthTreeNode(new BoardModel(new Priest(), new Hero()));
 
-		Minion minion0_0 = new ChillwindYeti();
-		Minion minion0_1 = new ChillwindYeti();
-		Minion minion1_0 = new ChillwindYeti();
-		Minion minion1_1 = new ChillwindYeti();
+		BaseEntity minion0_0 = new ChillwindYeti();
+		BaseEntity minion0_1 = new ChillwindYeti();
+		BaseEntity minion1_0 = new ChillwindYeti();
+		BaseEntity minion1_1 = new ChillwindYeti();
 		
 		board.data_.placeCardHandCurrentPlayer(minion0_0);
 		board.data_.placeCardHandCurrentPlayer(minion0_1);
@@ -54,6 +54,8 @@ public class TestPriest {
 		
 		HearthTreeNode tmpBoard = new HearthTreeNode(board.data_.flipPlayers());
 		try {
+			System.out.println(PlayerSide.CURRENT_PLAYER.getClass().getName());
+			System.out.println(tmpBoard.data_.getCurrentPlayerHero().getClass().getName());
 			tmpBoard.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, tmpBoard.data_.getCurrentPlayerHero(), tmpBoard, deck, null);
 			tmpBoard.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, tmpBoard.data_.getCurrentPlayerHero(), tmpBoard, deck, null);
 		} catch (HSException e) {
@@ -77,8 +79,8 @@ public class TestPriest {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/heroes/TestRogue.java b/src/test/java/com/hearthsim/test/heroes/TestRogue.java
index 9ae79b0..02f1d26 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestRogue.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestRogue.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.heroes;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -27,10 +27,10 @@ public class TestRogue {
 	public void setup() {
 		board = new HearthTreeNode(new BoardModel(new Rogue(), new Hero()));
 
-		Minion minion0_0 = new BoulderfistOgre();
-		Minion minion0_1 = new RaidLeader();
-		Minion minion1_0 = new BoulderfistOgre();
-		Minion minion1_1 = new RaidLeader();
+		BaseEntity minion0_0 = new BoulderfistOgre();
+		BaseEntity minion0_1 = new RaidLeader();
+		BaseEntity minion1_0 = new BoulderfistOgre();
+		BaseEntity minion1_1 = new RaidLeader();
 		
 		board.data_.placeCardHandCurrentPlayer(minion0_0);
 		board.data_.placeCardHandCurrentPlayer(minion0_1);
@@ -79,8 +79,8 @@ public class TestRogue {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/heroes/TestShaman.java b/src/test/java/com/hearthsim/test/heroes/TestShaman.java
index ccabe98..434fa70 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestShaman.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestShaman.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.heroes;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -31,10 +31,10 @@ public class TestShaman {
 	public void setup() {
 		board = new HearthTreeNode(new BoardModel(new Shaman(), new Hero()));
 
-		Minion minion0_0 = new BoulderfistOgre();
-		Minion minion0_1 = new RaidLeader();
-		Minion minion1_0 = new BoulderfistOgre();
-		Minion minion1_1 = new RaidLeader();
+		BaseEntity minion0_0 = new BoulderfistOgre();
+		BaseEntity minion0_1 = new RaidLeader();
+		BaseEntity minion1_0 = new BoulderfistOgre();
+		BaseEntity minion1_1 = new RaidLeader();
 		
 		board.data_.placeCardHandCurrentPlayer(minion0_0);
 		board.data_.placeCardHandCurrentPlayer(minion0_1);
@@ -83,8 +83,8 @@ public class TestShaman {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/heroes/TestWarlock.java b/src/test/java/com/hearthsim/test/heroes/TestWarlock.java
index 9be74d9..13386c4 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestWarlock.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestWarlock.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.heroes;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -30,10 +30,10 @@ public class TestWarlock {
 	public void setup() {
 		board = new HearthTreeNode(new BoardModel(new Warlock(), new Hero()));
 
-		Minion minion0_0 = new BoulderfistOgre();
-		Minion minion0_1 = new RaidLeader();
-		Minion minion1_0 = new BoulderfistOgre();
-		Minion minion1_1 = new RaidLeader();
+		BaseEntity minion0_0 = new BoulderfistOgre();
+		BaseEntity minion0_1 = new RaidLeader();
+		BaseEntity minion1_0 = new BoulderfistOgre();
+		BaseEntity minion1_1 = new RaidLeader();
 		
 		board.data_.placeCardHandCurrentPlayer(minion0_0);
 		board.data_.placeCardHandCurrentPlayer(minion0_1);
@@ -81,8 +81,8 @@ public class TestWarlock {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
@@ -133,8 +133,8 @@ public class TestWarlock {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/heroes/TestWarrior.java b/src/test/java/com/hearthsim/test/heroes/TestWarrior.java
index 8f59f41..4185c29 100644
--- a/src/test/java/com/hearthsim/test/heroes/TestWarrior.java
+++ b/src/test/java/com/hearthsim/test/heroes/TestWarrior.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.heroes;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -27,10 +27,10 @@ public class TestWarrior {
 	public void setup() {
 		board = new HearthTreeNode(new BoardModel(new Warrior(), new Hero()));
 
-		Minion minion0_0 = new BoulderfistOgre();
-		Minion minion0_1 = new RaidLeader();
-		Minion minion1_0 = new BoulderfistOgre();
-		Minion minion1_1 = new RaidLeader();
+		BaseEntity minion0_0 = new BoulderfistOgre();
+		BaseEntity minion0_1 = new RaidLeader();
+		BaseEntity minion1_0 = new BoulderfistOgre();
+		BaseEntity minion1_1 = new RaidLeader();
 		
 		board.data_.placeCardHandCurrentPlayer(minion0_0);
 		board.data_.placeCardHandCurrentPlayer(minion0_1);
@@ -79,8 +79,8 @@ public class TestWarrior {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		HearthTreeNode ret = minion.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestAbomination.java b/src/test/java/com/hearthsim/test/minion/TestAbomination.java
index 950856b..c6eab0e 100644
--- a/src/test/java/com/hearthsim/test/minion/TestAbomination.java
+++ b/src/test/java/com/hearthsim/test/minion/TestAbomination.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Abomination;
@@ -81,7 +81,7 @@ public class TestAbomination {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -112,7 +112,7 @@ public class TestAbomination {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -145,7 +145,7 @@ public class TestAbomination {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -175,7 +175,7 @@ public class TestAbomination {
 		
 		//attack the Ogre... should kill everything except the Scarlet Crusader
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3);
-		Minion attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		attacker.hasAttacked(false);
 		ret = attacker.attack(PlayerSide.WAITING_PLAYER, target, ret, null, null);
 
@@ -201,7 +201,7 @@ public class TestAbomination {
 	public void test3() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -231,7 +231,7 @@ public class TestAbomination {
 		
 		//Silence the Abomination first, then attack with it
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3);
-		Minion attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		attacker.silenced(PlayerSide.CURRENT_PLAYER, board);
 		attacker.hasAttacked(false);
 		ret = attacker.attack(PlayerSide.WAITING_PLAYER, target, ret, null, null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestAbusiveSergeant.java b/src/test/java/com/hearthsim/test/minion/TestAbusiveSergeant.java
index fb4770b..9f37099 100644
--- a/src/test/java/com/hearthsim/test/minion/TestAbusiveSergeant.java
+++ b/src/test/java/com/hearthsim/test/minion/TestAbusiveSergeant.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.AbusiveSergeant;
@@ -83,7 +83,7 @@ public class TestAbusiveSergeant {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -113,7 +113,7 @@ public class TestAbusiveSergeant {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -151,7 +151,7 @@ public class TestAbusiveSergeant {
 		//make sure that the extra attack is working!
 		HearthTreeNode child1 = board.getChildren().get(0);
 		target = child1.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = child1.data_.getCurrentPlayer().getMinions().get(0);
+		Minion minion = (Minion) child1.data_.getCurrentPlayer().getMinions().get(0);
 		minion.attack(PlayerSide.WAITING_PLAYER, target, child1, deck, null);
 		assertEquals(child1.data_.getNumCards_hand(), 0);
 		assertEquals(child1.data_.getCurrentPlayer().getNumMinions(), 3);
diff --git a/src/test/java/com/hearthsim/test/minion/TestAcidicSwampOoze.java b/src/test/java/com/hearthsim/test/minion/TestAcidicSwampOoze.java
index 55a60bf..0184853 100644
--- a/src/test/java/com/hearthsim/test/minion/TestAcidicSwampOoze.java
+++ b/src/test/java/com/hearthsim/test/minion/TestAcidicSwampOoze.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.AcidicSwampOoze;
@@ -60,7 +60,7 @@ public class TestAcidicSwampOoze {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -79,7 +79,7 @@ public class TestAcidicSwampOoze {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -99,7 +99,7 @@ public class TestAcidicSwampOoze {
 	@Test
 	public void test3() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		HearthTreeNode fl = new HearthTreeNode(board.data_.flipPlayers());
 		fl.data_.placeCardHandCurrentPlayer(new FieryWarAxe());
 		fl = fl.data_.getCurrentPlayerCardHand(0).useOn(PlayerSide.CURRENT_PLAYER, target, fl, deck, null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestAcolyteOfPain.java b/src/test/java/com/hearthsim/test/minion/TestAcolyteOfPain.java
index a971fea..eaf148d 100644
--- a/src/test/java/com/hearthsim/test/minion/TestAcolyteOfPain.java
+++ b/src/test/java/com/hearthsim/test/minion/TestAcolyteOfPain.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -65,7 +65,7 @@ public class TestAcolyteOfPain {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -85,7 +85,7 @@ public class TestAcolyteOfPain {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestAldorPeacekeeper.java b/src/test/java/com/hearthsim/test/minion/TestAldorPeacekeeper.java
index adf6f6f..8bc7ad0 100644
--- a/src/test/java/com/hearthsim/test/minion/TestAldorPeacekeeper.java
+++ b/src/test/java/com/hearthsim/test/minion/TestAldorPeacekeeper.java
@@ -7,7 +7,7 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.AldorPeacekeeper;
@@ -87,7 +87,7 @@ public class TestAldorPeacekeeper {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -117,7 +117,7 @@ public class TestAldorPeacekeeper {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestAlexstrasza.java b/src/test/java/com/hearthsim/test/minion/TestAlexstrasza.java
index eba36bd..a481d98 100644
--- a/src/test/java/com/hearthsim/test/minion/TestAlexstrasza.java
+++ b/src/test/java/com/hearthsim/test/minion/TestAlexstrasza.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Alexstrasza;
@@ -83,7 +83,7 @@ public class TestAlexstrasza {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -114,7 +114,7 @@ public class TestAlexstrasza {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestAmaniBerserker.java b/src/test/java/com/hearthsim/test/minion/TestAmaniBerserker.java
index 19a45a0..8085bef 100644
--- a/src/test/java/com/hearthsim/test/minion/TestAmaniBerserker.java
+++ b/src/test/java/com/hearthsim/test/minion/TestAmaniBerserker.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.AmaniBerserker;
@@ -88,7 +88,7 @@ public class TestAmaniBerserker {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -121,7 +121,7 @@ public class TestAmaniBerserker {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -151,7 +151,7 @@ public class TestAmaniBerserker {
 		
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion ab = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		BaseEntity ab = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		ab.hasAttacked(false);
 		ret = ab.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestAncientOfLore.java b/src/test/java/com/hearthsim/test/minion/TestAncientOfLore.java
index 44a8336..95d3b76 100644
--- a/src/test/java/com/hearthsim/test/minion/TestAncientOfLore.java
+++ b/src/test/java/com/hearthsim/test/minion/TestAncientOfLore.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.AncientOfLore;
@@ -78,7 +78,7 @@ public class TestAncientOfLore {
 	@Test
 	public void test1() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestArathiWeaponsmith.java b/src/test/java/com/hearthsim/test/minion/TestArathiWeaponsmith.java
index c984598..f5692fb 100644
--- a/src/test/java/com/hearthsim/test/minion/TestArathiWeaponsmith.java
+++ b/src/test/java/com/hearthsim/test/minion/TestArathiWeaponsmith.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.ArathiWeaponsmith;
@@ -77,7 +77,7 @@ public class TestArathiWeaponsmith {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		assertTrue(ret == null);
@@ -107,7 +107,7 @@ public class TestArathiWeaponsmith {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestArcaneGolem.java b/src/test/java/com/hearthsim/test/minion/TestArcaneGolem.java
index 6de9acf..4317c10 100644
--- a/src/test/java/com/hearthsim/test/minion/TestArcaneGolem.java
+++ b/src/test/java/com/hearthsim/test/minion/TestArcaneGolem.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.ArcaneGolem;
@@ -80,7 +80,7 @@ public class TestArcaneGolem {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -107,7 +107,7 @@ public class TestArcaneGolem {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -135,7 +135,7 @@ public class TestArcaneGolem {
 		
 		//----------------------------------------------------------
 		
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		
 		minion.hasAttacked(false);
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
diff --git a/src/test/java/com/hearthsim/test/minion/TestArchmage.java b/src/test/java/com/hearthsim/test/minion/TestArchmage.java
index 471bbad..ccb475e 100644
--- a/src/test/java/com/hearthsim/test/minion/TestArchmage.java
+++ b/src/test/java/com/hearthsim/test/minion/TestArchmage.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Archmage;
@@ -105,7 +105,7 @@ public class TestArchmage {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -124,7 +124,7 @@ public class TestArchmage {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -179,7 +179,7 @@ public class TestArchmage {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestArchmageAntonidas.java b/src/test/java/com/hearthsim/test/minion/TestArchmageAntonidas.java
index 96e71ca..d75cd21 100644
--- a/src/test/java/com/hearthsim/test/minion/TestArchmageAntonidas.java
+++ b/src/test/java/com/hearthsim/test/minion/TestArchmageAntonidas.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.ArchmageAntonidas;
@@ -81,7 +81,7 @@ public class TestArchmageAntonidas {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -108,7 +108,7 @@ public class TestArchmageAntonidas {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestArgentProtector.java b/src/test/java/com/hearthsim/test/minion/TestArgentProtector.java
index 212a26b..35ca2c5 100644
--- a/src/test/java/com/hearthsim/test/minion/TestArgentProtector.java
+++ b/src/test/java/com/hearthsim/test/minion/TestArgentProtector.java
@@ -7,7 +7,7 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.ArgentProtector;
@@ -86,7 +86,7 @@ public class TestArgentProtector {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -116,7 +116,7 @@ public class TestArgentProtector {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestArmorsmith.java b/src/test/java/com/hearthsim/test/minion/TestArmorsmith.java
index 049cc92..9ee59eb 100644
--- a/src/test/java/com/hearthsim/test/minion/TestArmorsmith.java
+++ b/src/test/java/com/hearthsim/test/minion/TestArmorsmith.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Armorsmith;
@@ -80,7 +80,7 @@ public class TestArmorsmith {
 	@Test
 	public void test0() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestBigGameHunter.java b/src/test/java/com/hearthsim/test/minion/TestBigGameHunter.java
index 5b03034..f44104b 100644
--- a/src/test/java/com/hearthsim/test/minion/TestBigGameHunter.java
+++ b/src/test/java/com/hearthsim/test/minion/TestBigGameHunter.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.*;
@@ -87,7 +87,7 @@ public class TestBigGameHunter {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, deck);
 		
@@ -100,6 +100,7 @@ public class TestBigGameHunter {
 		assertEquals(board.data_.getCurrentPlayerHero().getHealth(), 30);
 		assertEquals(board.data_.getWaitingPlayerHero().getHealth(), 30);
 		
+		System.out.println(PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0).getTotalHealth());
 		assertEquals(PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0).getTotalHealth(), 4);
 		assertEquals(PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1).getTotalHealth(), 3);
 		assertEquals(PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2).getTotalHealth(), 6);
@@ -129,7 +130,7 @@ public class TestBigGameHunter {
 		PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).setAttack((byte)8);
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, deck);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestBloodKnight.java b/src/test/java/com/hearthsim/test/minion/TestBloodKnight.java
index ccd811e..1f48b41 100644
--- a/src/test/java/com/hearthsim/test/minion/TestBloodKnight.java
+++ b/src/test/java/com/hearthsim/test/minion/TestBloodKnight.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BloodKnight;
@@ -64,7 +64,7 @@ public class TestBloodKnight {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -95,7 +95,7 @@ public class TestBloodKnight {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -128,7 +128,7 @@ public class TestBloodKnight {
 	public void test2() throws HSException {
 		
 		board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3).setDivineShield(false);
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -162,7 +162,7 @@ public class TestBloodKnight {
 		
 		board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3).setDivineShield(false);
 		board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3).setDivineShield(false);
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestBloodfenRaptor.java b/src/test/java/com/hearthsim/test/minion/TestBloodfenRaptor.java
index e20345b..169a37a 100644
--- a/src/test/java/com/hearthsim/test/minion/TestBloodfenRaptor.java
+++ b/src/test/java/com/hearthsim/test/minion/TestBloodfenRaptor.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BloodfenRaptor;
 import com.hearthsim.exception.HSException;
@@ -85,7 +85,7 @@ public class TestBloodfenRaptor {
 		BloodfenRaptor fb = new BloodfenRaptor();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
@@ -106,7 +106,7 @@ public class TestBloodfenRaptor {
 		BloodfenRaptor fb = new BloodfenRaptor();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		
@@ -122,17 +122,17 @@ public class TestBloodfenRaptor {
 		assertTrue("test2_9", PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(0).getHealth() == health0);
 		assertTrue("test2_10", PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).getHealth() == health1);
 		
-		Minion theAttacker = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		Minion theAttacker = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		ret = theAttacker.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		assertTrue("test2", ret == null);
 
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		theAttacker = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		theAttacker = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		ret = theAttacker.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		assertTrue("test2", ret == null);
 
-		theAttacker = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		theAttacker = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		theAttacker.hasAttacked(false);
 		theAttacker.hasBeenUsed(false);
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
@@ -150,7 +150,7 @@ public class TestBloodfenRaptor {
 		assertTrue("test2_10", PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).getHealth() == health1);
 		assertTrue("test2", PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0).hasAttacked());
 		
-		theAttacker = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
+		theAttacker = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(0);
 		theAttacker.hasAttacked(false);
 		theAttacker.hasBeenUsed(false);
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
@@ -172,7 +172,7 @@ public class TestBloodfenRaptor {
 		BloodfenRaptor fb = new BloodfenRaptor();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		
@@ -194,7 +194,7 @@ public class TestBloodfenRaptor {
 		BloodfenRaptor fb = new BloodfenRaptor();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, null, null);
 		
@@ -216,7 +216,7 @@ public class TestBloodfenRaptor {
 		BloodfenRaptor fb = new BloodfenRaptor();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
@@ -237,7 +237,7 @@ public class TestBloodfenRaptor {
 		BloodfenRaptor fb = new BloodfenRaptor();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
@@ -258,7 +258,7 @@ public class TestBloodfenRaptor {
 		BloodfenRaptor fb = new BloodfenRaptor();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, null, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestCairneBloodhoof.java b/src/test/java/com/hearthsim/test/minion/TestCairneBloodhoof.java
index d4c59c9..f764018 100644
--- a/src/test/java/com/hearthsim/test/minion/TestCairneBloodhoof.java
+++ b/src/test/java/com/hearthsim/test/minion/TestCairneBloodhoof.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.*;
@@ -80,7 +80,7 @@ public class TestCairneBloodhoof {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -107,7 +107,7 @@ public class TestCairneBloodhoof {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -135,7 +135,7 @@ public class TestCairneBloodhoof {
 		
 		//----------------------------------------------------------
 		
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		assertTrue(minion instanceof CairneBloodhoof);
 		
 		minion.hasAttacked(false);
@@ -170,7 +170,7 @@ public class TestCairneBloodhoof {
 	public void test3() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -198,7 +198,7 @@ public class TestCairneBloodhoof {
 		
 		//----------------------------------------------------------
 		
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1);
+		Minion minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1);
 		assertTrue(minion instanceof CairneBloodhoof);
 		
 		minion.hasAttacked(false);
@@ -232,7 +232,7 @@ public class TestCairneBloodhoof {
 	public void test4() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -261,7 +261,7 @@ public class TestCairneBloodhoof {
 		HearthTreeNode fb = new HearthTreeNode(board.data_.flipPlayers());
 
         MinionList currentPlayerMinions = PlayerSide.CURRENT_PLAYER.getPlayer(fb).getMinions();
-        Minion minion = currentPlayerMinions.get(1);
+        Minion minion = (Minion) currentPlayerMinions.get(1);
 		
 		minion.hasAttacked(false);
 		target = fb.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
@@ -295,7 +295,7 @@ public class TestCairneBloodhoof {
 	public void test5() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 
@@ -336,7 +336,7 @@ public class TestCairneBloodhoof {
 		//----------------------------------------------------------
 		HearthTreeNode fb = new HearthTreeNode(board.data_.flipPlayers());
 		
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(fb).getMinions().get(1);
+		Minion minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(fb).getMinions().get(1);
 		
 		minion.hasAttacked(false);
 		target = fb.data_.getCharacter(PlayerSide.WAITING_PLAYER, 6);
@@ -380,7 +380,7 @@ public class TestCairneBloodhoof {
 		//In this test Cairne will be killed by a spell: Fireball
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -408,7 +408,7 @@ public class TestCairneBloodhoof {
 		//----------------------------------------------------------
 		HearthTreeNode fb = new HearthTreeNode(board.data_.flipPlayers());
 		
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(fb).getMinions().get(1);
+		Minion minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(fb).getMinions().get(1);
 		
 		fb.data_.placeCardHandCurrentPlayer(new Fireball());
 		Card fireball = fb.data_.getCurrentPlayerCardHand(0);
diff --git a/src/test/java/com/hearthsim/test/minion/TestColdlightOracle.java b/src/test/java/com/hearthsim/test/minion/TestColdlightOracle.java
index 34f8ea2..dfd628b 100644
--- a/src/test/java/com/hearthsim/test/minion/TestColdlightOracle.java
+++ b/src/test/java/com/hearthsim/test/minion/TestColdlightOracle.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -88,7 +88,7 @@ public class TestColdlightOracle {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -115,7 +115,7 @@ public class TestColdlightOracle {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, deck);
 		
@@ -141,9 +141,7 @@ public class TestColdlightOracle {
 		assertEquals(PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1).getTotalAttack(), 7);
 		assertEquals(PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2).getTotalAttack(), 3);
 		assertEquals(PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(0).getTotalAttack(), 2);
-		assertEquals(PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).getTotalAttack(), 7);
-		
-		
+		assertEquals(PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).getTotalAttack(), 7);		
 	}
 	
 
diff --git a/src/test/java/com/hearthsim/test/minion/TestColdlightSeer.java b/src/test/java/com/hearthsim/test/minion/TestColdlightSeer.java
index b530f5d..66e095f 100644
--- a/src/test/java/com/hearthsim/test/minion/TestColdlightSeer.java
+++ b/src/test/java/com/hearthsim/test/minion/TestColdlightSeer.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.ColdlightSeer;
@@ -75,7 +75,7 @@ public class TestColdlightSeer {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -100,7 +100,7 @@ public class TestColdlightSeer {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestCrazedAlchemist.java b/src/test/java/com/hearthsim/test/minion/TestCrazedAlchemist.java
index 14bca6a..7ea8e02 100644
--- a/src/test/java/com/hearthsim/test/minion/TestCrazedAlchemist.java
+++ b/src/test/java/com/hearthsim/test/minion/TestCrazedAlchemist.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.*;
@@ -88,7 +88,7 @@ public class TestCrazedAlchemist {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, deck);
 		
@@ -127,7 +127,7 @@ public class TestCrazedAlchemist {
 		PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).setHealth((byte)1);
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, deck);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestCruelTaskmaster.java b/src/test/java/com/hearthsim/test/minion/TestCruelTaskmaster.java
index c83c576..c51ea55 100644
--- a/src/test/java/com/hearthsim/test/minion/TestCruelTaskmaster.java
+++ b/src/test/java/com/hearthsim/test/minion/TestCruelTaskmaster.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.*;
@@ -86,7 +86,7 @@ public class TestCruelTaskmaster {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, deck);
 		
@@ -123,7 +123,7 @@ public class TestCruelTaskmaster {
 		PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).setHealth((byte)1);
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, deck);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestDarkIronDwarf.java b/src/test/java/com/hearthsim/test/minion/TestDarkIronDwarf.java
index cc83bf0..564bbe5 100644
--- a/src/test/java/com/hearthsim/test/minion/TestDarkIronDwarf.java
+++ b/src/test/java/com/hearthsim/test/minion/TestDarkIronDwarf.java
@@ -7,7 +7,7 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.DarkIronDwarf;
@@ -86,7 +86,7 @@ public class TestDarkIronDwarf {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -116,7 +116,7 @@ public class TestDarkIronDwarf {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -154,7 +154,7 @@ public class TestDarkIronDwarf {
 		//make sure that the extra attack is working!
 		HearthTreeNode child1 = board.getChildren().get(0);
 		target = child1.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion minion = child1.data_.getCurrentPlayer().getMinions().get(0);
+		Minion minion = (Minion) child1.data_.getCurrentPlayer().getMinions().get(0);
 		minion.attack(PlayerSide.WAITING_PLAYER, target, child1, deck, null);
 		assertEquals(child1.data_.getNumCards_hand(), 0);
 		assertEquals(child1.data_.getCurrentPlayer().getNumMinions(), 3);
diff --git a/src/test/java/com/hearthsim/test/minion/TestDarkscaleHealer.java b/src/test/java/com/hearthsim/test/minion/TestDarkscaleHealer.java
index 56b3203..412c7bc 100644
--- a/src/test/java/com/hearthsim/test/minion/TestDarkscaleHealer.java
+++ b/src/test/java/com/hearthsim/test/minion/TestDarkscaleHealer.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.DarkscaleHealer;
@@ -59,7 +59,7 @@ public class TestDarkscaleHealer {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -78,7 +78,7 @@ public class TestDarkscaleHealer {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -97,7 +97,7 @@ public class TestDarkscaleHealer {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		board.data_.getCurrentPlayerHero().setHealth((byte)27);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestDefenderOfArgus.java b/src/test/java/com/hearthsim/test/minion/TestDefenderOfArgus.java
index a6f7fe8..60f4794 100644
--- a/src/test/java/com/hearthsim/test/minion/TestDefenderOfArgus.java
+++ b/src/test/java/com/hearthsim/test/minion/TestDefenderOfArgus.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BloodfenRaptor;
@@ -79,7 +79,7 @@ public class TestDefenderOfArgus {
 	@Test
 	public void test0() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -116,7 +116,7 @@ public class TestDefenderOfArgus {
 	@Test
 	public void test1() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestDragonlingMechanic.java b/src/test/java/com/hearthsim/test/minion/TestDragonlingMechanic.java
index b71eef7..fca27b4 100644
--- a/src/test/java/com/hearthsim/test/minion/TestDragonlingMechanic.java
+++ b/src/test/java/com/hearthsim/test/minion/TestDragonlingMechanic.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -78,7 +78,7 @@ public class TestDragonlingMechanic {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -106,7 +106,7 @@ public class TestDragonlingMechanic {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestDreadInfernal.java b/src/test/java/com/hearthsim/test/minion/TestDreadInfernal.java
index 157eef3..93ed498 100644
--- a/src/test/java/com/hearthsim/test/minion/TestDreadInfernal.java
+++ b/src/test/java/com/hearthsim/test/minion/TestDreadInfernal.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.DreadInfernal;
@@ -59,7 +59,7 @@ public class TestDreadInfernal {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -78,7 +78,7 @@ public class TestDreadInfernal {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestDustDevil.java b/src/test/java/com/hearthsim/test/minion/TestDustDevil.java
index 899db91..0b39284 100644
--- a/src/test/java/com/hearthsim/test/minion/TestDustDevil.java
+++ b/src/test/java/com/hearthsim/test/minion/TestDustDevil.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.AngryChicken;
@@ -57,7 +57,7 @@ public class TestDustDevil {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -79,7 +79,7 @@ public class TestDustDevil {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestEarthenRingFarseer.java b/src/test/java/com/hearthsim/test/minion/TestEarthenRingFarseer.java
index 20aef63..638bfd1 100644
--- a/src/test/java/com/hearthsim/test/minion/TestEarthenRingFarseer.java
+++ b/src/test/java/com/hearthsim/test/minion/TestEarthenRingFarseer.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -69,7 +69,7 @@ public class TestEarthenRingFarseer {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -98,7 +98,7 @@ public class TestEarthenRingFarseer {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestElvenArcher.java b/src/test/java/com/hearthsim/test/minion/TestElvenArcher.java
index cf17c47..ab921da 100644
--- a/src/test/java/com/hearthsim/test/minion/TestElvenArcher.java
+++ b/src/test/java/com/hearthsim/test/minion/TestElvenArcher.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Abomination;
@@ -64,7 +64,7 @@ public class TestElvenArcher {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -83,7 +83,7 @@ public class TestElvenArcher {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestFaerieDragon.java b/src/test/java/com/hearthsim/test/minion/TestFaerieDragon.java
index a4e8a75..28b476f 100644
--- a/src/test/java/com/hearthsim/test/minion/TestFaerieDragon.java
+++ b/src/test/java/com/hearthsim/test/minion/TestFaerieDragon.java
@@ -7,7 +7,7 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -84,7 +84,7 @@ public class TestFaerieDragon {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -107,7 +107,7 @@ public class TestFaerieDragon {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestFelguard.java b/src/test/java/com/hearthsim/test/minion/TestFelguard.java
index 7db6384..d9b2a91 100644
--- a/src/test/java/com/hearthsim/test/minion/TestFelguard.java
+++ b/src/test/java/com/hearthsim/test/minion/TestFelguard.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -80,7 +80,7 @@ public class TestFelguard {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -107,7 +107,7 @@ public class TestFelguard {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestFlameImp.java b/src/test/java/com/hearthsim/test/minion/TestFlameImp.java
index 164af58..822ccc1 100644
--- a/src/test/java/com/hearthsim/test/minion/TestFlameImp.java
+++ b/src/test/java/com/hearthsim/test/minion/TestFlameImp.java
@@ -7,7 +7,7 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -81,7 +81,7 @@ public class TestFlameImp {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -108,7 +108,7 @@ public class TestFlameImp {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestFlesheatingGhoul.java b/src/test/java/com/hearthsim/test/minion/TestFlesheatingGhoul.java
index d9b342f..b54b7eb 100644
--- a/src/test/java/com/hearthsim/test/minion/TestFlesheatingGhoul.java
+++ b/src/test/java/com/hearthsim/test/minion/TestFlesheatingGhoul.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.*;
@@ -87,7 +87,7 @@ public class TestFlesheatingGhoul {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, deck);
 		
@@ -121,7 +121,7 @@ public class TestFlesheatingGhoul {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, deck);
 		
@@ -160,7 +160,7 @@ public class TestFlesheatingGhoul {
 
 		
 		//---------------------------------------------------------------
-		Minion attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		ret = attacker.attack(PlayerSide.WAITING_PLAYER, target, board, deck, deck);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestFrostwolfWarlord.java b/src/test/java/com/hearthsim/test/minion/TestFrostwolfWarlord.java
index 53bb44d..b5a65cf 100644
--- a/src/test/java/com/hearthsim/test/minion/TestFrostwolfWarlord.java
+++ b/src/test/java/com/hearthsim/test/minion/TestFrostwolfWarlord.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.FrostwolfWarlord;
@@ -59,7 +59,7 @@ public class TestFrostwolfWarlord {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -78,7 +78,7 @@ public class TestFrostwolfWarlord {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestGnomishInventor.java b/src/test/java/com/hearthsim/test/minion/TestGnomishInventor.java
index 739a249..6da06ca 100644
--- a/src/test/java/com/hearthsim/test/minion/TestGnomishInventor.java
+++ b/src/test/java/com/hearthsim/test/minion/TestGnomishInventor.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
@@ -68,7 +68,7 @@ public class TestGnomishInventor {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -87,7 +87,7 @@ public class TestGnomishInventor {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestGrimscaleOracle.java b/src/test/java/com/hearthsim/test/minion/TestGrimscaleOracle.java
index 78fba0d..248ace6 100644
--- a/src/test/java/com/hearthsim/test/minion/TestGrimscaleOracle.java
+++ b/src/test/java/com/hearthsim/test/minion/TestGrimscaleOracle.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.GrimscaleOracle;
@@ -59,7 +59,7 @@ public class TestGrimscaleOracle {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -78,7 +78,7 @@ public class TestGrimscaleOracle {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -108,7 +108,7 @@ public class TestGrimscaleOracle {
 		
 		board.data_.placeMinion(PlayerSide.CURRENT_PLAYER, new MurlocRaider());
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestGurubashiBerserker.java b/src/test/java/com/hearthsim/test/minion/TestGurubashiBerserker.java
index 81ea956..faf7f6a 100644
--- a/src/test/java/com/hearthsim/test/minion/TestGurubashiBerserker.java
+++ b/src/test/java/com/hearthsim/test/minion/TestGurubashiBerserker.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.GurubashiBerserker;
@@ -59,7 +59,7 @@ public class TestGurubashiBerserker {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -78,7 +78,7 @@ public class TestGurubashiBerserker {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -106,7 +106,7 @@ public class TestGurubashiBerserker {
 	@Test
 	public void test3() throws HSException {
 			
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -131,7 +131,7 @@ public class TestGurubashiBerserker {
 		assertEquals(PlayerSide.WAITING_PLAYER.getPlayer(board).getMinions().get(1).getTotalAttack(), attack0);
 		
 		HearthTreeNode flipped = new HearthTreeNode(board.data_.flipPlayers());
-		Minion minion = flipped.data_.getCurrentPlayer().getMinions().get(0);
+		Minion minion = (Minion) flipped.data_.getCurrentPlayer().getMinions().get(0);
 		target = flipped.data_.getCharacter(PlayerSide.WAITING_PLAYER, 2);
 		ret = minion.attack(PlayerSide.WAITING_PLAYER, target, flipped, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestHoundmaster.java b/src/test/java/com/hearthsim/test/minion/TestHoundmaster.java
index 897713b..4c7330b 100644
--- a/src/test/java/com/hearthsim/test/minion/TestHoundmaster.java
+++ b/src/test/java/com/hearthsim/test/minion/TestHoundmaster.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Beast;
 import com.hearthsim.card.minion.Minion;
@@ -94,7 +94,7 @@ public class TestHoundmaster {
 		
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode res;
-		Minion target = null;
+		BaseEntity target = null;
 		
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		res = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestIronbeakOwl.java b/src/test/java/com/hearthsim/test/minion/TestIronbeakOwl.java
index 732e556..e1e7794 100644
--- a/src/test/java/com/hearthsim/test/minion/TestIronbeakOwl.java
+++ b/src/test/java/com/hearthsim/test/minion/TestIronbeakOwl.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.*;
@@ -87,7 +87,7 @@ public class TestIronbeakOwl {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, deck);
 		
@@ -123,7 +123,7 @@ public class TestIronbeakOwl {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, deck);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestLeperGnome.java b/src/test/java/com/hearthsim/test/minion/TestLeperGnome.java
index 2b6e433..5c9b7bc 100644
--- a/src/test/java/com/hearthsim/test/minion/TestLeperGnome.java
+++ b/src/test/java/com/hearthsim/test/minion/TestLeperGnome.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -82,7 +82,7 @@ public class TestLeperGnome {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -111,7 +111,7 @@ public class TestLeperGnome {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -141,7 +141,7 @@ public class TestLeperGnome {
 		
 		//----------------------------------------------------------
 		
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		assertTrue(minion instanceof LeperGnome);
 		
 		minion.hasAttacked(false);
@@ -169,7 +169,7 @@ public class TestLeperGnome {
 
 		//----------------------------------------------------------
 		
-		minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1);
+		minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1);
 		
 		minion.hasAttacked(false);
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3);
diff --git a/src/test/java/com/hearthsim/test/minion/TestLootHorder.java b/src/test/java/com/hearthsim/test/minion/TestLootHorder.java
index 010aaab..f9ffc51 100644
--- a/src/test/java/com/hearthsim/test/minion/TestLootHorder.java
+++ b/src/test/java/com/hearthsim/test/minion/TestLootHorder.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Hero;
 import com.hearthsim.card.minion.Minion;
diff --git a/src/test/java/com/hearthsim/test/minion/TestNorthshireCleric.java b/src/test/java/com/hearthsim/test/minion/TestNorthshireCleric.java
index ee4eec1..285b94d 100644
--- a/src/test/java/com/hearthsim/test/minion/TestNorthshireCleric.java
+++ b/src/test/java/com/hearthsim/test/minion/TestNorthshireCleric.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.NorthshireCleric;
@@ -96,7 +96,7 @@ public class TestNorthshireCleric {
 		NorthshireCleric fb = new NorthshireCleric();
 		board.data_.placeCardHandCurrentPlayer(fb);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -165,7 +165,7 @@ public class TestNorthshireCleric {
 		board.data_.placeCardHandCurrentPlayer(fb1);
 		board.data_.placeCardHandCurrentPlayer(fb2);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestRaidLeader.java b/src/test/java/com/hearthsim/test/minion/TestRaidLeader.java
index ac67fe5..9d50302 100644
--- a/src/test/java/com/hearthsim/test/minion/TestRaidLeader.java
+++ b/src/test/java/com/hearthsim/test/minion/TestRaidLeader.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BloodfenRaptor;
@@ -78,7 +78,7 @@ public class TestRaidLeader {
 	@Test
 	public void test1() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -111,7 +111,7 @@ public class TestRaidLeader {
 	@Test
 	public void test2() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -172,7 +172,7 @@ public class TestRaidLeader {
 	@Test
 	public void test3() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestScarletCrusader.java b/src/test/java/com/hearthsim/test/minion/TestScarletCrusader.java
index b533ae1..656239d 100644
--- a/src/test/java/com/hearthsim/test/minion/TestScarletCrusader.java
+++ b/src/test/java/com/hearthsim/test/minion/TestScarletCrusader.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -82,7 +82,7 @@ public class TestScarletCrusader {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -114,7 +114,7 @@ public class TestScarletCrusader {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -148,7 +148,7 @@ public class TestScarletCrusader {
 		// stay on
 		//------------------------------------------------------------
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
-		Minion m0 = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion m0 = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		m0.hasAttacked(false);
 		ret = m0.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -180,7 +180,7 @@ public class TestScarletCrusader {
 		//Attacking with divine shield
 		//------------------------------------------------------------
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3);
-		Minion m1 = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion m1 = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		m1.hasAttacked(false);
 		ret = m1.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -212,7 +212,7 @@ public class TestScarletCrusader {
 		//Being attacked with a divine shield
 		//------------------------------------------------------------
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 1);
-		Minion m2 = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1);
+		Minion m2 = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1);
 		m2.hasAttacked(false);
 		ret = m2.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -244,7 +244,7 @@ public class TestScarletCrusader {
 		//Being attacked with a divine shield that wore off
 		//------------------------------------------------------------
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3);
-		Minion m3 = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion m3 = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		m3.hasAttacked(false);
 		ret = m3.attack(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestShatteredSunCleric.java b/src/test/java/com/hearthsim/test/minion/TestShatteredSunCleric.java
index c6f8f03..4e45cb9 100644
--- a/src/test/java/com/hearthsim/test/minion/TestShatteredSunCleric.java
+++ b/src/test/java/com/hearthsim/test/minion/TestShatteredSunCleric.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -83,7 +83,7 @@ public class TestShatteredSunCleric {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -114,7 +114,7 @@ public class TestShatteredSunCleric {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestStormwindChampion.java b/src/test/java/com/hearthsim/test/minion/TestStormwindChampion.java
index 4cb1b44..d8a620c 100644
--- a/src/test/java/com/hearthsim/test/minion/TestStormwindChampion.java
+++ b/src/test/java/com/hearthsim/test/minion/TestStormwindChampion.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BloodfenRaptor;
@@ -79,7 +79,7 @@ public class TestStormwindChampion {
 	@Test
 	public void test1() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -119,7 +119,7 @@ public class TestStormwindChampion {
 	@Test
 	public void test2() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -193,7 +193,7 @@ public class TestStormwindChampion {
 	@Test
 	public void test3() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -350,7 +350,7 @@ public class TestStormwindChampion {
 	@Test
 	public void test4() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestStranglethornTiger.java b/src/test/java/com/hearthsim/test/minion/TestStranglethornTiger.java
index 9379b8c..125544d 100644
--- a/src/test/java/com/hearthsim/test/minion/TestStranglethornTiger.java
+++ b/src/test/java/com/hearthsim/test/minion/TestStranglethornTiger.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
diff --git a/src/test/java/com/hearthsim/test/minion/TestSunfuryProtector.java b/src/test/java/com/hearthsim/test/minion/TestSunfuryProtector.java
index 6090f83..63bc442 100644
--- a/src/test/java/com/hearthsim/test/minion/TestSunfuryProtector.java
+++ b/src/test/java/com/hearthsim/test/minion/TestSunfuryProtector.java
@@ -7,7 +7,7 @@ import static org.junit.Assert.assertTrue;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BloodfenRaptor;
@@ -82,7 +82,7 @@ public class TestSunfuryProtector {
 	@Test
 	public void test0() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
@@ -119,7 +119,7 @@ public class TestSunfuryProtector {
 	@Test
 	public void test1() throws HSException {
 
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestTheBlackKnight.java b/src/test/java/com/hearthsim/test/minion/TestTheBlackKnight.java
index ffb32bc..604b7ee 100644
--- a/src/test/java/com/hearthsim/test/minion/TestTheBlackKnight.java
+++ b/src/test/java/com/hearthsim/test/minion/TestTheBlackKnight.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.Abomination;
@@ -95,7 +95,7 @@ public class TestTheBlackKnight {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, deck);
 		
@@ -132,7 +132,7 @@ public class TestTheBlackKnight {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, deck);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestUndertaker.java b/src/test/java/com/hearthsim/test/minion/TestUndertaker.java
index 2a07d38..10bd8ea 100644
--- a/src/test/java/com/hearthsim/test/minion/TestUndertaker.java
+++ b/src/test/java/com/hearthsim/test/minion/TestUndertaker.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -83,7 +83,7 @@ public class TestUndertaker {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -114,7 +114,7 @@ public class TestUndertaker {
 		
 		//null case
 		{
-			Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+			BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 			Card theCard = board.data_.getCurrentPlayerCardHand(0);
 			HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 			
@@ -143,7 +143,7 @@ public class TestUndertaker {
 		
 		board.data_.placeCardHandCurrentPlayer(new LootHoarder());
 		{
-			Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
+			BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 3);
 			Card theCard = board.data_.getCurrentPlayerCardHand(0);
 			HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 			assertFalse(ret == null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestUnstableGhoul.java b/src/test/java/com/hearthsim/test/minion/TestUnstableGhoul.java
index c11188f..bc97329 100644
--- a/src/test/java/com/hearthsim/test/minion/TestUnstableGhoul.java
+++ b/src/test/java/com/hearthsim/test/minion/TestUnstableGhoul.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -81,7 +81,7 @@ public class TestUnstableGhoul {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -112,7 +112,7 @@ public class TestUnstableGhoul {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -145,7 +145,7 @@ public class TestUnstableGhoul {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -175,7 +175,7 @@ public class TestUnstableGhoul {
 		
 		//attack the Ogre... deal 1 damage to all
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3);
-		Minion attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		attacker.hasAttacked(false);
 		ret = attacker.attack(PlayerSide.WAITING_PLAYER, target, ret, null, null);
 
@@ -208,7 +208,7 @@ public class TestUnstableGhoul {
 	public void test3() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -238,7 +238,7 @@ public class TestUnstableGhoul {
 		
 		//Silence the Unstable Ghoul first, then attack with it
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3);
-		Minion attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity attacker = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		attacker.silenced(PlayerSide.CURRENT_PLAYER, board);
 		attacker.hasAttacked(false);
 		ret = attacker.attack(PlayerSide.WAITING_PLAYER, target, ret, null, null);
diff --git a/src/test/java/com/hearthsim/test/minion/TestVioletTeacher.java b/src/test/java/com/hearthsim/test/minion/TestVioletTeacher.java
index 4d09127..f105f25 100644
--- a/src/test/java/com/hearthsim/test/minion/TestVioletTeacher.java
+++ b/src/test/java/com/hearthsim/test/minion/TestVioletTeacher.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -80,7 +80,7 @@ public class TestVioletTeacher {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -107,7 +107,7 @@ public class TestVioletTeacher {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestWaterElemental.java b/src/test/java/com/hearthsim/test/minion/TestWaterElemental.java
index 0e38df6..f65106c 100644
--- a/src/test/java/com/hearthsim/test/minion/TestWaterElemental.java
+++ b/src/test/java/com/hearthsim/test/minion/TestWaterElemental.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -80,7 +80,7 @@ public class TestWaterElemental {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -107,7 +107,7 @@ public class TestWaterElemental {
 	public void test2() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -135,7 +135,7 @@ public class TestWaterElemental {
 		
 		//----------------------------------------------------------
 		
-		Minion waterElemental = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion waterElemental = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		assertTrue(waterElemental instanceof WaterElemental);
 		
 		waterElemental.hasAttacked(false);
diff --git a/src/test/java/com/hearthsim/test/minion/TestWindspeaker.java b/src/test/java/com/hearthsim/test/minion/TestWindspeaker.java
index 4bb5992..65e067e 100644
--- a/src/test/java/com/hearthsim/test/minion/TestWindspeaker.java
+++ b/src/test/java/com/hearthsim/test/minion/TestWindspeaker.java
@@ -5,7 +5,7 @@ import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -84,7 +84,7 @@ public class TestWindspeaker {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -116,7 +116,7 @@ public class TestWindspeaker {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestYoungPriestess.java b/src/test/java/com/hearthsim/test/minion/TestYoungPriestess.java
index e9121be..c40a8c8 100644
--- a/src/test/java/com/hearthsim/test/minion/TestYoungPriestess.java
+++ b/src/test/java/com/hearthsim/test/minion/TestYoungPriestess.java
@@ -6,7 +6,7 @@ import org.junit.Before;
 import org.junit.Test;
 
 import com.hearthsim.Game;
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -81,7 +81,7 @@ public class TestYoungPriestess {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -106,7 +106,7 @@ public class TestYoungPriestess {
 	public void test1() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
diff --git a/src/test/java/com/hearthsim/test/minion/TestZombieChow.java b/src/test/java/com/hearthsim/test/minion/TestZombieChow.java
index 51dd6a1..1ad55d0 100644
--- a/src/test/java/com/hearthsim/test/minion/TestZombieChow.java
+++ b/src/test/java/com/hearthsim/test/minion/TestZombieChow.java
@@ -1,6 +1,6 @@
 package com.hearthsim.test.minion;
 
-import com.hearthsim.card.Card;
+import com.hearthsim.card.Card;import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.minion.concrete.BoulderfistOgre;
@@ -82,7 +82,7 @@ public class TestZombieChow {
 	public void test0() throws HSException {
 		
 		//null case
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -114,7 +114,7 @@ public class TestZombieChow {
 		board.data_.getCurrentPlayerHero().setHealth((byte)15);
 		board.data_.getWaitingPlayerHero().setHealth((byte)15);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -144,7 +144,7 @@ public class TestZombieChow {
 		
 		//----------------------------------------------------------
 		
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		assertTrue(minion instanceof ZombieChow);
 		
 		minion.hasAttacked(false);
@@ -172,7 +172,7 @@ public class TestZombieChow {
 
 		//----------------------------------------------------------
 		
-		minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1);
+		minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(1);
 		
 		minion.hasAttacked(false);
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 3);
@@ -204,7 +204,7 @@ public class TestZombieChow {
 		board.data_.getCurrentPlayerHero().setHealth((byte)15);
 		board.data_.getWaitingPlayerHero().setHealth((byte)15);
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 2);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -234,7 +234,7 @@ public class TestZombieChow {
 		
 		//----------------------------------------------------------
 		
-		Minion minion = PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
+		Minion minion = (Minion) PlayerSide.CURRENT_PLAYER.getPlayer(board).getMinions().get(2);
 		assertTrue(minion instanceof ZombieChow);
 		
 		minion.hasAttacked(false);
diff --git a/src/test/java/com/hearthsim/test/testCard.java b/src/test/java/com/hearthsim/test/testCard.java
index cdb5b30..6827454 100644
--- a/src/test/java/com/hearthsim/test/testCard.java
+++ b/src/test/java/com/hearthsim/test/testCard.java
@@ -2,6 +2,8 @@ package com.hearthsim.test;
 
 import com.hearthsim.card.Card;
 import com.hearthsim.card.minion.Minion;
+import com.hearthsim.entity.BaseEntity;
+
 import org.junit.Test;
 
 import static org.junit.Assert.assertFalse;
@@ -78,14 +80,14 @@ public class testCard {
 		assertFalse("test7", minion0.equals(minion7));
 		
 		
-		Minion minion0_clone = (Minion)minion0.deepCopy();
-		Minion minion1_clone = (Minion)minion1.deepCopy();
-		Minion minion2_clone = (Minion)minion2.deepCopy();
-		Minion minion3_clone = (Minion)minion3.deepCopy();
-		Minion minion4_clone = (Minion)minion4.deepCopy();
-		Minion minion5_clone = (Minion)minion5.deepCopy();
-		Minion minion6_clone = (Minion)minion6.deepCopy();
-		Minion minion7_clone = (Minion)minion7.deepCopy();
+		BaseEntity minion0_clone = (BaseEntity) minion0.deepCopy();
+		BaseEntity minion1_clone = (BaseEntity) minion1.deepCopy();
+		BaseEntity minion2_clone = (BaseEntity) minion2.deepCopy();
+		BaseEntity minion3_clone = (BaseEntity) minion3.deepCopy();
+		BaseEntity minion4_clone = (BaseEntity) minion4.deepCopy();
+		BaseEntity minion5_clone = (BaseEntity) minion5.deepCopy();
+		BaseEntity minion6_clone = (BaseEntity) minion6.deepCopy();
+		BaseEntity minion7_clone = (BaseEntity) minion7.deepCopy();
 		
 		assertTrue("test_clone_0", minion0.equals(minion0_clone) && minion0_clone.equals(minion0));
 		assertTrue("test_clone_1", minion1.equals(minion1_clone) && minion1_clone.equals(minion1));
diff --git a/src/test/java/com/hearthsim/test/testGame.java b/src/test/java/com/hearthsim/test/testGame.java
index 8f13c43..69be9d3 100644
--- a/src/test/java/com/hearthsim/test/testGame.java
+++ b/src/test/java/com/hearthsim/test/testGame.java
@@ -1,5 +1,6 @@
 package com.hearthsim.test;
 
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.Game;
 import com.hearthsim.card.Card;
 import com.hearthsim.card.Deck;
@@ -43,8 +44,8 @@ public class testGame {
 		int nt = 0;
 		while (nt < numTaunts_) {
 			int irand = (int)(Math.random() * numCardsInDeck_);
-			if (!((Minion)cards1_[irand]).getTaunt()) {
-				((Minion)cards1_[irand]).setTaunt(true);
+			if (!((BaseEntity)cards1_[irand]).getTaunt()) {
+				((BaseEntity)cards1_[irand]).setTaunt(true);
 				++nt;
 			}
 		}
diff --git a/src/test/java/com/hearthsim/test/weapon/TestFieryWarAxe.java b/src/test/java/com/hearthsim/test/weapon/TestFieryWarAxe.java
index 7d74b39..a67081a 100644
--- a/src/test/java/com/hearthsim/test/weapon/TestFieryWarAxe.java
+++ b/src/test/java/com/hearthsim/test/weapon/TestFieryWarAxe.java
@@ -5,6 +5,7 @@ import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.TheCoin;
 import com.hearthsim.card.weapon.concrete.FieryWarAxe;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -54,7 +55,7 @@ public class TestFieryWarAxe {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -74,7 +75,7 @@ public class TestFieryWarAxe {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -93,7 +94,7 @@ public class TestFieryWarAxe {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -112,7 +113,7 @@ public class TestFieryWarAxe {
 		
 		
 		
-		Minion hero = ret.data_.getCurrentPlayerHero();
+		BaseEntity hero = ret.data_.getCurrentPlayerHero();
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		ret = hero.attack(PlayerSide.WAITING_PLAYER, target, ret, deck, null);
 
diff --git a/src/test/java/com/hearthsim/test/weapon/TestLightsJustice.java b/src/test/java/com/hearthsim/test/weapon/TestLightsJustice.java
index 4eacac4..19a6774 100644
--- a/src/test/java/com/hearthsim/test/weapon/TestLightsJustice.java
+++ b/src/test/java/com/hearthsim/test/weapon/TestLightsJustice.java
@@ -5,6 +5,7 @@ import com.hearthsim.card.Deck;
 import com.hearthsim.card.minion.Minion;
 import com.hearthsim.card.spellcard.concrete.TheCoin;
 import com.hearthsim.card.weapon.concrete.LightsJustice;
+import com.hearthsim.entity.BaseEntity;
 import com.hearthsim.exception.HSException;
 import com.hearthsim.model.BoardModel;
 import com.hearthsim.model.PlayerSide;
@@ -55,7 +56,7 @@ public class TestLightsJustice {
 	@Test
 	public void test0() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.WAITING_PLAYER, target, board, deck, null);
 		
@@ -75,7 +76,7 @@ public class TestLightsJustice {
 	@Test
 	public void test1() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 1);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -94,7 +95,7 @@ public class TestLightsJustice {
 	@Test
 	public void test2() throws HSException {
 		
-		Minion target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
+		BaseEntity target = board.data_.getCharacter(PlayerSide.CURRENT_PLAYER, 0);
 		Card theCard = board.data_.getCurrentPlayerCardHand(0);
 		HearthTreeNode ret = theCard.useOn(PlayerSide.CURRENT_PLAYER, target, board, deck, null);
 		
@@ -113,7 +114,7 @@ public class TestLightsJustice {
 		
 		
 		
-		Minion hero = ret.data_.getCurrentPlayerHero();
+		BaseEntity hero = ret.data_.getCurrentPlayerHero();
 		target = board.data_.getCharacter(PlayerSide.WAITING_PLAYER, 0);
 		ret = hero.attack(PlayerSide.WAITING_PLAYER, target, ret, deck, null);
 
-- 
1.8.4.msysgit.0

